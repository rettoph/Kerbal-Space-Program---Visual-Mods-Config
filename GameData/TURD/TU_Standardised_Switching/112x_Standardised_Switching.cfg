// Aero
// Squad/Parts/Aero/aerodynamicNoseCone

@PART[noseCone]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_noseCone_BW
		textureSet = Stock_Default_noseCone_BW
		textureSet = Stock_Default_noseCone_D
		textureSet = Stock_Default_noseCone_W
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_noseCone_BW
	@MATERIAL
	{
		mesh = Cone
		
		texture = _MainTex,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_diffuse_O
		texture = _BumpMap,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_normal_O
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_noseCone_D
	@MATERIAL
	{
		mesh = Cone
		
		texture = _MainTex,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_diffuse
		texture = _BumpMap,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_noseCone_W
	@MATERIAL
	{
		mesh = Cone
		
		texture = _MainTex,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_diffuse_W
		texture = _BumpMap,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/airbrake/

@PART[airbrake1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_airbrake1
		textureSet = Stock_Default_airbrake1
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_airbrake1
	@MATERIAL
	{
		mesh = Base
		mesh = Flap
		mesh = PistonArm
		mesh = PistonBase
		
		texture = _MainTex,Squad/Parts/Aero/airbrake/Airbrake
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/airIntakeRadialXM-G50/

@PART[airScoop]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_airScoop
		textureSet = Stock_Default_airScoop
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_airScoop
	@MATERIAL
	{
		mesh = RadialIntake
		
		texture = _MainTex,Squad/Parts/Aero/airIntakeRadialXM-G50/RadialIntake
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/airlinerWings/

@PART[airlinerCtrlSrf,airlinerMainWing,airlinerTailFin]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_airliner_wings
		textureSet = Stock_Default_airliner_wings
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_airliner_wings
	@MATERIAL
	{
		// excludeMesh = FLAG
		mesh = ControlSurface
		mesh = Wing
		mesh = ctrlSrf
		mesh = Tailfin
		
		texture = _MainTex,Squad/Parts/Aero/airlinerWings/AirlinerWings
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/airplaneFins

@PART[AdvancedCanard,CanardController,sweptWing,tailfin]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_airplaneFins
		textureSet = Stock_Default_airplaneFins
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_airplaneFins
	@MATERIAL
	{
		mesh = Base
		mesh = Base2
		mesh = ctrlSrf
		mesh = ctrlSrf2
		mesh = swept
		
		texture = _MainTex,Squad/Parts/Aero/airplaneFins/AirplaneFins
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/basicFin

@PART[basicFin]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_basicFin
		textureSet = Stock_Default_basicFin
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_basicFin
	@MATERIAL
	{
		mesh = Fin
		
		texture = _MainTex,Squad/Parts/Aero/basicFin/BasicFin
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/circularIntake/

@PART[CircularIntake,shockConeIntake]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Circular_Intakes
		textureSet = Stock_Default_Circular_Intakes
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Circular_Intakes
	@MATERIAL
	{
		mesh = FanIntake
		mesh = ConeIntake
		
		texture = _MainTex,Squad/Parts/Aero/circularIntake/CircluarIntakes
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Aero/circularIntake/CircluarIntakes_Heat
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/cones/Assets/

@PART[avionicsNoseCone,noseConeAdapter,airplaneTail,airplaneTailB]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Cones1
		textureSet = Stock_Default_Cones1
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Cones1
	@MATERIAL
	{
		mesh = Cone
		
		texture = _MainTex,Squad/Parts/Aero/cones/Assets/Cones
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Aero/cones/Assets/Cones_Heat
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

@PART[standardNoseCone]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Cones2
		textureSet = Stock_Default_Cones2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Cones2
	@MATERIAL
	{
		mesh = Cone
		
		texture = _MainTex,Squad/Parts/Aero/cones/Assets/Cones
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Aero/cones/Assets/Cones_Heat
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

@PART[pointyNoseConeA,pointyNoseConeB]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_NewCones_W
		textureSet = Stock_Default_NewCones_W
		textureSet = Stock_Default_NewCones_BW
		textureSet = Stock_Default_NewCones_O
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_NewCones_W
	@MATERIAL
	{
		mesh = Cone
		
		texture = _MainTex,Squad/Parts/Aero/cones/Assets/ConesDiffuse_White
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Aero/cones/Assets/ConesHeat_White
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_NewCones_BW
	@MATERIAL
	{
		mesh = Cone
		
		texture = _MainTex,Squad/Parts/Aero/cones/Assets/ConesDiffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Aero/cones/Assets/ConesHeat
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_NewCones_O
	@MATERIAL
	{
		mesh = Cone
		
		texture = _MainTex,Squad/Parts/Aero/cones/Assets/ConesDiffuse_Orange
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Aero/cones/Assets/ConesHeat_Orange
	}
}

// Used to be // Squad/Parts/Aero/protectiveRocketNoseMk7/
// NOW // Squad/Parts/Aero/cones/

// @PART[rocketNoseCone_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
// {
	// MODULE
	// {
		// name = KSPTextureSwitch
		// sectionName = Appearance
		// currentTextureSet = Stock_Default_rocketNoseCone_v2_W
		// textureSet = Stock_Default_rocketNoseCone_v2_W
		// textureSet = Stock_Default_rocketNoseCone_v2_BW
		// textureSet = Stock_Default_rocketNoseCone_v2_O
	// }
	// %MODULE[SSTURecolorGUI]
	// {
		// %name = SSTURecolorGUI
	// }
// }

@PART[rocketNoseCone_v2,rocketNoseCone_v3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[White]
		{
			!TEXTURE,*{}
			EXTRA_INFO
			{
				textureSet = Stock_Default_rocketNoseCone_v2_W
			}
		}
		@VARIANT[BlackAndWhite]
		{
			!TEXTURE,*{}
			EXTRA_INFO
			{
				textureSet = Stock_Default_rocketNoseCone_v2_BW
			}
		}
		@VARIANT[Orange]
		{
			!TEXTURE,*{}
			EXTRA_INFO
			{
				textureSet = Stock_Default_rocketNoseCone_v2_O
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_rocketNoseCone_v2_W
	@MATERIAL
	{
		mesh = nose
		
		texture = _MainTex,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_diffuse_W
		texture = _BumpMap,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_rocketNoseCone_v2_BW
	@MATERIAL
	{
		mesh = nose
		
		texture = _MainTex,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_diffuse
		texture = _BumpMap,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_rocketNoseCone_v2_O
	// @MATERIAL
	// {
		// mesh = nose
		
		// texture = _MainTex,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_diffuse_O
		// texture = _BumpMap,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_normal_O
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// // texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	// }
// }
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_rocketNoseCone_v2_O
	@MATERIAL
	{
		mesh = foamCone
		
		texture = _MainTex,Squad/Parts/Aero/cones/Assets/rocketNoseCones_O
		texture = _BumpMap,Squad/Parts/Aero/cones/Assets/rocketNoseCones_O_Normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

//Used to be // Squad/Parts/Aero/protectiveRocketNoseMk12/
// NOW // Squad/Parts/Aero/cones/

@PART[rocketNoseConeSize3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[White]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_rocketNoseConeSize3_W
			}
		}
		@VARIANT[Orange]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_rocketNoseConeSize3_O
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_rocketNoseConeSize3_W
	@MATERIAL
	{
		mesh = nose
		
		texture = _MainTex,Squad/Parts/Aero/cones/Assets/rocketNoseCones_W
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_rocketNoseConeSize3_O
	@MATERIAL
	{
		mesh = foamCone
		
		texture = _MainTex,Squad/Parts/Aero/cones/Assets/rocketNoseCones_O
		texture = _BumpMap,Squad/Parts/Aero/cones/Assets/rocketNoseCones_O_Normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/fairings

@PART[fairingSize1,fairingSize2,fairingSize3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[White]
		{
			!TEXTURE,*{}
			!EXTRA_INFO,*{}
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Fairings_Base_W
				textureSet1 = Stock_Default_Fairings_Truss_W
				textureSet2 = Stock_Default_Fairings_Fairing_W
			}
		}
		@VARIANT[BlackAndWhite]
		{
			!TEXTURE,*{}
			!EXTRA_INFO,*{}
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Fairings_Base_BW
				textureSet1 = Stock_Default_Fairings_Truss_W
				textureSet2 = Stock_Default_Fairings_Fairing_BW
			}
		}
		@VARIANT[Orange]
		{
			!TEXTURE,*{}
			!EXTRA_INFO,*{}
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Fairings_Base_O
				textureSet1 = Stock_Default_Fairings_Truss_W
				textureSet2 = Stock_Default_Fairings_Fairing_O
			}
		}
		@VARIANT[Gold]
		{
			!TEXTURE,*{}
			!EXTRA_INFO,*{}
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Fairings_Base_G
				textureSet1 = Stock_Default_Fairings_Truss_W
				textureSet2 = Stock_Default_Fairings_Fairing_G
			}
		}
		@VARIANT[Silver]
		{
			!TEXTURE,*{}
			!EXTRA_INFO,*{}
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Fairings_Base_S
				textureSet1 = Stock_Default_Fairings_Truss_W
				textureSet2 = Stock_Default_Fairings_Fairing_S
			}
		}
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Base
		moduleIndex = 0
		// stockFairing = true
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Truss
		moduleIndex = 1
		// stockFairing = true
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Fairing
		moduleIndex = 2
		stockFairing = true
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}

// "White"

+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Fairings_Base_W
	@title = Stock Default Fairings Base W
	@MATERIAL
	{
		mesh = Mesh
		
		texture = _MainTex,Squad/Parts/Aero/fairings/FairingBase
		texture = _BumpMap,Squad/Parts/Aero/fairings/FairingBaseNormals
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Fairings_Truss_W
	@title = Stock Default Fairings Truss W
	@MATERIAL
	{
		mesh = Cap1
		mesh = Cap2
		mesh = Cap3
		mesh = Cap4
		mesh = Cap5
		mesh = Cap6
		mesh = Truss1
		mesh = Truss2
		mesh = Truss3
		mesh = Truss4
		mesh = Truss5
		mesh = Truss6
		
		texture = _MainTex,Squad/Parts/Aero/fairings/AutoTruss
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Fairings_Fairing_W
	@title = Stock Default Fairings Fairing W
	@MATERIAL
	{
		mesh = FairingPanel
		
		texture = _MainTex,Squad/Parts/Aero/fairings/fairings_diff
		texture = _BumpMap,Squad/Parts/Aero/fairings/fairings_normals
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// "Black and White"

+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Fairings_Base_BW
	@title = Stock Default Fairings Base BW
	@MATERIAL
	{
		mesh = Mesh
		
		texture = _MainTex,Squad/Parts/Aero/fairings/FairingBase_bw
		texture = _BumpMap,Squad/Parts/Aero/fairings/FairingBaseNormals_bw
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Fairings_Fairing_BW
	@title = Stock Default Fairings Fairing BW
	@MATERIAL
	{
		mesh = FairingPanel
		
		texture = _MainTex,Squad/Parts/Aero/fairings/fairings_diff_grey
		texture = _BumpMap,Squad/Parts/Aero/fairings/fairings_grey_normals
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// "Orange"

+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Fairings_Base_O
	@title = Stock Default Fairings Base O
	@MATERIAL
	{
		mesh = Mesh
		
		texture = _MainTex,Squad/Parts/Aero/fairings/FairingBase_orange
		texture = _BumpMap,Squad/Parts/Aero/fairings/FairingBaseNormals_orange
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Fairings_Fairing_O
	@title = Stock Default Fairings Fairing O
	@MATERIAL
	{
		mesh = FairingPanel
		
		texture = _MainTex,Squad/Parts/Aero/fairings/fairings_diff_orange
		texture = _BumpMap,Squad/Parts/Aero/fairings/fairings_orange_normals
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// "Gold"

+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Fairings_Base_G
	@title = Stock Default Fairings Base G
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = Mesh
		
		// Properties
		
		PROPERTY
		{
        name = _Shininess
        float = 0.82
		}
		PROPERTY
		{
        name = _Opacity
        float = 1.0
		}
		PROPERTY
		{
        name = _RimFalloff
        float = 2.0
		}
		PROPERTY
		{
        name = _AmbientMultiplier
        float = 0.3
		}
		
		
		texture = _MainTex,Squad/Parts/Aero/fairings/FairingBase_goldDiffuse
		texture = _BumpMap,Squad/Parts/Aero/fairings/FairingBaseNormals_goldSilver
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _SpecMap,Squad/Parts/Aero/fairings/FairingBase_goldSpecular
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Fairings_Fairing_G
	@title = Stock Default Fairings Fairing G
	@MATERIAL
	{
		mesh = FairingPanel
		
		texture = _MainTex,Squad/Parts/Aero/fairings/fairings_diff
		texture = _BumpMap,Squad/Parts/Aero/fairings/fairings_normals
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// "Silver"

+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Fairings_Base_S
	@title = Stock Default Fairings Base S
	@MATERIAL
	{
		mode = create
		shader = KSP/Bumped Specular (Mapped)
		
		mesh = Mesh
		
		PROPERTY
		{
        name = _Shininess
        float = 0.41
		}
		PROPERTY
		{
        name = _Opacity
        float = 1.0
		}
		PROPERTY
		{
        name = _RimFalloff
        float = 2.0
		}
		PROPERTY
		{
        name = _AmbientMultiplier
        float = 0.3
		}
		
		
		texture = _MainTex,Squad/Parts/Aero/fairings/FairingBase_silverDiffuse
		texture = _BumpMap,Squad/Parts/Aero/fairings/FairingBaseNormals_goldSilver
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _SpecMap,Squad/Parts/Aero/fairings/FairingBase_silverSpecular
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Fairings_Fairing_S
	@title = Stock Default Fairings Fairing S
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = FairingPanel
		
		// PROPERTY
		// {
        // name = _Color
        // color = #ffffff
		// }
		PROPERTY
		{
        name = _Shininess
        float = 0.41
		}
		PROPERTY
		{
        name = _Opacity
        float = 1.0
		}
		PROPERTY
		{
        name = _RimFalloff
        float = 2.0
		}
		PROPERTY
		{
        name = _AmbientMultiplier
        float = 0.3
		}
		
		
		texture = _MainTex,Squad/Parts/Aero/fairings/fairings_silverDiffuse
		texture = _BumpMap,Squad/Parts/Aero/fairings/fairings_normals_silver
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _SpecMap,Squad/Parts/Aero/fairings/FairingsMat_silverSpecular
	}
}

//Squad/Parts/Aero/HeatShield

@PART[HeatShield0,HeatShield1,HeatShield2,HeatShield3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shield
		currentTextureSet = Stock_Default_HeatShields
		textureSet = Stock_Default_HeatShields
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fairing
		currentTextureSet = Stock_Default_HeatShields_Fairing
		textureSet = Stock_Default_HeatShields_Fairing
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_HeatShields
	@MATERIAL
	{
		mesh = 125
		mesh = 250
		mesh = HeatShield
		
		texture = _MainTex,Squad/Parts/Aero/HeatShield/heatshield
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_HeatShields_Fairing
	@MATERIAL
	{
		mesh = fairing
		
		texture = _MainTex,Squad/Parts/Aero/HeatShield/Fairing
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

//Squad/Parts/Aero/InflatableHeatShield

@PART[InflatableHeatShield]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Truss
		currentTextureSet = Stock_Default_InflatableHeatShield_Truss
		textureSet = Stock_Default_InflatableHeatShield_Truss
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shield
		currentTextureSet = Stock_Default_InflatableHeatShield_Shield
		textureSet = Stock_Default_InflatableHeatShield_Shield
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fairing
		currentTextureSet = Stock_Default_InflatableHeatShield_Fairing
		textureSet = Stock_Default_InflatableHeatShield_Fairing
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_InflatableHeatShield_Truss
	@MATERIAL
	{
		mesh = Truss
		
		texture = _MainTex,Squad/Parts/Aero/InflatableHeatShield/HeatShield
		texture = _BumpMap,Squad/Parts/Aero/InflatableHeatShield/HeatShield_NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_InflatableHeatShield_Shield
	@MATERIAL
	{
		mesh = Shield
		
		texture = _MainTex,Squad/Parts/Aero/InflatableHeatShield/HeatShield
		texture = _BumpMap,Squad/Parts/Aero/InflatableHeatShield/HeatShield_NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_InflatableHeatShield_Fairing
	@MATERIAL
	{
		mesh = Fairing
		
		texture = _MainTex,Squad/Parts/Aero/InflatableHeatShield/HeatShieldFairing
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

//Squad/Parts/Aero/intakeRadialLong/

@PART[IntakeRadialLong]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_IntakeRadialLong
		textureSet = Stock_Default_IntakeRadialLong
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_IntakeRadialLong
	@MATERIAL
	{
		mesh = Cube
		
		texture = _MainTex,Squad/Parts/Aero/intakeRadialLong/Radial_Long
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/miniIntake/

@PART[miniIntake]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_miniIntake
		textureSet = Stock_Default_miniIntake
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_miniIntake
	@MATERIAL
	{
		mesh = IntakeMini
		
		texture = _MainTex,Squad/Parts/Aero/miniIntake/SmallIntake
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/ramAirIntake/

@PART[ramAirIntake]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_ramAirIntake
		textureSet = Stock_Default_ramAirIntake
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_ramAirIntake
	@MATERIAL
	{
		mesh = RampIntake
		
		texture = _MainTex,Squad/Parts/Aero/ramAirIntake/RampIntake
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Aero/ramAirIntake/RampIntake_Heat
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/shuttleWings/

@PART[wingShuttleDelta,wingShuttleElevon1,wingShuttleElevon2,wingShuttleRudder,wingShuttleStrake]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_ShuttleWings
		textureSet = Stock_Default_ShuttleWings
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_ShuttleWings
	@MATERIAL
	{
		mesh = DeltaWing
		mesh = Elevon
		mesh = ControlSurface
		mesh = ShuttleRudder
		mesh = Strake
		
		texture = _MainTex,Squad/Parts/Aero/shuttleWings/ShuttleWings
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/wingletAV-R8

@PART[R8winglet]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_R8winglet
		textureSet = Stock_Default_R8winglet
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_R8winglet
	@MATERIAL
	{
		mesh = obj_base
		mesh = obj_ctrlSrf
		
		texture = _MainTex,Squad/Parts/Aero/wingletAV-R8/model000
		texture = _BumpMap,Squad/Parts/Aero/wingletAV-R8/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/wingletAV-T1

@PART[winglet]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_winglet
		textureSet = Stock_Default_winglet
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_winglet
	@MATERIAL
	{
		mesh = winglet
		
		texture = _MainTex,Squad/Parts/Aero/wingletAV-T1/model000
		texture = _BumpMap,Squad/Parts/Aero/wingletAV-T1/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/wingletDeltaDeluxe

@PART[winglet3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_winglet3
		textureSet = Stock_Default_winglet3
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_winglet3
	@MATERIAL
	{
		mesh = obj_ctrlSrf
		mesh = winglet
		
		texture = _MainTex,Squad/Parts/Aero/wingletDeltaDeluxe/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Aero/wings/Wings

@PART[wingConnector,wingConnector2,wingConnector3,wingConnector4,wingConnector5,deltaWing,delta_small,StandardCtrlSrf,elevon2,elevon3,smallCtrlSrf,elevon5,wingStrake,structuralWing,structuralWing2,structuralWing3,structuralWing4,sweptWing1,sweptWing2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_wings
		textureSet = Stock_Default_wings
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_wings
	@MATERIAL
	{
		mesh = Connector1
		mesh = Connector2
		mesh = connector3
		mesh = connector4
		mesh = connector5
		mesh = Delta
		mesh = delta_small
		mesh = Elevon1
		mesh = Elevon2
		mesh = Elevon3
		mesh = Elevon4
		mesh = Elevon5
		mesh = Strake
		mesh = Structural1
		mesh = Structural2
		mesh = structural3
		mesh = structural4
		mesh = Swept1
		mesh = Swept2
		
		texture = _MainTex,Squad/Parts/Aero/wings/Wings
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Cargo
// Squad/Parts/Cargo/CargoContainers cargoContainer

@PART[cargoContainer]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_cargoContainer
		textureSet = Stock_Default_cargoContainer
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_cargoContainer
	@MATERIAL
	{
		mesh = cargo
		
		texture = _MainTex,Squad/Parts/Cargo/CargoContainers/cargoContainer_diff
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

@PART[smallCargoContainer]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_smallCargoContainer
		textureSet = Stock_Default_smallCargoContainer
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_smallCargoContainer
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = smallCargoContainerMesh
		
		texture = _MainTex,Squad/Parts/Cargo/CargoContainers/smallCargoContainer_diffuse
		texture = _BumpMap,Squad/Parts/Cargo/CargoContainers/smallCargoContainer_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Cargo/CargoContainers/smallCargoContainer_specular
	}
}

// Squad/Parts/Cargo/Cylinder

// Squad/Parts/Cargo/GroundAnchor

// Squad/Parts/Cargo/Jetpack

// Squad/Parts/Cargo/Parachute

// Squad/Parts/Cargo/RepairKit

// Squad/Parts/Cargo/ScienceKit

// Squad/Parts/Cargo/StorageUnits

@PART[CargoStorageUnit,ConformalStorageUnit]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_StorageUnits
		textureSet = Stock_Default_StorageUnits
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_StorageUnits
	@MATERIAL
	{
		mesh = CargoStorageUnit
		mesh = ConformalStorageUnit
		
		texture = _MainTex,Squad/Parts/Cargo/StorageUnits/Assets/Cargo_Material_Diffuse
		texture = _BumpMap,Squad/Parts/Cargo/StorageUnits/Assets/Cargo_Material_Normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Command
// Squad/Parts/Command/advancedSasModuleLarge

@PART[asasmodule1-2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_asasmodule1-2
		textureSet = Stock_Default_asasmodule1-2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_asasmodule1-2
	@MATERIAL
	{
		mesh = asas
		
		texture = _MainTex,Squad/Parts/Command/advancedSasModuleLarge/model000
		texture = _BumpMap,Squad/Parts/Command/advancedSasModuleLarge/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/cupola

@PART[cupola]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_cupola
		textureSet = Stock_Default_cupola
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_cupola
	@MATERIAL
	{
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/Command/cupola/ksp_l_cupola_diff
		texture = _BumpMap,Squad/Parts/Command/cupola/ksp_l_cupola_normal
		texture = _Emissive,Squad/Parts/Command/cupola/cupola_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/externalCommandSeat

@PART[seatExternalCmd]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_seatExternalCmd
		textureSet = Stock_Default_seatExternalCmd
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_seatExternalCmd
	@MATERIAL
	{
		mesh = kerbalchair
		
		texture = _MainTex,Squad/Parts/Command/externalCommandSeat/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/hitchhikerStorageContainer

@PART[crewCabin]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_crewCabin
		textureSet = Stock_Default_crewCabin
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_crewCabin
	@MATERIAL
	{
		mesh = cabin
		
		texture = _MainTex,Squad/Parts/Command/hitchhikerStorageContainer/cabin
		texture = _BumpMap,Squad/Parts/Command/hitchhikerStorageContainer/cabin_n
		texture = _Emissive,Squad/Parts/Command/hitchhikerStorageContainer/cabin_Illum
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/inlineAdvancedStabilizer

@PART[advSasModule]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_advSasModule
		textureSet = Stock_Default_advSasModule
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_advSasModule
	@MATERIAL
	{
		mesh = asas
		
		texture = _MainTex,Squad/Parts/Command/inlineAdvancedStabilizer/model000
		texture = _BumpMap,Squad/Parts/Command/inlineAdvancedStabilizer/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/inlineReactionWheel

@PART[sasModule]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_sasModule
		textureSet = Stock_Default_sasModule
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_sasModule
	@MATERIAL
	{
		mesh = sasmodule
		
		texture = _MainTex,Squad/Parts/Command/inlineReactionWheel/model000
		texture = _BumpMap,Squad/Parts/Command/inlineReactionWheel/model001
		texture = _Emissive,Squad/Parts/Command/inlineReactionWheel/model002
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/Mk1-3Pod

@PART[mk1-3pod]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk1-3pod
		textureSet = Stock_Default_mk1-3pod
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_mk1-3pod
	@MATERIAL
	{
		mesh = M1-3
		
		PROPERTY
		{
			name = _Color
			color = 0.8,0.8,0.8
		}
		
		texture = _MainTex,Squad/Parts/Command/Mk1-3Pod/M1-3 Pod
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Command/Mk1-3Pod/M1-3 Pod_GLOW
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/mk1Cockpits/

@PART[Mark1Cockpit,MK1CrewCabin,Mark2Cockpit]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk1Cockpits
		textureSet = Stock_Default_mk1Cockpits
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk1Cockpits
	@MATERIAL
	{
		mesh = Cabin
		mesh = Cockpit
		
		texture = _MainTex,Squad/Parts/Command/mk1Cockpits/Mk1Cockpit
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Command/mk1Cockpits/GLOW
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/mk1LanderCan

@PART[landerCabinSmall]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_landerCabinSmall
		textureSet = Stock_Default_landerCabinSmall
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_landerCabinSmall
	@MATERIAL
	{
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/Command/mk1LanderCan/ksp_s_landerCan_diff
		texture = _BumpMap,Squad/Parts/Command/mk1LanderCan/ksp_s_landerCan_normal
		texture = _Emissive,Squad/Parts/Command/mk1LanderCan/ksp_s_landerCan_psd_illum
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/mk1pod

@PART[mk1pod]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Pod
		currentTextureSet = Stock_Default_mk1pod
		textureSet = Stock_Default_mk1pod
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Hatch
		currentTextureSet = Stock_Default_mk1pod_hatch
		textureSet = Stock_Default_mk1pod_hatch
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk1pod
	@MATERIAL
	{
		// excludeMesh = flagTransform
		mesh = capsule
		// excludeMesh = hatch
		// excludeMesh = window
		// mesh = rung
		
		texture = _MainTex,Squad/Parts/Command/mk1pod/outer shell
		texture = _BumpMap,Squad/Parts/Command/mk1pod/outer shell NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Emissive/Bumped Specular
		
		// excludeMesh = flagTransform
		// mesh = capsule
		// excludeMesh = hatch
		// excludeMesh = window
		mesh = rung
		
		texture = _MainTex,Squad/Parts/Command/mk1pod/ladderrung
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk1pod_hatch
	@MATERIAL
	{
		mesh = hatch
		// excludeMesh = window
		// excludeMesh = rung
		// excludeMesh = capsule
		// excludeMesh = flagTransform
		
		texture = _MainTex,Squad/Parts/Command/mk1pod/hatch
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Emissive/Bumped Specular

		mesh = window
		
		texture = _MainTex,Squad/Parts/Command/mk1pod/window
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Command/mk1pod/window_illum
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/mk1pod_v2

@PART[mk1pod_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	// !MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk1pod_v2_Black_n_White
		textureSet = Stock_Default_mk1pod_v2_Black_n_White
		textureSet = Stock_Default_mk1pod_v2_Grey_n_White
		textureSet = Stock_Default_mk1pod_v2_White
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_mk1pod_v2_Black_n_White
	@MATERIAL
	{
		mesh = Mk1_New
		
		texture = _MainTex,Squad/Parts/Command/mk1pod_v2/Mk1_v2
		texture = _BumpMap,Squad/Parts/Command/mk1pod_v2/Mk1_v2_N
		texture = _Emissive,Squad/Parts/Command/mk1pod_v2/Mk1_v2_GLOW
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_mk1pod_v2_Grey_n_White
	@MATERIAL
	{
		mesh = Mk1_New
		
		texture = _MainTex,Squad/Parts/Command/mk1pod_v2/Mk1_v2_GW
		texture = _BumpMap,Squad/Parts/Command/mk1pod_v2/Mk1_v2_W_N
		texture = _Emissive,Squad/Parts/Command/mk1pod_v2/Mk1_v2_GLOW
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_mk1pod_v2_White
	@MATERIAL
	{
		mesh = Mk1_New
		
		texture = _MainTex,Squad/Parts/Command/mk1pod_v2/Mk1_v2_W
		texture = _BumpMap,Squad/Parts/Command/mk1pod_v2/Mk1_v2_W_N
		texture = _Emissive,Squad/Parts/Command/mk1pod_v2/Mk1_v2_GLOW
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/mk2CockpitInline/

@PART[mk2Cockpit_Inline]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk2Cockpit_Inline
		textureSet = Stock_Default_mk2Cockpit_Inline
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk2Cockpit_Inline
	@MATERIAL
	{
		mesh = Cockpit_inline
		
		texture = _MainTex,Squad/Parts/Command/mk2CockpitInline/Cockpit_inline_A
		texture = _BumpMap,Squad/Parts/Command/mk2CockpitInline/Cockpit_inline_normal
		texture = _Emissive,Squad/Parts/Command/mk2CockpitInline/Cockpit_inline_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/mk2CockpitStandard/

@PART[mk2Cockpit_Standard]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk2Cockpit_Standard
		textureSet = Stock_Default_mk2Cockpit_Standard
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk2Cockpit_Standard
	@MATERIAL
	{
		mesh = COCKPIT
		
		texture = _MainTex,Squad/Parts/Command/mk2CockpitStandard/Cockpit
		texture = _BumpMap,Squad/Parts/Command/mk2CockpitStandard/Cockpit_NRM
		texture = _Emissive,Squad/Parts/Command/mk2CockpitStandard/Cockpit_Lum
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/mk2DroneCore

@PART[mk2DroneCore]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk2DroneCore
		textureSet = Stock_Default_mk2DroneCore
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk2DroneCore
	@MATERIAL
	{
		mesh = DroneCore
		
		texture = _MainTex,Squad/Parts/Command/mk2DroneCore/mk2Dronecore
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/mk2LanderCan

@PART[mk2LanderCabin]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk2LanderCabin
		textureSet = Stock_Default_mk2LanderCabin
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk2LanderCabin
	@MATERIAL
	{
		mesh = cabin
		
		texture = _MainTex,Squad/Parts/Command/mk2LanderCan/outershell
		texture = _BumpMap,Squad/Parts/Command/mk2LanderCan/outershell_n
		texture = _Emissive,Squad/Parts/Command/mk2LanderCan/Illum
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Emissive/Bumped Specular
		
		mesh = rung
		
		texture = _MainTex,Squad/Parts/Command/mk2LanderCan/ladder
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/mk2LanderCan

// @PART[mk2LanderCabin_v2]:FOR[000_Pre_Switch]:NEEDS[TexturesUnlimited&!Restock]
// {
	// !MODULE[ModulePartVariants],*{}
// }

@PART[mk2LanderCabin_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Rover]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_mk2LanderCabin_v2_Rover
			}
		}
		@VARIANT[Lander]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_mk2LanderCabin_v2_Lander
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_mk2LanderCabin_v2_Rover
	@title = Stock Default MK2 Lander cabin Rover
	@MATERIAL
	{
		mesh = InnerPod
		
		texture = _MainTex,Squad/Parts/Command/mk2LanderCan_v2/Mk2Can
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Command/mk2LanderCan_v2/Mk2Can_glow
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_mk2LanderCabin_v2_Lander
	@title = Stock Default MK2 Lander Cabin Lander
	@MATERIAL
	{
		mesh = InnerPod
		mesh = OuterPod
		mesh = DoorLF
		mesh = DoorLR
		mesh = DoorRF
		mesh = DoorRR
		
		texture = _MainTex,Squad/Parts/Command/mk2LanderCan_v2/Mk2Can
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Command/mk2LanderCan_v2/Mk2Can_glow
	}
}

// Squad/Parts/Command/mk3CockpitShuttle/

@PART[mk3Cockpit_Shuttle]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk3Cockpit_Shuttle
		textureSet = Stock_Default_mk3Cockpit_Shuttle
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk3Cockpit_Shuttle
	@MATERIAL
	{
		mesh = cockpit
		
		texture = _MainTex,Squad/Parts/Command/mk3CockpitShuttle/Mk3CockpitShuttle
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Command/mk3CockpitShuttle/Mk3CockpitShuttle_LUM
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/MpoProbe/

@PART[MpoProbe]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Body
		currentTextureSet = Stock_Default_MpoProbe
		textureSet = Stock_Default_MpoProbe
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Core
		currentTextureSet = Stock_Default_MpoProbe_Core
		textureSet = Stock_Default_MpoProbe_Core
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_MpoProbe
	@MATERIAL
	{
		mesh = MpoProbe
		// mesh = Core.001
		
		float = _Shininess,0.44
		// float = _Opacity,1.0
		// float = _RimFalloff,2.0
		// float = _AmbientMultiplier,0.8
		
		texture = _MainTex,Squad/Parts/Command/MpoProbe/MpoProbe_diffuse
		texture = _BumpMap,Squad/Parts/Command/MpoProbe/MpoProbe_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_MpoProbe_Core
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		// mesh = MpoProbe
		mesh = Core.001
		
		float = _Shininess,0.9
		// float = _Opacity,1.0
		// float = _RimFalloff,2.0
		// float = _AmbientMultiplier,0.8
		
		texture = _MainTex,Squad/Parts/Command/MpoProbe/MpoProbe_diffuse
		texture = _BumpMap,Squad/Parts/Command/MpoProbe/MpoProbe_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Command/MpoProbe/MpoProbe_specular
	}
}

// Squad/Parts/Command/MtmStage/

@PART[MtmStage]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Body
		currentTextureSet = Stock_Default_MtmStage
		textureSet = Stock_Default_MtmStage
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Foil
		currentTextureSet = Stock_Default_MtmStage_Foil
		textureSet = Stock_Default_MtmStage_Foil
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_MtmStage
	@MATERIAL
	{
		mesh = MTM_Stage
		
		float = _Shininess,0.44
		// float = _Opacity,1.0
		// float = _RimFalloff,2.0
		// float = _AmbientMultiplier,0.8
		
		texture = _MainTex,Squad/Parts/Command/MtmStage/mtmStage_diffuse
		texture = _BumpMap,Squad/Parts/Command/MtmStage/mtmStage_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_MtmStage_Foil
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = mtmFoil
		
		float = _Shininess,0.9
		// float = _Opacity,1.0
		// float = _RimFalloff,2.0
		// float = _AmbientMultiplier,0.8
		
		texture = _MainTex,Squad/Parts/Command/MtmStage/mtmStage_diffuse
		texture = _BumpMap,Squad/Parts/Command/MtmStage/mtmStage_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Command/MtmStage/mtmStage_specular
	}
}

// Squad/Parts/Command/probeCoreCube

@PART[probeCoreCube]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_probeCoreCube
		textureSet = Stock_Default_probeCoreCube
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_probeCoreCube
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = cube
		
		texture = _MainTex,Squad/Parts/Command/probeCoreCube/QBE_New_diffuse
		texture = _BumpMap,Squad/Parts/Command/probeCoreCube/QBE_New_NRM
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Command/probeCoreCube/QBE_New_specular
	}
}

// Squad/Parts/Command/probeCoreHex

@PART[probeCoreHex]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_probeCoreHex
		textureSet = Stock_Default_probeCoreHex
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_probeCoreHex
	@MATERIAL
	{
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/Command/probeCoreHex/ksp_m_hexProbe_diff
		texture = _BumpMap,Squad/Parts/Command/probeCoreHex/ksp_m_hexProbe_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/probeCoreHex_v2

@PART[probeCoreHex_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_probeCoreHex_v2
		textureSet = Stock_Default_probeCoreHex_v2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_probeCoreHex_v2
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/Command/probeCoreHex_v2/hecsDiffuse
		texture = _BumpMap,Squad/Parts/Command/probeCoreHex_v2/hecsNormal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Command/probeCoreHex_v2/hecsDiffuse
	}
}

// Squad/Parts/Command/probeCoreOcto

@PART[probeCoreOcto]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_probeCoreOcto
		textureSet = Stock_Default_probeCoreOcto
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_probeCoreOcto
	@MATERIAL
	{
		mesh = octo
		
		texture = _MainTex,Squad/Parts/Command/probeCoreOcto/model000
		texture = _BumpMap,Squad/Parts/Command/probeCoreOcto/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/probeCoreOcto_v2 // Squad/Parts/Command/probeCoreOcto2_v2

@PART[probeCoreOcto_v2,probeCoreOcto2_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_probeCoreOcto_v2
		textureSet = Stock_Default_probeCoreOcto_v2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_probeCoreOcto_v2
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = octoBody
		mesh = tapas
		mesh = body
		
		texture = _MainTex,Squad/Parts/Command/probeCoreOcto_v2/octoDiffuse
		texture = _BumpMap,Squad/Parts/Command/probeCoreOcto_v2/octoNormal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Command/probeCoreOcto_v2/octoSpecular
	}
}

// Squad/Parts/Command/probeCoreOcto2

@PART[probeCoreOcto2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_probeCoreOcto2
		textureSet = Stock_Default_probeCoreOcto2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_probeCoreOcto2
	@MATERIAL
	{
		mesh = octo2
		
		texture = _MainTex,Squad/Parts/Command/probeCoreOcto2/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/probeRoverBody

@PART[roverBody]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_roverBody
		textureSet = Stock_Default_roverBody
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_roverBody
	@MATERIAL
	{
		mesh = body
		
		texture = _MainTex,Squad/Parts/Command/probeRoverBody/model000
		texture = _BumpMap,Squad/Parts/Command/probeRoverBody/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/probeRoverBody_v2

// @PART[roverBody_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
// {
	// MODULE
	// {
		// name = KSPTextureSwitch
		// sectionName = Appearance
		// currentTextureSet = Stock_Default_roverBody_v2_White
		// textureSet = Stock_Default_roverBody_v2_White
	// }
	// %MODULE[SSTURecolorGUI]
	// {
		// %name = SSTURecolorGUI
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
// {
	// @name = Stock_Default_roverBody_v2_White
	// @MATERIAL
	// {
		// mesh = bodyWhite
		
		// texture = _MainTex,Squad/Parts/Command/probeCoreCube/QBE_New_diffuse
		// texture = _BumpMap,Squad/Parts/Command/probeCoreCube/QBE_New_NRM
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	// }
// }

@PART[roverBody_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[White]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_roverBody_v2_White
			}
		}
		@VARIANT[Silver]
		{
			!TEXTURE,*{}
			EXTRA_INFO
			{
				textureSet = Stock_Default_roverBody_v2_Silver
			}
		}
		@VARIANT[Gold]
		{
			!TEXTURE,*{}
			EXTRA_INFO
			{
				textureSet = Stock_Default_roverBody_v2_Gold
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_roverBody_v2_White
	@MATERIAL
	{
		mesh = bodyWhite
		
		texture = _MainTex,Squad/Parts/Command/probeCoreCube/QBE_New_diffuse
		texture = _BumpMap,Squad/Parts/Command/probeCoreCube/QBE_New_NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_roverBody_v2_Silver
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		PROPERTY
		{
        name = _Color
        color = #ffffff
		}
		PROPERTY
		{
        name = _Shininess
        float = 0.82
		}
		PROPERTY
		{
        name = _Opacity
        float = 1.0
		}
		PROPERTY
		{
        name = _RimFalloff
        float = 2.0
		}
		PROPERTY
		{
        name = _AmbientMultiplier
        float = 0.3
		}
		
		
		// color = #ffffff
		// _Shininess= 0.82
		// _Opacity= 1.0
		// _RimFalloff= 2.0
		// _AmbientMultiplier= 0.3
		
		mesh = bodyFoil
		
		texture = _MainTex,Squad/Parts/Command/probeRoverBody_v2/probeRoverBody_v2_silver_diffuse
		texture = _BumpMap,Squad/Parts/Command/probeRoverBody_v2/probeRoverBody_v2_silver_NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Command/probeRoverBody_v2/probeRoverBody_v2_silver_specular
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_roverBody_v2_Gold
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		PROPERTY
		{
        name = _Color
        color = #efe38b
		}
		// PROPERTY
		// {
        // name = _Shininess
        // float = 0.82
		// }
		// PROPERTY
		// {
        // name = _Opacity
        // float = 1.0
		// }
		// PROPERTY
		// {
        // name = _RimFalloff
        // float = 2.0
		// }
		// PROPERTY
		// {
        // name = _AmbientMultiplier
        // float = 0.8
		// }
		
		// color = #efe38b
		// float = _Shininess,0.82
		float = _Shininess,0.9
		float = _Opacity,1.0
		float = _RimFalloff,2.0
		float = _AmbientMultiplier,0.8
		
		mesh = bodyFoil
		
		texture = _MainTex,Squad/Parts/Command/probeRoverBody_v2/probeRoverBody_v2_gold_diffuse
		texture = _BumpMap,Squad/Parts/Command/probeRoverBody_v2/probeRoverBody_v2_gold_NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Command/probeRoverBody_v2/probeRoverBody_v2_gold_specular
	}
}

// Squad/Parts/Command/probeStackLarge

@PART[probeStackLarge]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_probeStackLarge
		textureSet = Stock_Default_probeStackLarge
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_probeStackLarge
	@MATERIAL
	{
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/Command/probeStackLarge/model000
		texture = _BumpMap,Squad/Parts/Command/probeStackLarge/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/probeStackSmall

@PART[probeStackSmall]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_probeStackSmall
		textureSet = Stock_Default_probeStackSmall
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_probeStackSmall
	@MATERIAL
	{
		mesh = Cylinder
		
		texture = _MainTex,Squad/Parts/Command/probeStackSmall/model000
		texture = _BumpMap,Squad/Parts/Command/probeStackSmall/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/probeStackSphere

@PART[probeCoreSphere]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_probeCoreSphere
		textureSet = Stock_Default_probeCoreSphere
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_probeCoreSphere
	@MATERIAL
	{
		mesh = sphere
		
		texture = _MainTex,Squad/Parts/Command/probeStackSphere/model000
		texture = _BumpMap,Squad/Parts/Command/probeStackSphere/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Command/probeStackSphere_v2

@PART[probeCoreSphere_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_probeCoreSphere_v2
		textureSet = Stock_Default_probeCoreSphere_v2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_probeCoreSphere_v2
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = sphere
		
		// PROPERTY
		// {
        // name = _Color
        // color = #FFFFFF
		// }
		PROPERTY
		{
        name = _Shininess
        float = 0.75
		}
		// PROPERTY
		// {
        // name = _Opacity
        // float = 1.0
		// }
		// PROPERTY
		// {
        // name = _RimFalloff
        // float = 2.0
		// }
		// PROPERTY
		// {
        // name = _AmbientMultiplier
        // float = 0.3
		// }
		
		texture = _MainTex,Squad/Parts/Command/probeStackSphere_v2/probeStackSphere_diffuse
		texture = _BumpMap,Squad/Parts/Command/probeStackSphere_v2/probeStackSphere_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Command/probeStackSphere_v2/probeStackSphere_specular
	}
}

// CompoundParts
// Squad/Parts/CompoundParts/fuelLine

@PART[fuelLine]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_fuelLine
		textureSet = Stock_Default_fuelLine
		textureSet = Stock_Default_fuelLine_ESA
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_fuelLine
	@MATERIAL
	{
		mesh = anchor-Pivot
		mesh = obj_anchorCap_pivot
		mesh = obj_line_pivot
		mesh = obj_targetAnchor-Pivot
		mesh = obj_targetCap-Pivot
		
		texture = _MainTex,Squad/Parts/CompoundParts/FuelLine/FTX-2 External Fuel Duct
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default_fuelLine]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_fuelLine_ESA
	@MATERIAL
	{
		@texture,0 = _MainTex,Squad/Parts/CompoundParts/FuelLine/FTX-2 External Fuel Duct_ESA
	}
}

// Squad/Parts/CompoundParts/strutConnector

@PART[strutConnector]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_strutConnector
		textureSet = Stock_Default_strutConnector
		textureSet = Stock_Default_strutConnector_white
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_strutConnector
	@MATERIAL
	{
		mesh = obj_strut_pivot
		mesh = Mesh
		
		texture = _MainTex,Squad/Parts/CompoundParts/strutConnector/EAS-4 Strut Connector
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_strutConnector_white
	@MATERIAL
	{
		mesh = obj_strut_pivot
		mesh = Mesh
		
		texture = _MainTex,Squad/Parts/CompoundParts/strutConnector/EAS-4 Strut Connector_white
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Coupling
// Squad/Parts/Coupling/Assets

@PART[Decoupler_0,Decoupler_1,Decoupler_2,Decoupler_3,Separator_0,Separator_1,Separator_2,Separator_3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Decouplers
		textureSet = Stock_Default_Decouplers
		textureSet = Stock_Default_Decouplers_alt
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Decouplers
	@MATERIAL
	{
		mesh = Decoupler_0
		mesh = Decoupler_1
		mesh = Decoupler_1p5
		mesh = Decoupler_2
		mesh = Decoupler_3
		mesh = Decoupler_4
		mesh = Separator_0
		mesh = Separator_1
		mesh = Separator_1p5
		mesh = Separator_2
		mesh = Separator_3
		mesh = Separator_4
		
		texture = _MainTex,Squad/Parts/Coupling/Assets/Decouplers
		texture = _BumpMap,Squad/Parts/Coupling/Assets/Decouplers_N
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Decouplers_alt
	@MATERIAL
	{
		mesh = Decoupler_0
		mesh = Decoupler_1
		mesh = Decoupler_1p5
		mesh = Decoupler_2
		mesh = Decoupler_3
		mesh = Decoupler_4
		mesh = Separator_0
		mesh = Separator_1
		mesh = Separator_1p5
		mesh = Separator_2
		mesh = Separator_3
		mesh = Separator_4
		
		texture = _MainTex,Squad/Parts/Coupling/Assets/Decouplers_whiteYellow
		texture = _BumpMap,Squad/Parts/Coupling/Assets/Decouplers_whiteYellow_N
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

//Electrical
// Squad/Parts/Electrical/1x6ShroudSolarPanels	

@PART[solarPanels2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shroud
		currentTextureSet = Stock_Default_solarPanels2_Shroud
		textureSet = Stock_Default_solarPanels2_Shroud
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Panels
		currentTextureSet = Stock_Default_solarPanels2_Panels
		textureSet = Stock_Default_solarPanels2_Panels
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels2_Shroud
	@MATERIAL
	{
		mesh = base
		mesh = door
		mesh = knob
		
		texture = _MainTex,Squad/Parts/Electrical/1x6ShroudSolarPanels/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels2_Panels
	@MATERIAL
	{
		mesh = panel3
		mesh = panel04
		mesh = panel05
		mesh = panel06
		mesh = panel07
		mesh = panel08
		
		texture = _MainTex,Squad/Parts/Electrical/1x6ShroudSolarPanels/model001
		texture = _BumpMap,Squad/Parts/Electrical/1x6ShroudSolarPanels/model002
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Electrical/1x6SolarPanels

@PART[solarPanels4]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_solarPanels4_Mount
		textureSet = Stock_Default_solarPanels4_Mount
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Panels
		currentTextureSet = Stock_Default_solarPanels4_Panels
		textureSet = Stock_Default_solarPanels4_Panels
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels4_Mount
	@MATERIAL
	{
		mesh = base
		mesh = clamp
		
		texture = _MainTex,Squad/Parts/Electrical/1x6SolarPanels/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels4_Panels
	@MATERIAL
	{
		mesh = solarPanel4panels
		mesh = panel2
		mesh = panel3
		mesh = panel4
		mesh = pane5
		mesh = panel6
		
		texture = _MainTex,Squad/Parts/Electrical/1x6SolarPanels/model001
		texture = _BumpMap,Squad/Parts/Electrical/1x6SolarPanels/model002
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Electrical/3x2ShroudSolarPanels

@PART[solarPanels1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shroud
		currentTextureSet = Stock_Default_solarPanels1_Shroud
		textureSet = Stock_Default_solarPanels1_Shroud
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Panels
		currentTextureSet = Stock_Default_solarPanels1_Panels
		textureSet = Stock_Default_solarPanels1_Panels
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels1_Shroud
	@MATERIAL
	{
		mesh = base
		mesh = door
		mesh = knob
		
		texture = _MainTex,Squad/Parts/Electrical/3x2ShroudSolarPanels/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels1_Panels
	@MATERIAL
	{
		mesh = basepanel
		mesh = panel1
		mesh = panel2
		mesh = panel3
		mesh = panel4
		mesh = panel5
		
		texture = _MainTex,Squad/Parts/Electrical/3x2ShroudSolarPanels/model001
		texture = _BumpMap,Squad/Parts/Electrical/3x2ShroudSolarPanels/model002
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Electrical/3x2SolarPanels

@PART[solarPanels3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_solarPanels3_Mount
		textureSet = Stock_Default_solarPanels3_Mount
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Panels
		currentTextureSet = Stock_Default_solarPanels3_Panels
		textureSet = Stock_Default_solarPanels3_Panels
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels3_Mount
	@MATERIAL
	{
		mesh = base
		mesh = rotator
		
		texture = _MainTex,Squad/Parts/Electrical/3x2SolarPanels/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels3_Panels
	@MATERIAL
	{
		mesh = basepanel
		mesh = panel1
		mesh = panel2
		mesh = panel3
		mesh = panel4
		mesh = panel5
		
		texture = _MainTex,Squad/Parts/Electrical/3x2SolarPanels/model001
		texture = _BumpMap,Squad/Parts/Electrical/3x2SolarPanels/model002
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Electrical/10CSolarPanels
// OX-10C

@PART[solarPanelOX10C]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_solarPanels10C_Mount
		textureSet = Stock_Default_solarPanels10C_Mount
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Panels
		currentTextureSet = Stock_Default_solarPanels10C_Panels
		textureSet = Stock_Default_solarPanels10C_Panels
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels10C_Mount
	@MATERIAL
	{
		mesh = base
		mesh = rootHinge
		mesh = Truss_A
		mesh = Truss_Root
		
		texture = _MainTex,Squad/Parts/Electrical/10CSolarPanels/assets/circularSolarPanel_diffuse
		texture = _BumpMap,Squad/Parts/Electrical/10CSolarPanels/assets/circularSolarPanel_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels10C_Panels
	@MATERIAL
	{
		mesh = Panel_A
		mesh = Panel_B
		mesh = Panel_C
		mesh = Panel_D
		mesh = Panel_E
		mesh = Panel_F
		mesh = Panel_G
		mesh = Panel_H
		mesh = Panel_I
		mesh = Panel_J
		mesh = Panel_K
		mesh = Panel_L
		
		texture = _MainTex,Squad/Parts/Electrical/10CSolarPanels/assets/circularSolarPanel_diffuse
		texture = _BumpMap,Squad/Parts/Electrical/10CSolarPanels/assets/circularSolarPanel_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// SP-10C

@PART[solarPanelSP10C]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shroud
		currentTextureSet = Stock_Default_solarPanels10C_Shroud
		textureSet = Stock_Default_solarPanels10C_Shroud
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_solarPanels10C_Mount
		textureSet = Stock_Default_solarPanels10C_Mount
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Panels
		currentTextureSet = Stock_Default_solarPanels10C_Panels
		textureSet = Stock_Default_solarPanels10C_Panels
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels10C_Shroud
	@MATERIAL
	{
		mesh = Base
		mesh = door01
		mesh = door02
		
		texture = _MainTex,Squad/Parts/Electrical/10CSolarPanels/assets/circularSolarPanel_diffuse
		texture = _BumpMap,Squad/Parts/Electrical/10CSolarPanels/assets/circularSolarPanel_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// Squad/Parts/Electrical/10LSolarPanels

// OX-10L

@PART[solarPanelOX10L]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_solarPanels10L_Mount
		textureSet = Stock_Default_solarPanels10L_Mount
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Panels
		currentTextureSet = Stock_Default_solarPanels10L_Panels
		textureSet = Stock_Default_solarPanels10L_Panels
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels10L_Mount
	@MATERIAL
	{
		mesh = base
		mesh = rootHinge
		mesh = Truss_A
		mesh = Truss_B
		mesh = Truss_C
		mesh = Truss_D
		mesh = Truss_E
		mesh = Truss_Root
		
		texture = _MainTex,Squad/Parts/Electrical/10LSolarPanels/assets/retractableSolarPanel_diffuse
		texture = _BumpMap,Squad/Parts/Electrical/10LSolarPanels/assets/retractableSolarPanel_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels10L_Panels
	@MATERIAL
	{
		mesh = Panel_A
		mesh = Panel_B
		mesh = Panel_C
		mesh = Panel_D
		mesh = Panel_E
		
		texture = _MainTex,Squad/Parts/Electrical/10LSolarPanels/assets/retractableSolarPanel_diffuse
		texture = _BumpMap,Squad/Parts/Electrical/10LSolarPanels/assets/retractableSolarPanel_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// SP-10L

@PART[solarPanelSP10L]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shroud
		currentTextureSet = Stock_Default_solarPanels10L_Shroud
		textureSet = Stock_Default_solarPanels10L_Shroud
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_solarPanels10L_Mount
		textureSet = Stock_Default_solarPanels10L_Mount
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Panels
		currentTextureSet = Stock_Default_solarPanels10L_Panels
		textureSet = Stock_Default_solarPanels10L_Panels
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels10L_Shroud
	@MATERIAL
	{
		mesh = Base
		mesh = door1
		mesh = door2
		
		texture = _MainTex,Squad/Parts/Electrical/10LSolarPanels/assets/retractableSolarPanel_diffuse
		texture = _BumpMap,Squad/Parts/Electrical/10LSolarPanels/assets/retractableSolarPanel_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// Squad/Parts/Electrical/gigantorXlSolarArray

@PART[largeSolarPanel]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_largeSolarPanel_Mount
		textureSet = Stock_Default_largeSolarPanel_Mount
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Panel
		currentTextureSet = Stock_Default_largeSolarPanel_Panel
		textureSet = Stock_Default_largeSolarPanel_Panel
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_largeSolarPanel_Mount
	@MATERIAL
	{
		mesh = mount
		mesh = panelbase
		mesh = panelcap
		
		texture = _MainTex,Squad/Parts/Electrical/gigantorXlSolarArray/panel
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_largeSolarPanel_Panel
	@MATERIAL
	{
		mesh = panel
		
		texture = _MainTex,Squad/Parts/Electrical/gigantorXlSolarArray/panel
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Electrical/radialFlatSolarPanel

@PART[solarPanels5]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_solarPanels5
		textureSet = Stock_Default_solarPanels5
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solarPanels5
	@MATERIAL
	{
		mesh = panel
		
		texture = _MainTex,Squad/Parts/Electrical/radialFlatSolarPanel/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Electrical/RTG

@PART[rtg]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_rtg
		textureSet = Stock_Default_rtg
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_rtg
	@MATERIAL
	{
		mesh = rtg
		
		texture = _MainTex,Squad/Parts/Electrical/RTG/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Electrical/z-1kBattery

@PART[batteryBank]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_batteryBank
		textureSet = Stock_Default_batteryBank
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_batteryBank
	@MATERIAL
	{
		mesh = bank
		
		texture = _MainTex,Squad/Parts/Electrical/z-1kBattery/model000
		texture = _BumpMap,Squad/Parts/Electrical/z-1kBattery/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Electrical/z-4kBattery

@PART[batteryBankLarge]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_batteryBankLarge
		textureSet = Stock_Default_batteryBankLarge
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_batteryBankLarge
	@MATERIAL
	{
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/Electrical/z-4kBattery/ksp_l_batteryPack_diff
		texture = _BumpMap,Squad/Parts/Electrical/z-4kBattery/ksp_l_batteryPack_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Electrical/z-100Battery

@PART[batteryPack]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_batteryPack
		textureSet = Stock_Default_batteryPack
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_batteryPack
	@MATERIAL
	{
		mesh = battery
			
		texture = _MainTex,Squad/Parts/Electrical/z-100Battery/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Electrical/z-200Battery

@PART[batteryBankMini]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_batteryBankMini
		textureSet = Stock_Default_batteryBankMini
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_batteryBankMini
	@MATERIAL
	{
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/Electrical/z-200Battery/ksp_m_batteryPack_diff
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Electrical/z-400Battery

@PART[ksp_r_largeBatteryPack]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_ksp_r_largeBatteryPack
		textureSet = Stock_Default_ksp_r_largeBatteryPack
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_ksp_r_largeBatteryPack
	@MATERIAL
	{
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/Electrical/z-400Battery/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Engines
// Squad/Parts/Engine/ionEngine

@PART[ionEngine]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_ionEngine
		textureSet = Stock_Default_ionEngine
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_ionEngine
	@MATERIAL
	{
		mesh = engine
		mesh = glow
		
		texture = _MainTex,Squad/Parts/Engine/ionEngine/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/jetEngines

@PART[turboFanSize2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Body
		currentTextureSet = Stock_Default_turboFanSize2_Body
		textureSet = Stock_Default_turboFanSize2_Body
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fan
		currentTextureSet = Stock_Default_turboFanSize2_Fan
		textureSet = Stock_Default_turboFanSize2_Fan
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_turboFanSize2_Body
	@MATERIAL
	{
		mesh = TurboFanSize2
		mesh = Reverser
		mesh = Fairing
		
		texture = _MainTex,Squad/Parts/Engine/jetEngines/Jet Engines
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/jetEngines/Jet_Heat
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_turboFanSize2_Fan
	@MATERIAL
	{
		mesh = FanBlades
		mesh = FanCone
		
		texture = _MainTex,Squad/Parts/Engine/jetEngines/Jet Engines
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/jetEngines/Jet_Heat
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

@PART[turboJet,JetEngine,turboFanEngine]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_jetEngines
		textureSet = Stock_Default_jetEngines
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_jetEngines
	@MATERIAL
	{
		mesh = Reverser
		mesh = TurboFanSize1
		mesh = TurboJet
		mesh = TurboRamjet
		
		texture = _MainTex,Squad/Parts/Engine/jetEngines/Jet Engines
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/jetEngines/Jet_Heat
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEngine24-77

@PART[smallRadialEngine]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_smallRadialEngine
		textureSet = Stock_Default_smallRadialEngine
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_smallRadialEngine
	@MATERIAL
	{
		mesh = engine
		mesh = obj_gimbal
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngine24-77/engine
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEngine24-77_v2

@PART[smallRadialEngine_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Orange]
		{
			!TEXTURE,*{}
			EXTRA_INFO
			{
				textureSet = Stock_Default_smallRadialEngine_v2_Orange
			}
		}
		@VARIANT[GrayAndOrange]
		{
			!TEXTURE,*{}
			EXTRA_INFO
			{
				textureSet = Stock_Default_smallRadialEngine_v2_GrayAndOrange
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_smallRadialEngine_v2_Orange
	@MATERIAL
	{
		mesh = Fixed
		mesh = Float
		mesh = HiCyl1
		mesh = HiCyl2
		mesh = LoCyl1
		mesh = LoCyl2
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngine24-77_v2/Twitch
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_smallRadialEngine_v2_GrayAndOrange
	@MATERIAL
	{
		mesh = Fixed
		mesh = Float
		mesh = HiCyl1
		mesh = HiCyl2
		mesh = LoCyl1
		mesh = LoCyl2
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngine24-77_v2/Twitch_G
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEngine48-7S

@PART[liquidEngineMini]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Engine
		currentTextureSet = Stock_Default_liquidEngineMini_Engine
		textureSet = Stock_Default_liquidEngineMini_Engine
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fairing
		currentTextureSet = Stock_Default_liquidEngineMini_Fairing
		textureSet = Stock_Default_liquidEngineMini_Fairing
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_liquidEngineMini_Engine
	@MATERIAL
	{
		mesh = obj_base
		mesh = obj_gimbal
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngine48-7S/ksp_m_liquidEngine_diff
		texture = _BumpMap,Squad/Parts/Engine/liquidEngine48-7S/ksp_m_liquidEngine_norm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_liquidEngineMini_Fairing
	@MATERIAL
	{
		mesh = obj_fairing
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngine48-7S/ksp_m_liquidFuelEngine_fairing_psd
		texture = _BumpMap,Squad/Parts/Engine/liquidEngine48-7S/ksp_m_liquidFuelEngine_fairing_norm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEngine48-7S_v2

// @PART[liquidEngineMini_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @MODULE[ModulePartVariants]
	// {
		// @VARIANT[Shroud]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_liquidEngineMini_v2_Shroud
			// }
		// }
		// @VARIANT[TrussMount]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_liquidEngineMini_v2_Truss
			// }
		// }
		// @VARIANT[Bare]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_liquidEngineMini_v2_Bare
			// }
		// }
	// }
	// %MODULE[TUPartVariant]
	// {
		// %name = TUPartVariant
	// }
	// %MODULE[SSTURecolorGUI]
	// {
		// %name = SSTURecolorGUI
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_liquidEngineMini_v2_Shroud
	// @MATERIAL
	// {
		// mesh = Bell
		// mesh = BoatTail
		// mesh = Engine
		// mesh = LgMount
		// mesh = Shroud
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark_Glow
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_liquidEngineMini_v2_Truss
	// @MATERIAL
	// {
		// mesh = Bell
		// mesh = BoatTail
		// mesh = Engine
		// mesh = LgMount
		// mesh = Shroud
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark_Glow
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_liquidEngineMini_v2_Bare
	// @MATERIAL
	// {
		// mesh = Bell
		// mesh = BoatTail
		// mesh = Engine
		// mesh = LgMount
		// mesh = Shroud
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark_Glow
	// }
// }

@PART[liquidEngineMini_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Shroud]
		{
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_liquidEngineMini_v2_BoatTail
				textureSet1 = Stock_Default_liquidEngineMini_v2_LgMount
				textureSet2 = Stock_Default_liquidEngineMini_v2_Engine
				textureSet3 = Stock_Default_liquidEngineMini_v2_Bell
				textureSet4 = Stock_Default_liquidEngineMini_v2_Shroud
			}
		}
		@VARIANT[TrussMount]
		{
			EXTRA_INFO
			{
				// textureSet0 = Stock_Default_liquidEngineMini_v2_BoatTail
				textureSet1 = Stock_Default_liquidEngineMini_v2_LgMount
				textureSet2 = Stock_Default_liquidEngineMini_v2_Engine
				textureSet3 = Stock_Default_liquidEngineMini_v2_Bell
				textureSet4 = Stock_Default_liquidEngineMini_v2_Shroud
			}
		}
		@VARIANT[Bare]
		{
			EXTRA_INFO
			{
				// textureSet0 = Stock_Default_liquidEngineMini_v2_BoatTail
				// textureSet1 = Stock_Default_liquidEngineMini_v2_LgMount
				textureSet2 = Stock_Default_liquidEngineMini_v2_Engine
				textureSet3 = Stock_Default_liquidEngineMini_v2_Bell
				textureSet4 = Stock_Default_liquidEngineMini_v2_Shroud
			}
		}
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Boat Tail
		moduleIndex = 0
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Large Mount
		moduleIndex = 1
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Engine
		moduleIndex = 2
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Bell
		moduleIndex = 3
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Shroud
		moduleIndex = 4
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngineMini_v2_BoatTail
	@MATERIAL
	{
		mesh = BoatTail
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark_Glow
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngineMini_v2_LgMount
	@MATERIAL
	{
		mesh = LgMount
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark_Glow
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngineMini_v2_Engine
	@MATERIAL
	{
		mesh = Engine
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark_Glow
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngineMini_v2_Bell
	@MATERIAL
	{
		mesh = Bell
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark_Glow
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngineMini_v2_Shroud
	@MATERIAL
	{
		mesh = Shroud
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngine48-7S_v2/Spark_Glow
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEngineAerospike

@PART[toroidalAerospike]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Engine
		currentTextureSet = Stock_Default_toroidalAerospike_Engine
		textureSet = Stock_Default_toroidalAerospike_Engine
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fairing
		currentTextureSet = Stock_Default_toroidalAerospike_Fairing
		textureSet = Stock_Default_toroidalAerospike_Fairing
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_toroidalAerospike_Engine
	@MATERIAL
	{
		mesh = AeroSpike
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineAerospike/Aerospike
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngineAerospike/Aerospike_Heat
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_toroidalAerospike_Fairing
	@MATERIAL
	{
		mesh = Fairing
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineAerospike/Aerospike
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngineAerospike/Aerospike_Heat
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEngineLV-1
// base // engine

@PART[microEngine]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_microEngine
		textureSet = Stock_Default_microEngine
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_microEngine
	@MATERIAL
	{
		mesh = base
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-1/alternatebracket
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Emissive/Bumped Specular
		
		mesh = engine
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-1/engine
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEngineLV-1_v2

// @PART[microEngine_v2,radialEngineMini_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @MODULE[ModulePartVariants]
	// {
		// @VARIANT[Shroud]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_liquidEngineLV-1_v2_Shroud
			// }
		// }
		// @VARIANT[Bare]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_liquidEngineLV-1_v2_Bare
			// }
		// }
	// }
	// %MODULE[TUPartVariant]
	// {
		// %name = TUPartVariant
	// }
	// %MODULE[SSTURecolorGUI]
	// {
		// %name = SSTURecolorGUI
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_liquidEngineLV-1_v2_Shroud
	// @MATERIAL
	// {
		// @shader = KSP/Bumped Specular (Mapped)
		
		// // Ant
		// mesh = Case
		// mesh = Case_001
		// mesh = engine
		// mesh = Shroud
		
		// // Spider
		// // mesh = Case
		// mesh = case_001
		// // mesh = engine
		// mesh = Gimbal
		// mesh = HiCyl1
		// mesh = HiCyl2
		// mesh = HiHose1
		// mesh = HiHose2
		// mesh = LowCyl1
		// mesh = LowCyl2
		// mesh = Mount
		// // mesh = Shroud
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_diffuse
		// texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_normal
		// texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_emissive
		// // texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		// texture = _SpecMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_specular
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_liquidEngineLV-1_v2_Bare
	// @MATERIAL
	// {
		// @shader = KSP/Bumped Specular (Mapped)
		
		// // Ant
		// mesh = Case
		// mesh = Case_001
		// mesh = engine
		// mesh = Shroud
		
		// // Spider
		// // mesh = Case
		// mesh = case_001
		// // mesh = engine
		// mesh = Gimbal
		// mesh = HiCyl1
		// mesh = HiCyl2
		// mesh = HiHose1
		// mesh = HiHose2
		// mesh = LowCyl1
		// mesh = LowCyl2
		// mesh = Mount
		// // mesh = Shroud
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_diffuse
		// texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_normal
		// texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_emissive
		// // texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		// texture = _SpecMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_specular
	// }
// }

// Ant

@PART[microEngine_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Shroud]
		{
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_microEngine_v2_Shroud
				// textureSet1 = Stock_Default_microEngine_v2_Engine
				textureSet2 = Stock_Default_microEngine_v2_Bell
			}
		}
		@VARIANT[Bare]
		{
			EXTRA_INFO
			{
				// textureSet0 = Stock_Default_microEngine_v2_Shroud
				textureSet1 = Stock_Default_microEngine_v2_Engine
				textureSet2 = Stock_Default_microEngine_v2_Bell
			}
		}
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Shroud
		moduleIndex = 0
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Engine
		moduleIndex = 1
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Bell
		moduleIndex = 2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_microEngine_v2_Shroud
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = Shroud
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_specular
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_microEngine_v2_Engine
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = Case
		mesh = Case_001
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_specular
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_microEngine_v2_Bell
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = engine
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_specular
	}
}

// Spider

@PART[radialEngineMini_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Shroud]
		{
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_radialEngineMini_v2_Shroud
				// textureSet1 = Stock_Default_radialEngineMini_v2_Mount
				// textureSet2 = Stock_Default_radialEngineMini_v2_Engine
				// textureSet3 = Stock_Default_radialEngineMini_v2_Pistons
				textureSet4 = Stock_Default_radialEngineMini_v2_Bell
			}
		}
		@VARIANT[Bare]
		{
			EXTRA_INFO
			{
				// textureSet0 = Stock_Default_radialEngineMini_v2_Shroud
				textureSet1 = Stock_Default_radialEngineMini_v2_Mount
				textureSet2 = Stock_Default_radialEngineMini_v2_Engine
				textureSet3 = Stock_Default_radialEngineMini_v2_Pistons
				textureSet4 = Stock_Default_radialEngineMini_v2_Bell
			}
		}
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Shroud
		moduleIndex = 0
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Mount
		moduleIndex = 1
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Engine
		moduleIndex = 2
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Pistons
		moduleIndex = 3
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Bell
		moduleIndex = 4
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_radialEngineMini_v2_Shroud
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = Shroud
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_specular
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_radialEngineMini_v2_Mount
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = Mount
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_specular
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_radialEngineMini_v2_Shroud
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = Case
		mesh = case_001
		mesh = Gimbal
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_specular
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_radialEngineMini_v2_Pistons
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = HiCyl1
		mesh = HiCyl2
		mesh = LowCyl1
		mesh = LowCyl2
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_specular
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_radialEngineMini_v2_Bell
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = engine
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Engine/liquidEngineLV-1_v2/Assets/Ant_and_Spider_specular
	}
}

// Squad/Parts/Engine/liquidEngineLV-1R
// obj_body // obj_body_2

@PART[radialEngineMini]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_radialEngineMini
		textureSet = Stock_Default_radialEngineMini
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_radialEngineMini
	@MATERIAL
	{
		mesh = obj_body
		mesh = obj_body_2
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-1R/ksp_r_microEngine_diff
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEngineLV-909
// engine + obj_gimbal // fairing

@PART[liquidEngine3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Engine
		currentTextureSet = Stock_Default_liquidEngine3_Engine
		textureSet = Stock_Default_liquidEngine3_Engine
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fairing
		currentTextureSet = Stock_Default_liquidEngine3_Fairing
		textureSet = Stock_Default_liquidEngine3_Fairing
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_liquidEngine3_Engine
	@MATERIAL
	{
		mesh = engine
		mesh = obj_gimbal
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-909/engine3
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-909/engine3_n
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-909/engine3_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_liquidEngine3_Fairing
	@MATERIAL
	{
		mesh = fairing
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-909/bigfairing
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-T45/model003
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEngineLV-909_v2

// @PART[liquidEngine3_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @MODULE[ModulePartVariants]
	// {
		// @VARIANT[Shroud]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_liquidEngine3_v2_Shroud
			// }
		// }
		// @VARIANT[TrussMount]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_liquidEngine3_v2_Truss
			// }
		// }
		// @VARIANT[Bare]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_liquidEngine3_v2_Bare
			// }
		// }
	// }
	// %MODULE[TUPartVariant]
	// {
		// %name = TUPartVariant
	// }
	// %MODULE[SSTURecolorGUI]
	// {
		// %name = SSTURecolorGUI
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_liquidEngine3_v2_Shroud
	// @MATERIAL
	// {
		// mesh = Bell
		// mesh = Engine
		// mesh = LgTruss
		// mesh = SmTruss
		// mesh = Toroid
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier_glow
		// // texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	// }
	// MATERIAL
	// {
		// shader = KSP/Emissive/Bumped Specular
		
		// mesh = ShortShroud
		// mesh = TallShroud
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-909_v2/TerrierFairing
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// // texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_liquidEngine3_v2_Truss
	// @MATERIAL
	// {
		// mesh = Bell
		// mesh = Engine
		// mesh = LgTruss
		// mesh = SmTruss
		// mesh = Toroid
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier_glow
		// // texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	// }
	// MATERIAL
	// {
		// shader = KSP/Emissive/Bumped Specular
		
		// mesh = ShortShroud
		// mesh = TallShroud
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-909_v2/TerrierFairing
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// // texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_liquidEngine3_v2_Bare
	// @MATERIAL
	// {
		// mesh = Bell
		// mesh = Engine
		// mesh = LgTruss
		// mesh = SmTruss
		// mesh = Toroid
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier_glow
		// // texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	// }
	// MATERIAL
	// {
		// shader = KSP/Emissive/Bumped Specular
		
		// mesh = ShortShroud
		// mesh = TallShroud
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-909_v2/TerrierFairing
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// // texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	// }
// }

@PART[liquidEngine3_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Shroud]
		{
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_liquidEngine3_v2_Toroid
				// textureSet1 = Stock_Default_liquidEngine3_v2_LgTruss
				textureSet2 = Stock_Default_liquidEngine3_v2_SmTruss
				textureSet3 = Stock_Default_liquidEngine3_v2_Engine
				textureSet4 = Stock_Default_liquidEngine3_v2_Bell
				textureSet5 = Stock_Default_liquidEngine3_v2_Fairing
			}
		}
		@VARIANT[TrussMount]
		{
			EXTRA_INFO
			{
				// textureSet0 = Stock_Default_liquidEngine3_v2_Toroid
				textureSet1 = Stock_Default_liquidEngine3_v2_LgTruss
				// textureSet2 = Stock_Default_liquidEngine3_v2_SmTruss
				textureSet3 = Stock_Default_liquidEngine3_v2_Engine
				textureSet4 = Stock_Default_liquidEngine3_v2_Bell
				textureSet5 = Stock_Default_liquidEngine3_v2_Fairing
			}
		}
		@VARIANT[Bare]
		{
			EXTRA_INFO
			{
				// textureSet0 = Stock_Default_liquidEngine3_v2_Toroid
				// textureSet1 = Stock_Default_liquidEngine3_v2_LgTruss
				textureSet2 = Stock_Default_liquidEngine3_v2_SmTruss
				textureSet3 = Stock_Default_liquidEngine3_v2_Engine
				textureSet4 = Stock_Default_liquidEngine3_v2_Bell
				textureSet5 = Stock_Default_liquidEngine3_v2_Fairing
			}
		}
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Toroid
		moduleIndex = 0
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Large Truss
		moduleIndex = 1
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Small Truss
		moduleIndex = 2
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Engine
		moduleIndex = 3
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Bell
		moduleIndex = 4
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Fairing
		moduleIndex = 5
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine3_v2_Toroid
	@MATERIAL
	{
		mesh = Toroid
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier_glow
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine3_v2_LgTruss
	@MATERIAL
	{
		mesh = LgTruss
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier_glow
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine3_v2_SmTruss
	@MATERIAL
	{
		mesh = SmTruss
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier_glow
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine3_v2_Engine
	@MATERIAL
	{
		mesh = Engine
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier_glow
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine3_v2_Bell
	@MATERIAL
	{
		mesh = Bell
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-909_v2/Terrier_glow
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine3_v2_Fairing
	@MATERIAL
	{
		mesh = ShortShroud
		mesh = TallShroud
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-909_v2/TerrierFairing
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// Squad/Parts/Engine/liquidEngineLV-N
// engine + obj_gimbal // fairingL + fairingR

@PART[nuclearEngine]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Engine
		currentTextureSet = Stock_Default_nuclearEngine_Engine
		textureSet = Stock_Default_nuclearEngine_Engine
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fairing
		currentTextureSet = Stock_Default_nuclearEngine_Fairing
		textureSet = Stock_Default_nuclearEngine_Fairing
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_nuclearEngine_Engine
	@MATERIAL
	{
		mesh = engine
		mesh = obj_gimbal
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-N/model000
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-N/model001
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-N/model002
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_nuclearEngine_Fairing
	@MATERIAL
	{
		mesh = fairingL
		mesh = fairingR
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-N/model003
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEngineLV-T30
// engine // fairing

@PART[liquidEngine]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Engine
		currentTextureSet = Stock_Default_liquidEngine_Engine
		textureSet = Stock_Default_liquidEngine_Engine
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fairing
		currentTextureSet = Stock_Default_liquidEngine_Fairing
		textureSet = Stock_Default_liquidEngine_Fairing
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine_Engine
	@MATERIAL
	{
		mesh = engine
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-T30/model001
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-T30/model002
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine_Fairing
	@MATERIAL
	{
		mesh = fairing
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-T30/model000
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-T45/model003
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEngineLV-T30_v2

@PART[liquidEngine_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Shroud]
		{
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_liquidEngine_v2_Shroud
				// textureSet1 = Stock_Default_liquidEngine_v2_Truss
				textureSet2 = Stock_Default_liquidEngine_v2_Engine
				textureSet3 = Stock_Default_liquidEngine_v2_Fairing
			}
		}
		@VARIANT[TrussMount]
		{
			EXTRA_INFO
			{
				// textureSet0 = Stock_Default_liquidEngine_v2_Shroud
				textureSet1 = Stock_Default_liquidEngine_v2_Truss
				textureSet2 = Stock_Default_liquidEngine_v2_Engine
				textureSet3 = Stock_Default_liquidEngine_v2_Fairing
			}
		}
		@VARIANT[Bare]
		{
			EXTRA_INFO
			{
				// textureSet0 = Stock_Default_liquidEngine_v2_Shroud
				// textureSet1 = Stock_Default_liquidEngine_v2_Truss
				textureSet2 = Stock_Default_liquidEngine_v2_Engine
				textureSet3 = Stock_Default_liquidEngine_v2_Fairing
			}
		}
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Shroud
		moduleIndex = 0
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Truss
		moduleIndex = 1
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Engine
		moduleIndex = 2
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Fairing
		moduleIndex = 3
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine_v2_Shroud
	@MATERIAL
	{
		mesh = Shroud
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-T30_v2/Reliant_v2-shroud_Diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine_v2_Truss
	@MATERIAL
	{
		mesh = Truss
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-T30_v2/Reliant_v2_Diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-T30_v2/Engine_Normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-T30_v2/Engine_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine_v2_Engine
	@MATERIAL
	{
		mesh = Engine
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-T30_v2/Reliant_v2_Diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-T30_v2/Engine_Normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-T30_v2/Engine_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine_v2_Fairing
	@MATERIAL
	{
		mesh = fairing
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-T30_v2/Fairing
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// Squad/Parts/Engine/liquidEngineLV-T45
// engine + obj_gimbal // fairing

@PART[liquidEngine2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Engine
		currentTextureSet = Stock_Default_liquidEngine2_Engine
		textureSet = Stock_Default_liquidEngine2_Engine
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fairing
		currentTextureSet = Stock_Default_liquidEngine2_Fairing
		textureSet = Stock_Default_liquidEngine2_Fairing
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine2_Engine
	@MATERIAL
	{
		mesh = engine
		mesh = obj_gimbal
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-T45/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-T45/model001
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine2_Fairing
	@MATERIAL
	{
		mesh = fairing
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-T45/model002
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-T45/model003
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEngineLV-T45_v2

@PART[liquidEngine2_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Shroud]
		{
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_liquidEngine2_v2_Shroud
				// textureSet1 = Stock_Default_liquidEngine2_v2_Truss
				textureSet2 = Stock_Default_liquidEngine2_v2_Engine
				textureSet3 = Stock_Default_liquidEngine2_v2_Pistons
				textureSet4 = Stock_Default_liquidEngine2_v2_Bell
				textureSet5 = Stock_Default_liquidEngine2_v2_Fairing
			}
		}
		@VARIANT[TrussMount]
		{
			EXTRA_INFO
			{
				// textureSet0 = Stock_Default_liquidEngine2_v2_Shroud
				textureSet1 = Stock_Default_liquidEngine2_v2_Truss
				textureSet2 = Stock_Default_liquidEngine2_v2_Engine
				textureSet3 = Stock_Default_liquidEngine2_v2_Pistons
				textureSet4 = Stock_Default_liquidEngine2_v2_Bell
				textureSet5 = Stock_Default_liquidEngine2_v2_Fairing
			}
		}
		@VARIANT[Bare]
		{
			EXTRA_INFO
			{
				// textureSet0 = Stock_Default_liquidEngine2_v2_Shroud
				// textureSet1 = Stock_Default_liquidEngine2_v2_Truss
				textureSet2 = Stock_Default_liquidEngine2_v2_Engine
				textureSet3 = Stock_Default_liquidEngine2_v2_Pistons
				textureSet4 = Stock_Default_liquidEngine2_v2_Bell
				textureSet5 = Stock_Default_liquidEngine2_v2_Fairing
			}
		}
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Shroud
		moduleIndex = 0
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Truss
		moduleIndex = 1
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Engine
		moduleIndex = 2
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Pistons
		moduleIndex = 3
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Bell
		moduleIndex = 4
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Fairing
		moduleIndex = 5
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine2_v2_Shroud
	@MATERIAL
	{
		mesh = Shroud
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-T45_v2/Swivel_v2_Diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-T45_v2/Swivel_v2_Normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-T45_v2/Engine_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine2_v2_Truss
	@MATERIAL
	{
		mesh = Truss
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-T45_v2/Swivel_v2_Diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-T45_v2/Swivel_v2_Normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-T45_v2/Engine_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine2_v2_Engine
	@MATERIAL
	{
		mesh = swivel_v2
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-T45_v2/Swivel_v2_Diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-T45_v2/Swivel_v2_Normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-T45_v2/Engine_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine2_v2_Pistons
	@MATERIAL
	{
		mesh = LoCyl1
		mesh = LoCyl2
		mesh = HiCyl1
		mesh = HiCyl2
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-T45_v2/Swivel_v2_Diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-T45_v2/Swivel_v2_Normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-T45_v2/Engine_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine2_v2_Bell
	@MATERIAL
	{
		mesh = Bell
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-T45_v2/Swivel_v2_Diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineLV-T45_v2/Swivel_v2_Normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineLV-T45_v2/Engine_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine2_v2_Fairing
	@MATERIAL
	{
		mesh = fairing
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineLV-T45_v2/Fairing
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// Squad/Parts/Engine/liquidEngineMainsail
// obj_base + obj_gimbal // fairing

@PART[liquidEngine1-2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Engine
		currentTextureSet = Stock_Default_liquidEngine1-2_Engine
		textureSet = Stock_Default_liquidEngine1-2_Engine
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fairing
		currentTextureSet = Stock_Default_liquidEngine1-2_Fairing
		textureSet = Stock_Default_liquidEngine1-2_Fairing
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine1-2_Engine
	@MATERIAL
	{
		mesh = obj_base
		mesh = obj_gimbal
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail/model002
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineMainsail/model003
		texture = _Emissive,Squad/Parts/Engine/liquidEngineMainsail/model004
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngine1-2_Fairing
	@MATERIAL
	{
		mesh = fairing
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail/model000
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineMainsail/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEngineMainsail_v2

// @PART[liquidEngineMainsail_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @MODULE[ModulePartVariants]
	// {
		// @VARIANT[Full]
		// {
			// EXTRA_INFO
			// {
				// textureSet0 = Stock_Default_liquidEngineMainsail_v2_Full
			// }
		// }
		// @VARIANT[Mid]
		// {
			// EXTRA_INFO
			// {
				// textureSet0 = Stock_Default_liquidEngineMainsail_v2_Mid
			// }
		// }
		// @VARIANT[Bare]
		// {
			// EXTRA_INFO
			// {
				// textureSet0 = Stock_Default_liquidEngineMainsail_v2_Bare
			// }
		// }
	// }
	// %MODULE[TUPartVariant]
	// {
		// %name = TUPartVariant
	// }
	// %MODULE[SSTURecolorGUI]
	// {
		// %name = SSTURecolorGUI
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_liquidEngineMainsail_v2_Full
	// @MATERIAL
	// {
		// mesh = UpperCowl
		// mesh = LowerCowl
		// mesh = Nozzle
		// mesh = UpperPiston_2
		// mesh = UpperPiston_1
		// mesh = LowerPiston_2
		// mesh = LowerPiston_1
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_diffuse
		// texture = _BumpMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_nrm
		// texture = _Emissive,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_emissive
	// }
	// MATERIAL
	// {
		// shader = KSP/Bumped Specular (Mapped)
		
		// mesh = UpperCowlFoil
		// mesh = LowerCowlFoil
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_diffuse
		// texture = _BumpMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_nrm
		// texture = _Emissive,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_emissive
		// texture = _SpecMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_specular
	// }
	// MATERIAL
	// {
		// shader = KSP/Emissive/Bumped Specular
		
		// mesh = fairing
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/Shroud
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_liquidEngineMainsail_v2_Mid
	// @MATERIAL
	// {
		// mesh = UpperCowl
		// mesh = Truss
		// mesh = Engine
		// mesh = Nozzle
		// mesh = UpperPiston_2
		// mesh = UpperPiston_1
		// mesh = LowerPiston_2
		// mesh = LowerPiston_1
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_diffuse
		// texture = _BumpMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_nrm
		// texture = _Emissive,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_emissive
	// }
	// MATERIAL
	// {
		// shader = KSP/Bumped Specular (Mapped)
		
		// mesh = UpperCowlFoil
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_diffuse
		// texture = _BumpMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_nrm
		// texture = _Emissive,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_emissive
		// texture = _SpecMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_specular
	// }
	// MATERIAL
	// {
		// shader = KSP/Emissive/Bumped Specular
		
		// mesh = fairing
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/Shroud
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_liquidEngineMainsail_v2_Bare
	// @MATERIAL
	// {
		// mesh = Truss
		// mesh = Engine
		// mesh = Nozzle
		// mesh = UpperPiston_2
		// mesh = UpperPiston_1
		// mesh = LowerPiston_2
		// mesh = LowerPiston_1
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_diffuse
		// texture = _BumpMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_nrm
		// texture = _Emissive,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_emissive
	// }
	// MATERIAL
	// {
		// shader = KSP/Emissive/Bumped Specular
		
		// mesh = fairingSmall
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/Shroud
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	// }
// }

@PART[liquidEngineMainsail_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Full]
		{
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_liquidEngineMainsail_v2_UpperCowl
				textureSet1 = Stock_Default_liquidEngineMainsail_v2_LowerCowl
				textureSet2 = Stock_Default_liquidEngineMainsail_v2_Foil
				textureSet3 = Stock_Default_liquidEngineMainsail_v2_Truss
				textureSet4 = Stock_Default_liquidEngineMainsail_v2_Engine
				textureSet5 = Stock_Default_liquidEngineMainsail_v2_Pistons
				textureSet6 = Stock_Default_liquidEngineMainsail_v2_Nozzle
				textureSet7 = Stock_Default_liquidEngineMainsail_v2_Fairing
			}
		}
		@VARIANT[Mid]
		{
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_liquidEngineMainsail_v2_UpperCowl
				textureSet1 = Stock_Default_liquidEngineMainsail_v2_LowerCowl
				textureSet2 = Stock_Default_liquidEngineMainsail_v2_Foil
				textureSet3 = Stock_Default_liquidEngineMainsail_v2_Truss
				textureSet4 = Stock_Default_liquidEngineMainsail_v2_Engine
				textureSet5 = Stock_Default_liquidEngineMainsail_v2_Pistons
				textureSet6 = Stock_Default_liquidEngineMainsail_v2_Nozzle
				textureSet7 = Stock_Default_liquidEngineMainsail_v2_Fairing
			}
		}
		@VARIANT[Bare]
		{
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_liquidEngineMainsail_v2_UpperCowl
				textureSet1 = Stock_Default_liquidEngineMainsail_v2_LowerCowl
				textureSet2 = Stock_Default_liquidEngineMainsail_v2_Foil
				textureSet3 = Stock_Default_liquidEngineMainsail_v2_Truss
				textureSet4 = Stock_Default_liquidEngineMainsail_v2_Engine
				textureSet5 = Stock_Default_liquidEngineMainsail_v2_Pistons
				textureSet6 = Stock_Default_liquidEngineMainsail_v2_Nozzle
				textureSet7 = Stock_Default_liquidEngineMainsail_v2_Fairing
			}
		}
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Upper Cowl
		moduleIndex = 0
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Lower Cowl
		moduleIndex = 1
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Foil
		moduleIndex = 2
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Truss
		moduleIndex = 3
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Engine
		moduleIndex = 4
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Pistons
		moduleIndex = 5
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Nozzle
		moduleIndex = 6
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Fairing
		moduleIndex = 7
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngineMainsail_v2_UpperCowl
	@MATERIAL
	{
		mesh = UpperCowl
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_nrm
		texture = _Emissive,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngineMainsail_v2_LowerCowl
	@MATERIAL
	{
		mesh = LowerCowl
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_nrm
		texture = _Emissive,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngineMainsail_v2_Foil
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = UpperCowlFoil
		mesh = LowerCowlFoil
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_nrm
		texture = _Emissive,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_emissive
		texture = _SpecMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_specular
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngineMainsail_v2_Truss
	@MATERIAL
	{
		mesh = Truss
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_nrm
		texture = _Emissive,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngineMainsail_v2_Engine
	@MATERIAL
	{
		mesh = Engine
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_nrm
		texture = _Emissive,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngineMainsail_v2_Pistons
	@MATERIAL
	{
		mesh = UpperPiston_2
		mesh = UpperPiston_1
		mesh = LowerPiston_2
		mesh = LowerPiston_1
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_nrm
		texture = _Emissive,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngineMainsail_v2_Nozzle
	@MATERIAL
	{
		mesh = Nozzle
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_nrm
		texture = _Emissive,Squad/Parts/Engine/liquidEngineMainsail_v2/mainsail_emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_liquidEngineMainsail_v2_Fairing
	@MATERIAL
	{
		mesh = fairing
		mesh = fairingSmall
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineMainsail_v2/Shroud
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// Squad/Parts/Engine/liquidEngineMk55
// THUD // Gimbal // Split??

@PART[radialLiquidEngine1-2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_radialLiquidEngine1-2
		textureSet = Stock_Default_radialLiquidEngine1-2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_radialLiquidEngine1-2
	@MATERIAL
	{
		mesh = Gimbal
		mesh = THUD
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineMk55/Thud
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/liquidEngineMk55/Thud_Heat
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEnginePoodle
// obj_base + obj_gimbal // LEDs // fairing

@PART[liquidEngine2-2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Engine
		currentTextureSet = Stock_Default_liquidEngine2-2_Engine
		textureSet = Stock_Default_liquidEngine2-2_Engine
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fairing
		currentTextureSet = Stock_Default_liquidEngine2-2_Fairing
		textureSet = Stock_Default_liquidEngine2-2_Fairing
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_liquidEngine2-2_Engine
	@MATERIAL
	{
		mesh = obj_base
		mesh = obj_gimbal
		mesh = LEDs
		
		texture = _MainTex,Squad/Parts/Engine/liquidEnginePoodle/engine_dif
		texture = _BumpMap,Squad/Parts/Engine/liquidEnginePoodle/engine_norm
		texture = _Emissive,Squad/Parts/Engine/liquidEnginePoodle/engine_em
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_liquidEngine2-2_Fairing
	@MATERIAL
	{
		mesh = fairing
		
		texture = _MainTex,Squad/Parts/Engine/liquidEnginePoodle/smallfairing
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEnginePoodle_v2

// @PART[liquidEngine2-2_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
// {
	// MODULE
	// {
		// name = KSPTextureSwitch
		// sectionName = Engine
		// currentTextureSet = Stock_Default_liquidEngine2-2_v2_Engine
		// textureSet = Stock_Default_liquidEngine2-2_v2_Engine
	// }
	// MODULE
	// {
		// name = KSPTextureSwitch
		// sectionName = Fairing
		// currentTextureSet = Stock_Default_liquidEngine2-2_v2_Fairing
		// textureSet = Stock_Default_liquidEngine2-2_v2_Fairing
	// }
	// %MODULE[SSTURecolorGUI]
	// {
		// %name = SSTURecolorGUI
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_liquidEngine2-2_v2_Engine
	// @MATERIAL
	// {
		// mesh = EngineFixed
		// mesh = EngineFloat
		// mesh = HiCyl1
		// mesh = HiCyl2
		// mesh = HiCyl3
		// mesh = HiCyl4
		// mesh = LowCyl1
		// mesh = LowCyl2
		// mesh = LowCyl3
		// mesh = LowCyl4
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEnginePoodle_v2/poodle
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Stock_Recolour/Engine/Liquid Engine Poodle_v2/173_poodle_emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_liquidEngine2-2_v2_Fairing
	// @MATERIAL
	// {
		// mesh = Shroud
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEnginePoodle_v2/PoodleShroud
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	// }
// }

@PART[liquidEngine2-2_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[DoubleBell]
		{
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_PoodleV2_Double_Shroud
				textureSet1 = Stock_Default_PoodleV2_Double_Pistons
				textureSet2 = Stock_Default_PoodleV2_Double_Engine
				textureSet3 = Stock_Default_PoodleV2_Double_Fairing
			}
		}
		@VARIANT[SingleBell]
		{
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_PoodleV2_Single_Shroud
				textureSet1 = Stock_Default_PoodleV2_Single_Pistons
				textureSet2 = Stock_Default_PoodleV2_Single_Engine
				textureSet3 = Stock_Default_PoodleV2_Single_Fairing
			}
		}
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Shroud
		moduleIndex = 0
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Pistons
		moduleIndex = 1
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Engine
		moduleIndex = 2
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Fairing
		moduleIndex = 3
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_PoodleV2_Double_Shroud
	@MATERIAL
	{
		mesh = EngineFixed
		
		texture = _MainTex,Squad/Parts/Engine/liquidEnginePoodle_v2/poodle
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Stock_Recolour/Engine/Liquid Engine Poodle_v2/173_poodle_emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_PoodleV2_Double_Pistons
	@MATERIAL
	{
		mesh = LowCyl1
		mesh = LowCyl2
		mesh = LowCyl3
		mesh = LowCyl4
		mesh = HiCyl1
		mesh = HiCyl2
		mesh = HiCyl3
		mesh = HiCyl4
		
		texture = _MainTex,Squad/Parts/Engine/liquidEnginePoodle_v2/poodle
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Stock_Recolour/Engine/Liquid Engine Poodle_v2/173_poodle_emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_PoodleV2_Double_Engine
	@MATERIAL
	{
		mesh = EngineFloat
		
		texture = _MainTex,Squad/Parts/Engine/liquidEnginePoodle_v2/poodle
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Stock_Recolour/Engine/Liquid Engine Poodle_v2/173_poodle_emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_PoodleV2_Double_Fairing
	@MATERIAL
	{
		mesh = Shroud1
		
		texture = _MainTex,Squad/Parts/Engine/liquidEnginePoodle_v2/PoodleShroud
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_PoodleV2_Single_Shroud
	@MATERIAL
	{
		mesh = Shroud
		
		texture = _MainTex,Squad/Parts/Engine/liquidEnginePoodle_v2/Poodle_SingleBell_Poodle_Diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEnginePoodle_v2/Poodle_SingleBell_Poodle_Normal
		texture = _Emissive,Squad/Parts/Engine/liquidEnginePoodle_v2/Poodle_SingleBell_Poodle_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_PoodleV2_Single_Pistons
	@MATERIAL
	{
		mesh = LowCyl5
		mesh = LowCyl6
		mesh = HiCyl5
		mesh = HiCyl6
		
		texture = _MainTex,Squad/Parts/Engine/liquidEnginePoodle_v2/Poodle_SingleBell_Poodle_Diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEnginePoodle_v2/Poodle_SingleBell_Poodle_Normal
		texture = _Emissive,Squad/Parts/Engine/liquidEnginePoodle_v2/Poodle_SingleBell_Poodle_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_PoodleV2_Single_Engine
	@MATERIAL
	{
		mesh = Engine
		
		texture = _MainTex,Squad/Parts/Engine/liquidEnginePoodle_v2/Poodle_SingleBell_Poodle_Diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEnginePoodle_v2/Poodle_SingleBell_Poodle_Normal
		texture = _Emissive,Squad/Parts/Engine/liquidEnginePoodle_v2/Poodle_SingleBell_Poodle_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_PoodleV2_Single_Fairing
	@MATERIAL
	{
		mesh = Shroud2
		
		texture = _MainTex,Squad/Parts/Engine/liquidEnginePoodle_v2/PoodleShroud
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// Squad/Parts/Engine/liquidEngineSkipper
// obj_base + obj_gimbal // obj_fairing

@PART[engineLargeSkipper]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Engine
		currentTextureSet = Stock_Default_engineLargeSkipper_Engine
		textureSet = Stock_Default_engineLargeSkipper_Engine
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fairing
		currentTextureSet = Stock_Default_engineLargeSkipper_Fairing
		textureSet = Stock_Default_engineLargeSkipper_Fairing
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_engineLargeSkipper_Engine
	@MATERIAL
	{
		mesh = obj_base
		mesh = obj_gimbal
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineSkipper/ksp_l_midrangeEngine_diff
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineSkipper/ksp_l_midrangeEngine_normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineSkipper/ksp_l_midrangeEngine_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_engineLargeSkipper_Fairing
	@MATERIAL
	{
		mesh = obj_fairing
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineSkipper/ksp_l_midrangeEngine_fairing_diff
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineSkipper/ksp_l_midrangeEngine_fairing_norm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/liquidEngineSkipper_v2

// @PART[engineLargeSkipper_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock&!B9PartSwitch]
// {
	// @MODULE[ModulePartVariants]
	// {
		// @VARIANT[Shroud]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_engineLargeSkipper_v2_Shroud
			// }
		// }
		// @VARIANT[TrussMount]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_engineLargeSkipper_v2_TrussMount
			// }
		// }
		// @VARIANT[Bare]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_engineLargeSkipper_v2_Bare
			// }
		// }
	// }
	// %MODULE[TUPartVariant]
	// {
		// %name = TUPartVariant
	// }
	// %MODULE[SSTURecolorGUI]
	// {
		// %name = SSTURecolorGUI
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_engineLargeSkipper_v2_Shroud
	// @MATERIAL
	// {
		// mesh = Engine
		// mesh = Mount1
		// mesh = Mount2
		// mesh = obj_gimbal
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_diffuse
		// texture = _BumpMap,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_normal
		// texture = _Emissive,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_emissive
	// }
	// MATERIAL
	// {
		// shader = KSP/Emissive/Bumped Specular
		
		// mesh = fairing1
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineSkipper_v2/Shroud
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_engineLargeSkipper_v2_TrussMount
	// @MATERIAL
	// {
		// mesh = Engine
		// mesh = Mount1
		// mesh = Mount2
		// mesh = obj_gimbal
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_diffuse
		// texture = _BumpMap,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_normal
		// texture = _Emissive,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_emissive
	// }
	// MATERIAL
	// {
		// shader = KSP/Emissive/Bumped Specular
		
		// mesh = fairing1
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineSkipper_v2/Shroud
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_engineLargeSkipper_v2_Bare
	// @MATERIAL
	// {
		// mesh = Engine
		// mesh = Mount1
		// mesh = Mount2
		// mesh = obj_gimbal
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_diffuse
		// texture = _BumpMap,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_normal
		// texture = _Emissive,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_emissive
	// }
	// MATERIAL
	// {
		// shader = KSP/Emissive/Bumped Specular
		
		// mesh = fairing2
		
		// texture = _MainTex,Squad/Parts/Engine/liquidEngineSkipper_v2/Shroud
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	// }
// }

@PART[engineLargeSkipper_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Shroud]
		{
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_engineLargeSkipper_v2_Shroud
				// textureSet1 = Stock_Default_engineLargeSkipper_v2_Mount
				textureSet2 = Stock_Default_engineLargeSkipper_v2_Block
				textureSet3 = Stock_Default_engineLargeSkipper_v2_Bell
				textureSet4 = Stock_Default_engineLargeSkipper_v2_Fairing
			}
		}
		@VARIANT[TrussMount]
		{
			EXTRA_INFO
			{
				// textureSet0 = Stock_Default_engineLargeSkipper_v2_Shroud
				textureSet1 = Stock_Default_engineLargeSkipper_v2_Mount
				textureSet2 = Stock_Default_engineLargeSkipper_v2_Block
				textureSet3 = Stock_Default_engineLargeSkipper_v2_Bell
				textureSet4 = Stock_Default_engineLargeSkipper_v2_Fairing
			}
		}
		@VARIANT[Bare]
		{
			EXTRA_INFO
			{
				// textureSet0 = Stock_Default_engineLargeSkipper_v2_Shroud
				// textureSet1 = Stock_Default_engineLargeSkipper_v2_Mount
				textureSet2 = Stock_Default_engineLargeSkipper_v2_Block
				textureSet3 = Stock_Default_engineLargeSkipper_v2_Bell
				textureSet4 = Stock_Default_engineLargeSkipper_v2_Fairing
			}
		}
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Base
		moduleIndex = 0
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Mount
		moduleIndex = 1
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Block
		moduleIndex = 2
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Bell
		moduleIndex = 3
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Fairing
		moduleIndex = 4
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_engineLargeSkipper_v2_Shroud
	@MATERIAL
	{
		mesh = Mount1
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_engineLargeSkipper_v2_Mount
	@MATERIAL
	{
		mesh = Mount2
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_engineLargeSkipper_v2_Block
	@MATERIAL
	{
		mesh = Engine
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_engineLargeSkipper_v2_Bell
	@MATERIAL
	{
		mesh = obj_gimbal
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_diffuse
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_normal
		texture = _Emissive,Squad/Parts/Engine/liquidEngineSkipper_v2/skipper_v2_emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_engineLargeSkipper_v2_Fairing
	@MATERIAL
	{
		mesh = fairing1
		mesh = fairing2
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineSkipper_v2/Shroud
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// Squad/Parts/Engine/liquidEngineSSME
// Base + Nozzle // Fairing

@PART[SSME]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Base
		currentTextureSet = Stock_Default_SSME_Base
		textureSet = Stock_Default_SSME_Base
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Engine
		currentTextureSet = Stock_Default_SSME_Engine
		textureSet = Stock_Default_SSME_Engine
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fairing
		currentTextureSet = Stock_Default_SSME_Fairing
		textureSet = Stock_Default_SSME_Fairing
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_SSME_Base
	@MATERIAL
	{
		mesh = Base
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineSSME/SSME
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineSSME/SSME_NRM
		texture = _Emissive,Squad/Parts/Engine/liquidEngineSSME/SSME_GLOW
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_SSME_Engine
	@MATERIAL
	{
		mesh = Nozzle
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineSSME/SSME
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineSSME/SSME_NRM
		texture = _Emissive,Squad/Parts/Engine/liquidEngineSSME/SSME_GLOW
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_SSME_Fairing
	@MATERIAL
	{
		mesh = Fairing
		
		texture = _MainTex,Squad/Parts/Engine/liquidEngineSSME/SSME
		texture = _BumpMap,Squad/Parts/Engine/liquidEngineSSME/SSME_NRM
		texture = _Emissive,Squad/Parts/Engine/liquidEngineSSME/SSME_GLOW
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/MassiveSRB
// MassiveSRB

@PART[MassiveBooster]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_MassiveBooster
		textureSet = Stock_Default_MassiveBooster
		textureSet = Stock_Default_MassiveBooster_ESA
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_MassiveBooster
	@MATERIAL
	{
		mesh = MassiveSRB
		
		texture = _MainTex,Squad/Parts/Engine/MassiveSRB/solid_booster_cm
		texture = _BumpMap,Squad/Parts/Engine/MassiveSRB/solid_booster_nm
		texture = _Emissive,Squad/Parts/Engine/MassiveSRB/solid_booster_em
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default_MassiveBooster]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_MassiveBooster_ESA
	@MATERIAL
	{
		@texture,0 = _MainTex,Squad/Parts/Engine/MassiveSRB/solid_booster_cm_esa
	}
}

// Squad/Parts/Engine/miniJet

@PART[miniJetEngine]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_miniJetEngine
		textureSet = Stock_Default_miniJetEngine
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_miniJetEngine
	@MATERIAL
	{
		mesh = MiniNozzle
		
		texture = _MainTex,Squad/Parts/Engine/miniJet/SmallJet
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/OMSEngine
// OMS_new // Nozzle

@PART[omsEngine]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_omsEngine
		textureSet = Stock_Default_omsEngine
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_omsEngine
	@MATERIAL
	{
		mesh = Puff_Body
		
		texture = _MainTex,Squad/Parts/Engine/OMSEngine/Puff_diffuse
		texture = _BumpMap,Squad/Parts/Engine/OMSEngine/Puff_normal
		texture = _Emissive,Squad/Parts/Engine/OMSEngine/Puff_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Bumped Specular (Mapped)
		
		mesh = Nozzle
		
		texture = _MainTex,Squad/Parts/Engine/OMSEngine/Puff_diffuse
		texture = _BumpMap,Squad/Parts/Engine/OMSEngine/Puff_normal
		texture = _Emissive,Squad/Parts/Engine/OMSEngine/Puff_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Engine/OMSEngine/Puff_specular
	}
}

// Squad/Parts/Engine/rapierEngine
// engine // model1 model2 model3 model4

@PART[RAPIER]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_RAPIER
		textureSet = Stock_Default_RAPIER
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RAPIER
	@MATERIAL
	{
		mesh = engine
		mesh = model1
		mesh = model2
		mesh = model3
		mesh = model4
		
		texture = _MainTex,Squad/Parts/Engine/rapierEngine/rapierDiffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Engine/rapierEngine/rapieremit
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/Size1_SRBs

@PART[solidBooster_sm_v2,solidBooster_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Size1_SRBs
		textureSet = Stock_Default_Size1_SRBs
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size1_SRBs
	@MATERIAL
	{
		mesh = SRB5
		mesh = SRB10
		mesh = shroud
		
		texture = _MainTex,Squad/Parts/Engine/Size1_SRBs/SRB_W
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/Size2LFB
// Size2LFB // Nozzle1 Nozzle2

@PART[Size2LFB,Size2LFB_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Size2LFB
		textureSet = Stock_Default_Size2LFB
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size2LFB
	@MATERIAL
	{
		mesh = Size2LFB
		mesh = Size3Plate
		mesh = Nozzle1
		mesh = Nozzle2
		
		texture = _MainTex,Squad/Parts/Engine/Size2LFB/twin_nozzle_booster_cm
		texture = _BumpMap,Squad/Parts/Engine/Size2LFB/twin_nozzle_booster_nm
		texture = _Emissiv,Squad/Parts/Engine/Size2LFB/Size2LFBEmissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/Size3AdvancedEngine			// Rhino
// Size3AdvancedEngine Nozzle FuelLine01 // obj_fairing // FlagTransform

@PART[Size3AdvancedEngine]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Engine
		currentTextureSet = Stock_Default_Size3AdvancedEngine_Engine
		textureSet = Stock_Default_Size3AdvancedEngine_Engine
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fairing
		currentTextureSet = Stock_Default_Size3AdvancedEngine_Fairing
		textureSet = Stock_Default_Size3AdvancedEngine_Fairing
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size3AdvancedEngine_Engine
	@MATERIAL
	{
		mesh = Size3AdvancedEngine
		mesh = Nozzle
		mesh = FuelLine01
		
		texture = _MainTex,Squad/Parts/Engine/Size3AdvancedEngine/Size3AdvancedEngineDiffuse
		texture = _BumpMap,Squad/Parts/Engine/Size3AdvancedEngine/Size3AdvancedEngineNormal
		texture = _Emissive,Squad/Parts/Engine/Size3AdvancedEngine/Size3AdvancedEngineEmissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size3AdvancedEngine_Fairing
	@MATERIAL
	{
		mesh = obj_fairing
		
		texture = _MainTex,Squad/Parts/Engine/Size3AdvancedEngine/decoupler_and_adaptor_cm
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/Size3EngineCluster
// Size3EngineCluster // Nozzle1 Nozzle2 Nozzle3 Nozzle4

@PART[Size3EngineCluster]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Size3EngineCluster
		textureSet = Stock_Default_Size3EngineCluster
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size3EngineCluster
	@MATERIAL
	{
		mesh = Size3EngineCluster
		mesh = Nozzle1
		mesh = Nozzle2
		mesh = Nozzle3
		mesh = Nozzle4
		
		texture = _MainTex,Squad/Parts/Engine/Size3EngineCluster/four_nozzle_engine_cm
		texture = _BumpMap,Squad/Parts/Engine/Size3EngineCluster/four_nozzle_engine_nm
		texture = _Emissive,Squad/Parts/Engine/Size3EngineCluster/ClusterEngineEmit
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/solidBoosterBACC
// solidBooster2

@PART[solidBooster1-1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_solidBooster1-1
		textureSet = Stock_Default_solidBooster1-1
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_solidBooster1-1
	@MATERIAL
	{
		mesh = solidBooster2
		
		texture = _MainTex,Squad/Parts/Engine/solidBoosterBACC/model000
		texture = _BumpMap,Squad/Parts/Engine/solidBoosterBACC/model001
		texture = _Emissive,Squad/Parts/Engine/solidBoosterBACC/model002
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/solidBoosterRT-5
// RT5 Torus Bell

@PART[solidBooster_sm]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_solidBooster_sm
		textureSet = Stock_Default_solidBooster_sm
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_solidBooster_sm
	@MATERIAL
	{
		mesh = RT5
		mesh = Torus
		mesh = Bell
		
		texture = _MainTex,Squad/Parts/Engine/solidBoosterRT-5/RT5
		texture = _BumpMap,Squad/Parts/Engine/solidBoosterRT-5/RT5_N_NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/solidBoosterRT-10
// booster

@PART[solidBooster]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_solidBooster
		textureSet = Stock_Default_solidBooster
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_solidBooster
	@MATERIAL
	{
		mesh = booster
		
		texture = _MainTex,Squad/Parts/Engine/solidBoosterRT-10/model000
		texture = _BumpMap,Squad/Parts/Engine/solidBoosterRT-10/model001
		texture = _Emissive,Squad/Parts/Engine/solidBoosterRT-10/model002
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/solidBoosterS2-17

@PART[Thoroughbred]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Thoroughbred
		textureSet = Stock_Default_Thoroughbred
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Thoroughbred
	@MATERIAL
	{
		mesh = Bell
		mesh = Engine
		mesh = HiCyl1
		mesh = HiCyl2
		mesh = LowCyl1
		mesh = LowCyl2
		
		texture = _MainTex,Squad/Parts/Engine/solidBoosterS2-17/solidBoosterS2-17_diffuse
		texture = _BumpMap,Squad/Parts/Engine/solidBoosterS2-17/solidBoosterS2-17_normal
		texture = _Emissive,Squad/Parts/Engine/solidBoosterS2-17/solidBoosterS2-17_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/solidBoosterS2-33

@PART[Clydesdale]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Body
		currentTextureSet = Stock_Default_Clydesdale_Body
		textureSet = Stock_Default_Clydesdale_Body
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Bell
		currentTextureSet = Stock_Default_Clydesdale_Bell
		textureSet = Stock_Default_Clydesdale_Bell
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Clydesdale_Body
	@MATERIAL
	{
		// mesh = Bell
		mesh = Engine
		
		texture = _MainTex,Squad/Parts/Engine/solidBoosterS2-33/solidBoosterS2-33_diffuse
		texture = _BumpMap,Squad/Parts/Engine/solidBoosterS2-33/solidBoosterS2-33_normal
		texture = _Emissive,Squad/Parts/Engine/solidBoosterS2-33/solidBoosterS2-33_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Clydesdale_Bell
	@MATERIAL
	{
		mesh = Bell
		// mesh = Engine
		
		texture = _MainTex,Squad/Parts/Engine/solidBoosterS2-33/solidBoosterS2-33_diffuse
		texture = _BumpMap,Squad/Parts/Engine/solidBoosterS2-33/solidBoosterS2-33_normal
		texture = _Emissive,Squad/Parts/Engine/solidBoosterS2-33/solidBoosterS2-33_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/solidBoosterSep
// rocket

@PART[sepMotor1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_sepMotor1
		textureSet = Stock_Default_sepMotor1
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_sepMotor1
	@MATERIAL
	{
		mesh = rocket
		
		texture = _MainTex,Squad/Parts/Engine/solidBoosterSep/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Engine/SolidBoostersF

@PART[Shrimp,Mite]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Body
		currentTextureSet = Stock_Default_SolidBoosterF_Body
		textureSet = Stock_Default_SolidBoosterF_Body
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Fairing
		currentTextureSet = Stock_Default_SolidBoosterF_Fairing
		textureSet = Stock_Default_SolidBoosterF_Fairing
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_SolidBoosterF_Body
	@MATERIAL
	{
		mesh = Engine
		// mesh = Shroud
		
		texture = _MainTex,Squad/Parts/Engine/SolidBoostersF/Assets/SolidBoosterF3S0_diffuse
		texture = _BumpMap,Squad/Parts/Engine/SolidBoostersF/Assets/SolidBoosterF3S0_normal
		texture = _Emissive,Squad/Parts/Engine/SolidBoostersF/Assets/SolidBoosterF3S0_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_SolidBoosterF_Fairing
	@MATERIAL
	{
		// mesh = Engine
		mesh = Shroud
		
		texture = _MainTex,Squad/Parts/Engine/SolidBoostersF/Assets/SolidBoosterF3S0_diffuse
		texture = _BumpMap,Squad/Parts/Engine/SolidBoostersF/Assets/SolidBoosterF3S0_normal
		texture = _Emissive,Squad/Parts/Engine/SolidBoostersF/Assets/SolidBoosterF3S0_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// FuelTank
// Squad/Parts/FuelTank/adapterTanks

@PART[adapterMk3-Mk2,adapterEngines,adapterMk3-Size2,adapterMk3-Size2Slant,adapterSize2-Mk2,adapterSize2-Size1,adapterSize2-Size1Slant,adapterSize3-Mk3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Mk3Adapters
		textureSet = Stock_Default_Mk3Adapters
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Mk3Adapters
	@MATERIAL
	{
		mesh = Mk3-Mk2
		mesh = Mk3-Size2
		mesh = Mk3-Size2Slant
		mesh = ShuttleEngineAdapter
		mesh = Size2-Mk2
		mesh = Size2-Size1
		mesh = Size2-Size1Slant
		mesh = Size3-Mk3
		
		texture = _MainTex,Squad/Parts/FuelTank/adapterTanks/Mk3Adapters
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/drainTankFTE-1

@PART[ReleaseValve]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_ReleaseValve
		textureSet = Stock_Default_ReleaseValve
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_ReleaseValve
	@MATERIAL
	{
		mesh = ValveMesh
		
		texture = _MainTex,Squad/Parts/FuelTank/drainTankFTE-1/fuelValve_diffuse
		texture = _BumpMap,Squad/Parts/FuelTank/drainTankFTE-1/fuelValve_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/FoilTanks

@PART[externalTankCapsule,externalTankRound,externalTankToroid]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_FoilTanks_G
		textureSet = Stock_Default_FoilTanks_G
		textureSet = Stock_Default_FoilTanks_S
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_FoilTanks_G
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = RadialTankCapsule
		mesh = RadialTankRound
		mesh = ToroidTank
		
		PROPERTY
		{
			name = _SpecTint
			float = 0.05
		}
		PROPERTY
		{
			name = _Shininess
			float = 0.55
		}
		PROPERTY
		{
			name = _AmbientMultiplier
			float = 0.6
		}
		
		texture = _MainTex,Squad/Parts/FuelTank/FoilTanks/RadialTanks
		texture = _BumpMap,Squad/Parts/FuelTank/FoilTanks/RadialTanks_N
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _SpecMap,Squad/Parts/FuelTank/FoilTanks/RadialTanksGold_specular
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_FoilTanks_S
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = RadialTankCapsule
		mesh = RadialTankRound
		mesh = ToroidTank
		
		PROPERTY
		{
			name = _SpecTint
			float = 0.05
		}
		PROPERTY
		{
			name = _Shininess
			float = 0.5
		}
		PROPERTY
		{
			name = _AmbientMultiplier
			float = 0.6
		}
		
		texture = _MainTex,Squad/Parts/FuelTank/FoilTanks/RadialTanks_silver
		texture = _BumpMap,Squad/Parts/FuelTank/FoilTanks/RadialTanks_N
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _SpecMap,Squad/Parts/FuelTank/FoilTanks/RadialTanksSilver_specular
	}
}

// Squad/Parts/FuelTank/fuelTankOscarB

@PART[miniFuelTank]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_miniFuelTank
		textureSet = Stock_Default_miniFuelTank
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_miniFuelTank
	@MATERIAL
	{
		mesh = miniFuelTank
		
		texture = _MainTex,Squad/Parts/FuelTank/fuelTankOscarB/model000
		texture = _BumpMap,Squad/Parts/FuelTank/fuelTankOscarB/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/miniFuselage

@PART[miniFuselage]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_miniFuselage
		textureSet = Stock_Default_miniFuselage
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_miniFuselage
	@MATERIAL
	{
		mesh = Fuselage
		
		texture = _MainTex,Squad/Parts/FuelTank/miniFuselage/Fuselage
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/mk2Adapters/

@PART[mk2_1m_Bicoupler,mk2_1m_AdapterLong,mk2SpacePlaneAdapter]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk2Adapters
		textureSet = Stock_Default_mk2Adapters
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk2Adapters
	@MATERIAL
	{
		mesh = Bicoupler
		mesh = AdapterLong
		mesh = AdapterShort
		
		texture = _MainTex,Squad/Parts/FuelTank/mk2Adapters/mk2adapters1m
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/mk2FuselageLong/

@PART[mk2Fuselage,mk2FuselageLongLFO]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk2FuselageLong
		textureSet = Stock_Default_mk2FuselageLong
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk2FuselageLong
	@MATERIAL
	{
		mesh = FuselageLongLFO
		mesh = FuselageLongLiquid
		
		texture = _MainTex,Squad/Parts/FuelTank/mk2FuselageLong/mk2Fuselage
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/mk2FuselageShort/

@PART[mk2FuselageShortLiquid,mk2FuselageShortLFO,mk2FuselageShortMono]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk2FuselageShort
		textureSet = Stock_Default_mk2FuselageShort
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk2FuselageShort
	@MATERIAL
	{
		mesh = FuselageShortLFO
		mesh = FuselageShortLiquid
		mesh = FuselageShortMono
		
		texture = _MainTex,Squad/Parts/FuelTank/mk2FuselageShort/mk2FuselageShort
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/mk3Fuselage/

@PART[mk3CrewCabin,mk3FuselageLF_25,mk3FuselageLF_50,mk3FuselageLF_100,mk3FuselageLFO_25,mk3FuselageLFO_50,mk3FuselageLFO_100,mk3FuselageMONO]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk3Fuselage
		textureSet = Stock_Default_mk3Fuselage
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk3Fuselage
	@MATERIAL
	{
		mesh = CREW
		mesh = LF_2.5m
		mesh = LF_5m
		mesh = LF_10m
		mesh = LFO_2.5m
		mesh = LFO_5m
		mesh = LFO_10m
		mesh = MONO
		
		texture = _MainTex,Squad/Parts/FuelTank/mk3Fuselage/Mk3Fuselage
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/FuelTank/mk3Fuselage/Mk3Fuselage_LUM
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/RCSFuelTankR1
// Uses Stock variants so will have issues until dark magic is applied.

@PART[RCSTank1-2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_RCSTank1-2_Grey
		textureSet = Stock_Default_RCSTank1-2_Grey
		textureSet = Stock_Default_RCSTank1-2_Yellow
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RCSTank1-2_Grey
	@MATERIAL
	{
		mesh = RCSFuelTankR1 1
		
		texture = _MainTex,Squad/Parts/FuelTank/RCSFuelTankR1/RCSFuelTankR1_01
		texture = _BumpMap,Squad/Parts/FuelTank/RCSFuelTankR1/RCSFuelTankR1_N
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RCSTank1-2_Yellow
	@MATERIAL
	{
		mesh = RCSFuelTankR1 1
		
		texture = _MainTex,Squad/Parts/FuelTank/RCSFuelTankR1/RCSFuelTankR1_02
		texture = _BumpMap,Squad/Parts/FuelTank/RCSFuelTankR1/RCSFuelTankR1_N
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/RCSFuelTankR10

@PART[rcsTankMini]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_rcsTankMini
		textureSet = Stock_Default_rcsTankMini
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_rcsTankMini
	@MATERIAL
	{
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/FuelTank/RCSFuelTankR10/ksp_m_rcsTank_diff
		texture = _BumpMap,Squad/Parts/FuelTank/RCSFuelTankR10/ksp_m_rcsTank_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/RCSFuelTankR25

@PART[RCSFuelTank]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_RCSFuelTank
		textureSet = Stock_Default_RCSFuelTank
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RCSFuelTank
	@MATERIAL
	{
		mesh = rcstank
		
		texture = _MainTex,Squad/Parts/FuelTank/RCSFuelTankR25/FL-R25 RCS Fuel Tank_D
		texture = _BumpMap,Squad/Parts/FuelTank/RCSFuelTankR25/FL-R25 RCS Fuel Tank_N
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/RCSTankRadial

@PART[radialRCSTank]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_radialRCSTank
		textureSet = Stock_Default_radialRCSTank
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_radialRCSTank
	@MATERIAL
	{
		mesh = tank
		
		texture = _MainTex,Squad/Parts/FuelTank/RCSTankRadial/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/RCStankRadialLong

@PART[rcsTankRadialLong]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_rcsTankRadialLong
		textureSet = Stock_Default_rcsTankRadialLong
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_rcsTankRadialLong
	@MATERIAL
	{
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/FuelTank/RCStankRadialLong/ksp_r_rcsCylTank_diff
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/RockomaxTanks
// Uses Stock variants so will have issues until dark magic is applied.

// @PART[Rockomax8BW,Rockomax16_BW,Rockomax32_BW,Rockomax64_BW]:FOR[000_Pre_Switch]:NEEDS[TexturesUnlimited&!Restock]
// {
	// !MODULE[ModulePartVariants],*{}
// }

// @PART[Rockomax8BW,Rockomax16_BW,Rockomax32_BW,Rockomax64_BW]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
// {
	// MODULE
	// {
		// name = KSPTextureSwitch
		// sectionName = Appearance
		// currentTextureSet = Stock_Default_RockomaxTanks
		// textureSet = Stock_Default_RockomaxTanks
	// }
	// %MODULE[SSTURecolorGUI]
	// {
		// %name = SSTURecolorGUI
	// }
// }

@PART[Rockomax8BW,Rockomax16_BW,Rockomax32_BW,Rockomax64_BW]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[BlackAndWhite]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_RockomaxTanks_BW
			}
		}
		@VARIANT[Orange]
		{
			!TEXTURE,*{}
			EXTRA_INFO
			{
				textureSet = Stock_Default_RockomaxTanks_O
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RockomaxTanks_BW
	@MATERIAL
	{
		mesh = Rockomax_8_White
		mesh = Rockomax_16
		mesh = Rockomax_32_White
		mesh = Rockomax_64_White
		
		texture = _MainTex,Squad/Parts/FuelTank/RockomaxTanks/Assets/rockomax_16 [AlbedoM] BW
		texture = _BumpMap,Squad/Parts/FuelTank/RockomaxTanks/Assets/rockomax_16 [Normal] BW
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RockomaxTanks_O
	@MATERIAL
	{
		mesh = Rockomax_8_Orange
		mesh = Rockomax_16
		mesh = Rockomax_32_Orange
		mesh = Rockomax_64_Orange
		
		texture = _MainTex,Squad/Parts/FuelTank/RockomaxTanks/Assets/rockomax_16 [AlbedoM] O
		texture = _BumpMap,Squad/Parts/FuelTank/RockomaxTanks/Assets/rockomax_16 [Normal]O
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// ESA Additions

@PART[Rockomax16_BW]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[ESA]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_Rockomax16_ESA
			}
		}
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rockomax16_ESA
	@MATERIAL
	{
		mesh = Rockomax_16
		
		texture = _MainTex,Squad/Parts/FuelTank/RockomaxTanks/Assets/rockomax_16 [AlbedoM] ESA
		texture = _BumpMap,Squad/Parts/FuelTank/RockomaxTanks/Assets/rockomax_16 [Normal]ESA
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

@PART[Rockomax32_BW]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[ESA]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_Rockomax32_ESA
			}
		}
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Rockomax32_ESA
	@MATERIAL
	{
		mesh = Rockomax_32_ESA
		
		texture = _MainTex,Squad/Parts/FuelTank/RockomaxTanks/Assets/rockomax_32 [AlbedoM] ESA 
		texture = _BumpMap,Squad/Parts/FuelTank/RockomaxTanks/Assets/rockomax_32 [Normal]ESA 
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// Squad/Parts/FuelTank/Size1_Tanks

@PART[fuelTankSmallFlat,fuelTankSmall,fuelTank,fuelTank_long]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Size1_Tanks_D
		textureSet = Stock_Default_Size1_Tanks_D
		textureSet = Stock_Default_Size1_Tanks_BW
		textureSet = Stock_Default_Size1_Tanks_W
		textureSet = Stock_Default_Size1_Tanks_GO
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size1_Tanks_D
	@MATERIAL
	{
		mesh = 125_1
		mesh = 125_2
		mesh = 125_3
		mesh = 125_4
		
		texture = _MainTex,Squad/Parts/FuelTank/Size1_Tanks/125Tanks_D
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size1_Tanks_BW
	@MATERIAL
	{
		mesh = 125_1
		mesh = 125_2
		mesh = 125_3
		mesh = 125_4
		
		texture = _MainTex,Squad/Parts/FuelTank/Size1_Tanks/125Tanks_BW
		texture = _BumpMap,Squad/Parts/FuelTank/Size1_Tanks/125Tanks_N
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size1_Tanks_W
	@MATERIAL
	{
		mesh = 125_1
		mesh = 125_2
		mesh = 125_3
		mesh = 125_4
		
		texture = _MainTex,Squad/Parts/FuelTank/Size1_Tanks/125Tanks_W
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size1_Tanks_GO
	@MATERIAL
	{
		mesh = 125_1
		mesh = 125_2
		mesh = 125_3
		mesh = 125_4
		
		texture = _MainTex,Squad/Parts/FuelTank/Size1_Tanks/125Tanks_O
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/Size3Tanks

@PART[Size3LargeTank,Size3MediumTank,Size3SmallTank]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Size3Tanks_BW
		textureSet = Stock_Default_Size3Tanks_BW
		textureSet = Stock_Default_Size3Tanks_O
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size3Tanks_BW
	@MATERIAL
	{
		mesh = size_3_tank_01
		mesh = size_3_tank_02
		mesh = size_3_tank_03
		
		texture = _MainTex,Squad/Parts/FuelTank/Size3Tanks/Size3Tanks
		texture = _BumpMap,Squad/Parts/FuelTank/Size3Tanks/Size3Tanks_Norm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size3Tanks_O
	@MATERIAL
	{
		mesh = size_3_tank_01
		mesh = size_3_tank_02
		mesh = size_3_tank_03
		
		texture = _MainTex,Squad/Parts/FuelTank/Size3Tanks/Size3Tanks_Orange
		texture = _BumpMap,Squad/Parts/FuelTank/Size3Tanks/Size3Tanks_Orange_Norm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/xenonTank

@PART[xenonTank]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_xenonTank
		textureSet = Stock_Default_xenonTank
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_xenonTank
	@MATERIAL
	{
		mesh = tank
		
		texture = _MainTex,Squad/Parts/FuelTank/xenonTank/model000
		texture = _BumpMap,Squad/Parts/FuelTank/xenonTank/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/xenonTankLarge

@PART[xenonTankLarge]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_xenonTankLarge
		textureSet = Stock_Default_xenonTankLarge
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_xenonTankLarge
	@MATERIAL
	{
		mesh = Frame
		mesh = Tank
		
		texture = _MainTex,Squad/Parts/FuelTank/xenonTankLarge/tank
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/FuelTank/xenonTankRadial

@PART[xenonTankRadial]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_xenonTankRadial
		textureSet = Stock_Default_xenonTankRadial
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_xenonTankRadial
	@MATERIAL
	{
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/FuelTank/xenonTankRadial/ksp_r_xenonTank_diff
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Misc
// Squad/Parts/Misc/AsteroidDay

@PART[InfraredTelescope,HighGainAntenna]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_AsteroidDay_1
		textureSet = Stock_Default_AsteroidDay_1
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_AsteroidDay_1
	@MATERIAL
	{
		mesh = Cylinder_000
		mesh = Cylinder_001
		
		mesh = Anchors
		mesh = Antenna
		mesh = Antenna_001
		mesh = Antenna_002
		mesh = AntennaStrut
		mesh = BottomHinge
		mesh = Cube
		mesh = Cube_001
		mesh = Dish
		mesh = DishAntenna
		mesh = DishBracket
		mesh = HighGainAntenna
		mesh = MainPin
		mesh = TopHinge
		mesh = Truss
		mesh = TrussPin
		
		texture = _MainTex,Squad/Parts/Misc/AsteroidDay/CamSat
		texture = _BumpMap,Squad/Parts/Misc/AsteroidDay/CamSat_N_NRM
		texture = _Emissive,Squad/Parts/Misc/AsteroidDay/CamSat_glow
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

@PART[HECS2_ProbeCore]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_AsteroidDay_2
		textureSet = Stock_Default_AsteroidDay_2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_AsteroidDay_2
	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)
		
		mesh = Cylinder_001
		mesh = Cylinder_002
		mesh = Cylinder_003
		
		texture = _MainTex,Squad/Parts/Command/probeCoreHex_v2/hecsDiffuse
		texture = _BumpMap,Squad/Parts/Command/probeCoreHex_v2/hecsNormal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Misc/AsteroidDay/hecsSpecular
	}
}

@PART[LgRadialSolarPanel]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_AsteroidDay_3
		textureSet = Stock_Default_AsteroidDay_3
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_AsteroidDay_3
	@MATERIAL
	{
		mesh = panel_000
		mesh = panel_001
		mesh = panel_002
		
		texture = _MainTex,Squad/Parts/Misc/AsteroidDay/JumboHexProbe
		texture = _BumpMap,Squad/Parts/Misc/AsteroidDay/JumboHexProbe_NORM_NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Resources
// Squad/Parts/Resources/FuelCell

@PART[FuelCell]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_FuelCell
		textureSet = Stock_Default_FuelCell
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_FuelCell
	@MATERIAL
	{
		mesh = fuelcell
		
		texture = _MainTex,Squad/Parts/Resources/FuelCell/fuellcell
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

@PART[FuelCellArray]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Rack
		currentTextureSet = Stock_Default_FuelCellArray_Rack
		textureSet = Stock_Default_FuelCellArray_Rack
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Cells
		currentTextureSet = Stock_Default_FuelCellArray_Cells
		textureSet = Stock_Default_FuelCellArray_Cells
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_FuelCellArray_Rack
	@MATERIAL
	{
		mesh = Cube_001
		mesh = Cylinder_001
		mesh = Cylinder_002
		mesh = Cylinder_006
		// mesh = GreenLamp
		// mesh = RedLamp
		
		texture = _MainTex,Squad/Parts/Resources/FuelCell/FuelCellRack
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_FuelCellArray_Cells
	@MATERIAL
	{
		mesh = fuelcell_1
		mesh = fuelcell_2
		mesh = fuelcell_3
		mesh = fuelcell_4
		mesh = fuelcell_5
		mesh = fuelcell_6
		
		texture = _MainTex,Squad/Parts/Resources/FuelCell/fuellcell
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Resources/ISRU

@PART[ISRU]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_ISRU
		textureSet = Stock_Default_ISRU
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_ISRU
	@MATERIAL
	{
		mesh = Gear
		mesh = Piston 1
		mesh = Piston 2
		mesh = Piston 3
		mesh = Processor
		
		texture = _MainTex,Squad/Parts/Resources/ISRU/Processor_Large
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Resources/LargeTank

@PART[LargeTank]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_LargeTank
		textureSet = Stock_Default_LargeTank
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_LargeTank
	@MATERIAL
	{
		mesh = ksp_l_resourceContainer_fbx
		
		texture = _MainTex,Squad/Parts/Resources/LargeTank/ksp_l_resourceContainer_diff
		texture = _BumpMap,Squad/Parts/Resources/LargeTank/ksp_l_resourceContainer_norm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Resources/MiniDrill

@PART[MiniDrill]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_MiniDrill
		textureSet = Stock_Default_MiniDrill
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_MiniDrill
	@MATERIAL
	{
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/Resources/MiniDrill/ksp_r_rockProbe_diff
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Resources/MiniISRU

@PART[MiniISRU]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_MiniISRU
		textureSet = Stock_Default_MiniISRU
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_MiniISRU
	@MATERIAL
	{
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/Resources/MiniISRU/ksp_s_processorSmall_diff
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Resources/OrbitalScanner

@PART[OrbitalScanner]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_OrbitalScanner
		textureSet = Stock_Default_OrbitalScanner
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_OrbitalScanner
	@MATERIAL
	{
		mesh = base
		mesh = scanner
		
		texture = _MainTex,Squad/Parts/Resources/OrbitalScanner/detector
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Resources/RadialDrill
// DrillBase DrillBody // BarsMain BarsSec Cable HOSE // DrillRod DrillHead Bit Bit2 Bit3

@PART[RadialDrill]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Body
		currentTextureSet = Stock_Default_RadialDrill_Body
		textureSet = Stock_Default_RadialDrill_Body
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Stuff
		currentTextureSet = Stock_Default_RadialDrill_Stuff
		textureSet = Stock_Default_RadialDrill_Stuff
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Drill
		currentTextureSet = Stock_Default_RadialDrill_Drill
		textureSet = Stock_Default_RadialDrill_Drill
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RadialDrill_Body
	@MATERIAL
	{
		mesh = DrillBase
		mesh = DrillBody
		
		texture = _MainTex,Squad/Parts/Resources/RadialDrill/TriBitDrill
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RadialDrill_Stuff
	@MATERIAL
	{
		mesh = BarsMain
		mesh = BarsSec
		mesh = Cable
		mesh = HOSE
		
		texture = _MainTex,Squad/Parts/Resources/RadialDrill/TriBitDrill
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RadialDrill_Drill
	@MATERIAL
	{
		mesh = DrillRod
		mesh = DrillHead
		mesh = Bit
		mesh = Bit2
		mesh = Bit3
		
		texture = _MainTex,Squad/Parts/Resources/RadialDrill/TriBitDrill
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Resources/RadialTank

@PART[RadialOreTank]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_RadialOreTank
		textureSet = Stock_Default_RadialOreTank
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RadialOreTank
	@MATERIAL
	{
		mesh = ksp_s_resourceContainer_fbx
		mesh = ksp_s_resourceContainer_fbx_001
		
		texture = _MainTex,Squad/Parts/Resources/RadialTank/ksp_r_resourceContainer_psd_2
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Resources/SmallTank

@PART[SmallTank]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_SmallTank
		textureSet = Stock_Default_SmallTank
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_SmallTank
	@MATERIAL
	{
		mesh = ksp_s_resourceContainer_fbx
		
		texture = _MainTex,Squad/Parts/Resources/SmallTank/ksp_s_resourceContainer_diff
		texture = _BumpMap,Squad/Parts/Resources/SmallTank/ksp_s_resourceContainer_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Resources/SurfaceScanner

@PART[SurfaceScanner]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_SurfaceScanner
		textureSet = Stock_Default_SurfaceScanner
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_SurfaceScanner
	@MATERIAL
	{
		mesh = ksp_r_samplerAir_fbx
		
		texture = _MainTex,Squad/Parts/Resources/SurfaceScanner/ksp_r_samplerAir_diff
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Resources/SurveyScanner
// base // petal1 petal2

@PART[SurveyScanner]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Base
		currentTextureSet = Stock_Default_SurveyScanner_Base
		textureSet = Stock_Default_SurveyScanner_Base
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Petals
		currentTextureSet = Stock_Default_SurveyScanner_Petals
		textureSet = Stock_Default_SurveyScanner_Petals
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_SurveyScanner_Base
	@MATERIAL
	{
		mesh = base
		
		texture = _MainTex,Squad/Parts/Resources/SurveyScanner/dish
		texture = _BumpMap,Squad/Parts/Resources/SurveyScanner/dish_n
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_SurveyScanner_Petals
	@MATERIAL
	{
		mesh = petal1
		mesh = petal2
		
		texture = _MainTex,Squad/Parts/Resources/SurveyScanner/dish
		texture = _BumpMap,Squad/Parts/Resources/SurveyScanner/dish_n
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Science
// Squad/Parts/Science/AtmosphereSensor

@PART[sensorAtmosphere]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_sensorAtmosphere
		textureSet = Stock_Default_sensorAtmosphere
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_sensorAtmosphere
	@MATERIAL
	{
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/Science/AtmosphereSensor/ksp_r_hydroscoop_diff
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Science/GooExperiment

@PART[GooExperiment]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_GooExperiment
		textureSet = Stock_Default_GooExperiment
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_GooExperiment
	@MATERIAL
	{
		mesh = Capsule001
		mesh = Object001
		
		texture = _MainTex,Squad/Parts/Science/GooExperiment/GooExperiment
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Science/LargeCrewedLab

@PART[Large_Crewed_Lab]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Large_Crewed_Lab
		textureSet = Stock_Default_Large_Crewed_Lab
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Large_Crewed_Lab
	@MATERIAL
	{
		mesh = Lab
		
		texture = _MainTex,Squad/Parts/Science/LargeCrewedLab/Large_Crewed_Lab
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Science/LargeCrewedLab/Large_Crewed_Lab_glow
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Science/Magnetometer

@PART[Magnetometer]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Body
		currentTextureSet = Stock_Default_Magnetometer_Body
		textureSet = Stock_Default_Magnetometer_Body
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Instrument
		currentTextureSet = Stock_Default_Magnetometer_Instrument
		textureSet = Stock_Default_Magnetometer_Instrument
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Rails
		currentTextureSet = Stock_Default_Magnetometer_Rails
		textureSet = Stock_Default_Magnetometer_Rails
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Magnetometer_Body
	@MATERIAL
	{
		// mesh = instrument
		mesh = Magenetometer
		
		// mesh = Ring_01
		// mesh = Ring_03
		// mesh = Ring_04
		// mesh = Ring_05
		// mesh = Ring_06
		// mesh = Ring_07
		// mesh = Ring_08
		// mesh = Ring_09
		// mesh = Ring_10
		// mesh = Ring_11
		// mesh = Ring_12
		
		// mesh = wireA_1
		// mesh = wireA_2
		// mesh = wireA_3
		// mesh = wireA_4
		// mesh = wireA_5
		// mesh = wireA_6
		// mesh = wireA_7
		// mesh = wireA_8
		// mesh = wireA_9
		// mesh = wireA_10
		// mesh = wireA_11
		// mesh = wireA_12
		
		// mesh = wireB_1
		// mesh = wireB_2
		// mesh = wireB_3
		// mesh = wireB_4
		// mesh = wireB_5
		// mesh = wireB_6
		// mesh = wireB_7
		// mesh = wireB_8
		// mesh = wireB_9
		// mesh = wireB_10
		// mesh = wireB_11
		// mesh = wireB_12
		
		// mesh = wireC_1
		// mesh = wireC_2
		// mesh = wireC_3
		// mesh = wireC_4
		// mesh = wireC_5
		// mesh = wireC_6
		// mesh = wireC_7
		// mesh = wireC_8
		// mesh = wireC_9
		// mesh = wireC_10
		// mesh = wireC_11
		// mesh = wireC_12
		
		texture = _MainTex,Squad/Parts/Science/Magnetometer/Magnetometer_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Magnetometer_Instrument
	@MATERIAL
	{
		mesh = instrument
		// mesh = Magenetometer
		
		// mesh = Ring_01
		// mesh = Ring_03
		// mesh = Ring_04
		// mesh = Ring_05
		// mesh = Ring_06
		// mesh = Ring_07
		// mesh = Ring_08
		// mesh = Ring_09
		// mesh = Ring_10
		// mesh = Ring_11
		// mesh = Ring_12
		
		// mesh = wireA_1
		// mesh = wireA_2
		// mesh = wireA_3
		// mesh = wireA_4
		// mesh = wireA_5
		// mesh = wireA_6
		// mesh = wireA_7
		// mesh = wireA_8
		// mesh = wireA_9
		// mesh = wireA_10
		// mesh = wireA_11
		// mesh = wireA_12
		
		// mesh = wireB_1
		// mesh = wireB_2
		// mesh = wireB_3
		// mesh = wireB_4
		// mesh = wireB_5
		// mesh = wireB_6
		// mesh = wireB_7
		// mesh = wireB_8
		// mesh = wireB_9
		// mesh = wireB_10
		// mesh = wireB_11
		// mesh = wireB_12
		
		// mesh = wireC_1
		// mesh = wireC_2
		// mesh = wireC_3
		// mesh = wireC_4
		// mesh = wireC_5
		// mesh = wireC_6
		// mesh = wireC_7
		// mesh = wireC_8
		// mesh = wireC_9
		// mesh = wireC_10
		// mesh = wireC_11
		// mesh = wireC_12
		
		texture = _MainTex,Squad/Parts/Science/Magnetometer/Magnetometer_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Magnetometer_Rails
	@MATERIAL
	{
		// mesh = instrument
		// mesh = Magenetometer
		
		mesh = Ring_01
		mesh = Ring_03
		mesh = Ring_04
		mesh = Ring_05
		mesh = Ring_06
		mesh = Ring_07
		mesh = Ring_08
		mesh = Ring_09
		mesh = Ring_10
		mesh = Ring_11
		mesh = Ring_12
		
		mesh = wireA_1
		mesh = wireA_2
		mesh = wireA_3
		mesh = wireA_4
		mesh = wireA_5
		mesh = wireA_6
		mesh = wireA_7
		mesh = wireA_8
		mesh = wireA_9
		mesh = wireA_10
		mesh = wireA_11
		mesh = wireA_12
		
		mesh = wireB_1
		mesh = wireB_2
		mesh = wireB_3
		mesh = wireB_4
		mesh = wireB_5
		mesh = wireB_6
		mesh = wireB_7
		mesh = wireB_8
		mesh = wireB_9
		mesh = wireB_10
		mesh = wireB_11
		mesh = wireB_12
		
		mesh = wireC_1
		mesh = wireC_2
		mesh = wireC_3
		mesh = wireC_4
		mesh = wireC_5
		mesh = wireC_6
		mesh = wireC_7
		mesh = wireC_8
		mesh = wireC_9
		mesh = wireC_10
		mesh = wireC_11
		mesh = wireC_12
		
		texture = _MainTex,Squad/Parts/Science/Magnetometer/Magnetometer_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Science/MaterialBay

@PART[science_module]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_science_module
		textureSet = Stock_Default_science_module
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_science_module
	@MATERIAL
	{
		mesh = DoorAssembly
		mesh = Glass
		mesh = LeftFrontSlat
		mesh = LeftSlat
		mesh = Line001
		mesh = Line002
		mesh = LowerSlat
		mesh = RightFrontSlat
		mesh = RightSlat
		mesh = SampleContainer
		mesh = UpperSlat
		
		texture = _MainTex,Squad/Parts/Science/MaterialBay/science_module_small
		texture = _BumpMap,Squad/Parts/Science/MaterialBay/science_module_small_nrm
		texture = _Emissive,Squad/Parts/Science/MaterialBay/science_module_small_emit
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Alpha/Cutoff Bumped
		
		mesh = WiresPlaneUpper
		mesh = WiresPlaneR
		mesh = WiresPlaneLower
		mesh = WiresPlaneL
		
		texture = _MainTex,Squad/Parts/Science/MaterialBay/wires
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Science/ScienceBox

@PART[ScienceBox]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_ScienceBox
		textureSet = Stock_Default_ScienceBox
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_ScienceBox
	@MATERIAL
	{
		mesh = Container
		
		texture = _MainTex,Squad/Parts/Science/ScienceBox/Container
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Science/sensorAccelerometer

@PART[sensorAccelerometer]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_sensorAccelerometer
		textureSet = Stock_Default_sensorAccelerometer
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_sensorAccelerometer
	@MATERIAL
	{
		mesh = accelerometer
		
		texture = _MainTex,Squad/Parts/Science/sensorAccelerometer/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Science/sensorBarometer

@PART[sensorBarometer]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_sensorBarometer
		textureSet = Stock_Default_sensorBarometer
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_sensorBarometer
	@MATERIAL
	{
		mesh = barometer
		
		texture = _MainTex,Squad/Parts/Science/sensorBarometer/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Science/sensorGravimeter

@PART[sensorGravimeter]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_sensorGravimeter
		textureSet = Stock_Default_sensorGravimeter
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_sensorGravimeter
	@MATERIAL
	{
		mesh = gravimeter
		
		texture = _MainTex,Squad/Parts/Science/sensorGravimeter/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Science/sensorThermometer

@PART[sensorThermometer]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_sensorThermometer
		textureSet = Stock_Default_sensorThermometer
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_sensorThermometer
	@MATERIAL
	{
		mesh = thermometer
		
		texture = _MainTex,Squad/Parts/Science/sensorThermometer/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Structural
// Squad/Parts/Structural/FLAdapters/

@PART[adapterSmallMiniShort,adapterSmallMiniTall]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_FLAdapters_W
		textureSet = Stock_Default_FLAdapters_W
		textureSet = Stock_Default_FLAdapters_O
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_FLAdapters_W
	@MATERIAL
	{
		mesh = FL-A5
		mesh = FL-A10
		
		texture = _MainTex,Squad/Parts/Structural/FLAdapters/Assets/FLA-Adapters_diffuse
		texture = _BumpMap,Squad/Parts/Structural/FLAdapters/Assets/FLA-Adapters_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_FLAdapters_O
	@MATERIAL
	{
		mesh = FL-A5
		mesh = FL-A10
		
		texture = _MainTex,Squad/Parts/Structural/FLAdapters/Assets/FLA-Adapters_diffuse_O
		texture = _BumpMap,Squad/Parts/Structural/FLAdapters/Assets/FLA-Adapters_normal_O
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Structural/mk1Parts/

@PART[radialEngineBody,nacelleBody,MK1Fuselage,MK1IntakeFuselage,Mk1FuselageStructural]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk1Parts
		textureSet = Stock_Default_mk1Parts
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk1Parts
	@MATERIAL
	{
		mesh = Fuselage
		mesh = IntakeFuselage
		mesh = Nacelle1
		mesh = Nacelle2
		mesh = Structural
		mesh = StructuralHollow
		
		texture = _MainTex,Squad/Parts/Structural/mk1Parts/Mk1Structural
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Structural/mk1Parts/Mk1StructuralHeat
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Structural/Size3to2Adapter

@PART[Size3to2Adapter]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Size3to2Adapter
		textureSet = Stock_Default_Size3to2Adapter
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size3to2Adapter
	@MATERIAL
	{
		mesh = Size3to2Adapter
		
		texture = _MainTex,Squad/Parts/Structural/Size3to2Adapter/decoupler_and_adaptor_cm
		texture = _BumpMap,Squad/Parts/Structural/Size3to2Adapter/decoupler_and_adaptor_nm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Structural/Size3to2Adapter_v2

@PART[Size3To2Adapter_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Size3to2Adapter_v2_BW
		textureSet = Stock_Default_Size3to2Adapter_v2_BW
		textureSet = Stock_Default_Size3to2Adapter_v2_W
		textureSet = Stock_Default_Size3to2Adapter_v2_O
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size3to2Adapter_v2_BW
	@MATERIAL
	{
		mesh = Size3adapter
		
		texture = _MainTex,Squad/Parts/Structural/Size3To2Adapter_v2/Size2to3_BW_Diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size3to2Adapter_v2_W
	@MATERIAL
	{
		mesh = Size3adapter
		
		texture = _MainTex,Squad/Parts/Structural/Size3To2Adapter_v2/Size2to3_W_Diffuse
		texture = _BumpMap,Squad/Parts/Structural/Size3To2Adapter_v2/Size2to3_W_NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Size3to2Adapter_v2_O
	@MATERIAL
	{
		mesh = Size3adapter
		
		texture = _MainTex,Squad/Parts/Structural/Size3To2Adapter_v2/Size2to3_O_Diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Structural/stackAdapters

@PART[adapterLargeSmallBi,adapterLargeSmallQuad,adapterLargeSmallTri]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Dark]
		{
			!TEXTURE,*{}
			EXTRA_INFO
			{
				textureSet = Stock_Default_stackAdapters_Dark
			}
		}
		@VARIANT[White]
		{
			!TEXTURE,*{}
			EXTRA_INFO
			{
				textureSet = Stock_Default_stackAdapters_White
			}
		}
		@VARIANT[Orange]
		{
			!TEXTURE,*{}
			EXTRA_INFO
			{
				textureSet = Stock_Default_stackAdapters_Orange
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_stackAdapters_Dark
	@title = Stock Default stackAdapters Dark
	@MATERIAL
	{
		@shader = KSP/Bumped
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/Structural/stackAdapters/Assets/stackAdapters_diffuse_Dark
		texture = _BumpMap,Squad/Parts/Structural/stackAdapters/Assets/stackAdapters_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_stackAdapters_White
	@title = Stock Default stackAdapters White
	@MATERIAL
	{
		@shader = KSP/Bumped
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/Structural/stackAdapters/Assets/stackAdapters_diffuse
		texture = _BumpMap,Squad/Parts/Structural/stackAdapters/Assets/stackAdapters_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_stackAdapters_Orange
	@title = Stock Default stackAdapters Orange
	@MATERIAL
	{
		@shader = KSP/Bumped
		mesh = obj_base
		
		texture = _MainTex,Squad/Parts/Structural/stackAdapters/Assets/stackAdapters_diffuse_Orange
		texture = _BumpMap,Squad/Parts/Structural/stackAdapters/Assets/stackAdapters_normal_Orange
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Structural/stationHub

@PART[stationHub]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_stationHub
		textureSet = Stock_Default_stationHub
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_stationHub
	@MATERIAL
	{
		mesh = hub
		
		texture = _MainTex,Squad/Parts/Structural/stationHub/model000
		texture = _BumpMap,Squad/Parts/Structural/stationHub/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Structural/structuralIBeam200

@PART[structuralIBeam2,structuralIBeam3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_structuralIBeam2
		textureSet = Stock_Default_structuralIBeam2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_structuralIBeam2
	@MATERIAL
	{
		mesh = ibeam2
		
		texture = _MainTex,Squad/Parts/Structural/structuralIBeam200/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Structural/structuralIBeam200Pocket
// Added to standard I Beam 200 for now

// Squad/Parts/Structural/structuralIBeam650

@PART[structuralIBeam1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_structuralIBeam1
		textureSet = Stock_Default_structuralIBeam1
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_structuralIBeam1
	@MATERIAL
	{
		mesh = ibeam
		
		texture = _MainTex,Squad/Parts/Structural/structuralIBeam650/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Structural/structuralMicronode

@PART[structuralMiniNode]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_structuralMiniNode
		textureSet = Stock_Default_structuralMiniNode
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_structuralMiniNode
	@MATERIAL
	{
		mesh = node
		
		texture = _MainTex,Squad/Parts/Structural/structuralMicronode/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Structural/structuralPanel1x1

@PART[structuralPanel1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_structuralPanel1
		textureSet = Stock_Default_structuralPanel1
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_structuralPanel1
	@MATERIAL
	{
		mesh = panel
		
		texture = _MainTex,Squad/Parts/Structural/structuralPanel1x1/model000
		texture = _BumpMap,Squad/Parts/Structural/structuralPanel1x1/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Structural/structuralPanel2x2

@PART[structuralPanel2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_structuralPanel2
		textureSet = Stock_Default_structuralPanel2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_structuralPanel2
	@MATERIAL
	{
		mesh = panel
		
		texture = _MainTex,Squad/Parts/Structural/structuralPanel2x2/model000
		texture = _BumpMap,Squad/Parts/Structural/structuralPanel2x2/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

//Squad/Parts/Structural/structuralPylons

@PART[smallHardpoint,structuralPylon]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_structuralPylons
		textureSet = Stock_Default_structuralPylons
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_structuralPylons
	@MATERIAL
	{
		mesh = Big
		mesh = Small
		
		texture = _MainTex,Squad/Parts/Structural/structuralPylons/Pylons
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

//Squad/Parts/Structural/strutCubicOcto

@PART[strutCube]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_strutCube
		textureSet = Stock_Default_strutCube
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_strutCube
	@MATERIAL
	{
		mesh = cubestrut
		
		texture = _MainTex,Squad/Parts/Structural/strutCubicOcto/cubestrut
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

//Squad/Parts/Structural/strutOcto

@PART[strutOcto]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_strutOcto
		textureSet = Stock_Default_strutOcto
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_strutOcto
	@MATERIAL
	{
		mesh = octostrut
		
		texture = _MainTex,Squad/Parts/Structural/strutOcto/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

//Squad/Parts/Structural/trussGirderAdapter
// truss // base
// Possibly split

@PART[trussAdapter]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Base
		currentTextureSet = Stock_Default_trussAdapter_Base
		textureSet = Stock_Default_trussAdapter_Base
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Truss
		currentTextureSet = Stock_Default_trussAdapter_Truss
		textureSet = Stock_Default_trussAdapter_Truss
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_trussAdapter_Base
	@MATERIAL
	{
		mesh = base
		
		texture = _MainTex,Squad/Parts/Structural/trussGirderAdapter/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_trussAdapter_Truss
	@MATERIAL
	{
		mesh = truss
		
		texture = _MainTex,Squad/Parts/Structural/trussGirderAdapter/model001
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

//Squad/Parts/Structural/trussGirderL

@PART[trussPiece1x,trussPiece3x]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_trussPiece1x
		textureSet = Stock_Default_trussPiece1x
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_trussPiece1x
	@MATERIAL
	{
		mesh = truss1x
		mesh = truss3x
		
		texture = _MainTex,Squad/Parts/Structural/trussGirderL/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Structural/trussGirderXL
// Added to trussGirderL for now

// Thermal
// Squad/Parts/Thermal/FoldingRadiators

@PART[foldingRadLarge,foldingRadMed,foldingRadSmall]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Folding_Radiators
		textureSet = Stock_Default_Folding_Radiators
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Folding_Radiators
	@MATERIAL
	{
		mesh = Hinge1
		mesh = Hinge1_001
		mesh = Hinge1_002
		mesh = Hinge2
		mesh = Hinge2_001
		mesh = Hinge2_002
		mesh = Hinge2_003
		mesh = Hinge2_004
		mesh = Hinge2_005
		mesh = Hinge3
		mesh = Hinge3_001
		mesh = Hinge3_002
		mesh = Hinge4
		mesh = Hinge4_001
		mesh = Hinge4_002
		mesh = Hinge5
		mesh = Hinge5_001
		mesh = Hinge5_002
		mesh = Hinge6
		mesh = Hinge6_001
		mesh = Hinge6_002
		mesh = Hinge7
		mesh = Hinge7_001
		mesh = Hinge7_002
		mesh = Panel
		mesh = Panel_001
		mesh = Panel_002
		mesh = Panel_003
		mesh = Panel_004
		mesh = Panel_005
		mesh = Panel_006
		mesh = Panel_007
		mesh = Panel_008
		mesh = Panel_009
		mesh = Panel_010
		mesh = Panel_011
		mesh = Panel_012
		mesh = Panel_013
		mesh = Panel_014
		mesh = Panel_015
		mesh = Panel_016
		mesh = Panel_017
		mesh = Panel_018
		mesh = Panel_019
		mesh = Panel_020
		mesh = Panel_021
		mesh = Panel_022
		mesh = Panel_023
		mesh = Pivot
		mesh = Pivot_001
		mesh = Radiator_01
		mesh = Radiator_02
		mesh = Radiator_03
		mesh = Truss
		mesh = Truss_001
		mesh = Truss_002
		mesh = Truss_003
		mesh = Truss_004
		mesh = Truss_005
		mesh = Truss_006
		mesh = Truss_007
		mesh = Truss_008
		mesh = Truss_009
		mesh = Truss_010
		mesh = Truss_011
		mesh = Truss_012
		mesh = Truss_013
		mesh = Truss_014
		mesh = Truss_015
		mesh = Truss_016
		mesh = Truss_017
		mesh = Truss_018
		mesh = Truss_019
		mesh = Truss_020
		mesh = Truss_021
		mesh = Truss_022
		mesh = Truss_023
		mesh = Truss_024
		mesh = Truss_025
		mesh = Truss_026
		mesh = Truss_027
		mesh = Truss_028
		mesh = Truss_029
		mesh = Truss_030
		mesh = Truss_031
		
		texture = _MainTex,Squad/Parts/Thermal/FoldingRadiators/radiator
		texture = _BumpMap,Squad/Parts/Thermal/FoldingRadiators/radiator_N_NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Thermal/RadiatorPanels

@PART[radPanelEdge,radPanelLg,radPanelSm]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_radPanel
		textureSet = Stock_Default_radPanel
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_radPanel
	@MATERIAL
	{
		mesh = Cube
		mesh = Cube_001
		mesh = Cube_002
		mesh = Cube_003
		mesh = Cylinder_000
		mesh = Cylinder_001
		mesh = Cylinder_002
		mesh = RadPanel_Lg
		mesh = RadPanel_Sm
		
		texture = _MainTex,Squad/Parts/Thermal/RadiatorPanels/radPanel
		texture = _BumpMap,Squad/Parts/Thermal/RadiatorPanels/radPanel_N_NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Utility
// Squad/Parts/Utility/commDish88-88

@PART[commDish]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Base
		currentTextureSet = Stock_Default_commDish_Base
		textureSet = Stock_Default_commDish_Base
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Dish
		currentTextureSet = Stock_Default_commDish_Dish
		textureSet = Stock_Default_commDish_Dish
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_commDish_Base
	@MATERIAL
	{
		mesh = AntennaCap
		mesh = Cylinder001
		mesh = Piston
		mesh = Piston001
		mesh = BaseArm007
		mesh = BaseArm008
		mesh = BaseArm009
		mesh = BaseArm010
		mesh = BaseArm011
		mesh = BaseArm012
		mesh = BaseArm013
		mesh = BaseArm014
		mesh = MidArm007
		mesh = MidArm008
		mesh = MidArm009
		mesh = MidArm010
		mesh = MidArm011
		mesh = MidArm012
		mesh = MidArm013
		mesh = MidArm014
		mesh = OuterArm007
		mesh = OuterArm008
		mesh = OuterArm009
		mesh = OuterArm010
		mesh = OuterArm011
		mesh = OuterArm012
		mesh = OuterArm013
		mesh = OuterArm014
		mesh = ArmTip007
		mesh = ArmTip008
		mesh = ArmTip009
		mesh = ArmTip010
		mesh = ArmTip011
		mesh = ArmTip012
		mesh = ArmTip013
		mesh = ArmTip014
		mesh = ConnectorArm014
		mesh = ConnectorArm015
		mesh = ConnectorArm016
		mesh = ConnectorArm017
		mesh = ConnectorArm018
		mesh = ConnectorArm019
		mesh = ConnectorArm020
		mesh = ConnectorArm021
		mesh = ConnectorArm022
		mesh = ConnectorArm023
		mesh = ConnectorArm024
		mesh = ConnectorArm025
		mesh = ConnectorArm026
		mesh = ConnectorArm027
		mesh = ConnectorArm028
		mesh = ConnectorArm029
		mesh = LowerPlate002
		mesh = LowerPlate003
		mesh = LowerPlate004
		mesh = LowerPlate005
		mesh = LowerPlate006
		mesh = LowerPlate007
		mesh = LowerPlate008
		mesh = LowerPlate009
		mesh = LowerPlate010
		mesh = LowerPlate011
		mesh = LowerPlate012
		mesh = LowerPlate013
		mesh = LowerPlate014
		mesh = LowerPlate015
		mesh = LowerPlate016
		mesh = LowerPlate017
		
		texture = _MainTex,Squad/Parts/Utility/commDish88-88/comm_dish_v2_diff
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_commDish_Dish
	@MATERIAL
	{
		mesh = Sphere001
		
		texture = _MainTex,Squad/Parts/Utility/commDish88-88/comm_dish_array
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/commsAntennaDTS-M1
// Split? Base + "dish"

@PART[mediumDishAntenna]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Base
		currentTextureSet = Stock_Default_mediumDishAntenna
		textureSet = Stock_Default_mediumDishAntenna
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Antenna
		currentTextureSet = Stock_Default_mediumDishAntenna_Antenna
		textureSet = Stock_Default_mediumDishAntenna_Antenna
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_mediumDishAntenna
	@MATERIAL
	{
		// mesh = AntennaBridge
		// mesh = AntennaHolster
		// mesh = AntennaPane
		// mesh = AntennaPane020
		// mesh = AntennaPane021
		// mesh = AntennaPane022
		// mesh = AntennaPane023
		// mesh = AntennaPane024
		// mesh = AntennaPane025
		// mesh = AntennaPane026
		// mesh = AntennaPane027
		// mesh = AntennaPane028
		// mesh = AntennaPane029
		// mesh = AntennaPane030
		mesh = Base
		// mesh = Detector
		// mesh = LeftPane
		// mesh = Pivot
		// mesh = RightPane
		
		texture = _MainTex,Squad/Parts/Utility/commsAntennaDTS-M1/mediumDishAntenna
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Utility/commsAntennaDTS-M1/mediumDishAntenna_Emit
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_mediumDishAntenna_Antenna
	@MATERIAL
	{
		mesh = AntennaBridge
		mesh = AntennaHolster
		mesh = AntennaPane
		mesh = AntennaPane020
		mesh = AntennaPane021
		mesh = AntennaPane022
		mesh = AntennaPane023
		mesh = AntennaPane024
		mesh = AntennaPane025
		mesh = AntennaPane026
		mesh = AntennaPane027
		mesh = AntennaPane028
		mesh = AntennaPane029
		mesh = AntennaPane030
		// mesh = Base
		mesh = Detector
		mesh = LeftPane
		mesh = Pivot
		mesh = RightPane
		
		texture = _MainTex,Squad/Parts/Utility/commsAntennaDTS-M1/mediumDishAntenna
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Utility/commsAntennaDTS-M1/mediumDishAntenna_Emit
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/commsDish16

@PART[longAntenna]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_longAntenna
		textureSet = Stock_Default_longAntenna
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_longAntenna
	@MATERIAL
	{
		mesh = seg1
		mesh = seg2
		mesh = seg3
		mesh = seg4
		mesh = seg5
		
		texture = _MainTex,Squad/Parts/Utility/commsDish16/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/decouplerRadialHDM

@PART[radialDecoupler1-2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_radialDecoupler1-2
		textureSet = Stock_Default_radialDecoupler1-2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_radialDecoupler1-2
	@MATERIAL
	{
		mesh = anchor
		mesh = base
		
		texture = _MainTex,Squad/Parts/Utility/decouplerRadialHDM/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/decouplerRadialTT-38K

@PART[radialDecoupler]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_radialDecoupler
		textureSet = Stock_Default_radialDecoupler
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_radialDecoupler
	@MATERIAL
	{
		mesh = anchor
		mesh = base
		
		texture = _MainTex,Squad/Parts/Utility/decouplerRadialTT-38K/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/decouplerRadialTT-70

@PART[radialDecoupler2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_radialDecoupler2
		textureSet = Stock_Default_radialDecoupler2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_radialDecoupler2
	@MATERIAL
	{
		mesh = anchor
		mesh = base
		
		texture = _MainTex,Squad/Parts/Utility/decouplerRadialTT-70/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/DirectAntennas

@PART[SurfAntenna]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_SurfAntenna
		textureSet = Stock_Default_SurfAntenna
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_SurfAntenna
	@MATERIAL
	{
		mesh = SurfaceAntenna
		
		texture = _MainTex,Squad/Parts/Utility/DirectAntennas/MiniAntenna
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Possibly split to mount and dish texture switch for recolour flexibility
@PART[HighGainAntenna5,HighGainAntenna5_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_HighGainAntenna5_Mount
		textureSet = Stock_Default_HighGainAntenna5_Mount
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Dish
		currentTextureSet = Stock_Default_HighGainAntenna5_Dish
		textureSet = Stock_Default_HighGainAntenna5_Dish
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_HighGainAntenna5_Mount
	@MATERIAL
	{
		mesh = MiniAntenna
		mesh = Pin
		mesh = Rod
		
		texture = _MainTex,Squad/Parts/Utility/DirectAntennas/MiniAntenna
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_HighGainAntenna5_Dish
	@MATERIAL
	{
		mesh = Dish
		mesh = Trim
		mesh = Ant1
		mesh = Ant2
		mesh = Ant3
		mesh = Tip
		
		texture = _MainTex,Squad/Parts/Utility/DirectAntennas/MiniAntenna
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/dockingPort

@PART[dockingPort2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Base
		currentTextureSet = Stock_Default_dockingPort2_Base
		textureSet = Stock_Default_dockingPort2_Base
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Port
		currentTextureSet = Stock_Default_dockingPort2_Port
		textureSet = Stock_Default_dockingPort2_Port
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_dockingPort2_Base
	@MATERIAL
	{
		mesh = base
		mesh = base2
		
		texture = _MainTex,Squad/Parts/Utility/dockingPort/DockingPorts_Clampotron_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/dockingPort/DockingPorts_Clampotron_Normal
		texture = _Emissive,Squad/Parts/Utility/dockingPort/DockingPorts_Clampotron_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_dockingPort2_Port
	@MATERIAL
	{
		mesh = port
		// mesh = Marker , Squad/Parts/Utility/dockingPort/Arrow Pointer
		
		texture = _MainTex,Squad/Parts/Utility/dockingPort/DockingPorts_Clampotron_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/dockingPort/DockingPorts_Clampotron_Normal
		texture = _Emissive,Squad/Parts/Utility/dockingPort/DockingPorts_Clampotron_Emissive
	}
}

// Squad/Parts/Utility/dockingPortInline

@PART[dockingPortLateral]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Body
		currentTextureSet = Stock_Default_dockingPortLateral_Body
		textureSet = Stock_Default_dockingPortLateral_Body
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Doors
		currentTextureSet = Stock_Default_dockingPortLateral_Doors
		textureSet = Stock_Default_dockingPortLateral_Doors
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Port
		currentTextureSet = Stock_Default_dockingPortLateral_Port
		textureSet = Stock_Default_dockingPortLateral_Port
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_dockingPortLateral_Body
	@MATERIAL
	{
		mesh = housing
		mesh = caps
		
		texture = _MainTex,Squad/Parts/Utility/dockingPortInline/ClampotronLinear_ClampotronLinear_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/dockingPortInline/ClampotronLinear_ClampotronLinear_Normal
		texture = _Emissive,Squad/Parts/Utility/dockingPortInline/ClampotronLinear_ClampotronLinear_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_dockingPortLateral_Doors
	@MATERIAL
	{
		mesh = door1
		mesh = door2
		
		texture = _MainTex,Squad/Parts/Utility/dockingPortInline/ClampotronLinear_ClampotronLinear_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/dockingPortInline/ClampotronLinear_ClampotronLinear_Normal
		texture = _Emissive,Squad/Parts/Utility/dockingPortInline/ClampotronLinear_ClampotronLinear_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_dockingPortLateral_Port
	@MATERIAL
	{
		mesh = port.001
		// mesh = Marker (3) , Squad/Parts/Utility/dockingPortInline/Arrow Pointer
		// mesh = Marker (4) , Squad/Parts/Utility/dockingPortInline/Arrow Pointer
		
		texture = _MainTex,Squad/Parts/Utility/dockingPortInline/DockingPorts_Clampotron_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/dockingPortInline/DockingPorts_Clampotron_Normal
		texture = _Emissive,Squad/Parts/Utility/dockingPortInline/DockingPorts_Clampotron_Emissive
	}
}

// Squad/Parts/Utility/dockingPortJr

@PART[dockingPort3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_dockingPort3_Base
		textureSet = Stock_Default_dockingPort3_Base
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Port
		currentTextureSet = Stock_Default_dockingPort3_Port
		textureSet = Stock_Default_dockingPort3_Port
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_dockingPort3_Base
	@MATERIAL
	{
		mesh = base
		mesh = base2
		
		texture = _MainTex,Squad/Parts/Utility/dockingPortJr/DockingPorts_ClampotronJR_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/dockingPortJr/DockingPorts_ClampotronJR_Normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_dockingPort3_Port
	@MATERIAL
	{
		mesh = port
		// mesh = Marker , Squad/Parts/Utility/dockingPortJr/Arrow Pointer
		// mesh = Marker (1) , Squad/Parts/Utility/dockingPortJr/Arrow Pointer
		
		texture = _MainTex,Squad/Parts/Utility/dockingPortJr/DockingPorts_ClampotronJR_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/dockingPortJr/DockingPorts_ClampotronJR_Normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// Squad/Parts/Utility/dockingPortShielded

@PART[dockingPort1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Base
		currentTextureSet = Stock_Default_dockingPort1_Base
		textureSet = Stock_Default_dockingPort1_Base
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Petals
		currentTextureSet = Stock_Default_dockingPort1_Petals
		textureSet = Stock_Default_dockingPort1_Petals
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Port
		currentTextureSet = Stock_Default_dockingPort1_Port
		textureSet = Stock_Default_dockingPort1_Port
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_dockingPort1_Base
	@MATERIAL
	{
		mesh = base
		mesh = Clampotron.002
		
		texture = _MainTex,Squad/Parts/Utility/dockingPortShielded/Clamp-O-Tron Shielded Docking Port_ClampotronShielded_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/dockingPortShielded/Clamp-O-Tron Shielded Docking Port_ClampotronShielded_Normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_dockingPort1_Petals
	@MATERIAL
	{
		mesh = petal1
		mesh = petal02
		mesh = petal03
		
		texture = _MainTex,Squad/Parts/Utility/dockingPortShielded/Clamp-O-Tron Shielded Docking Port_ClampotronShielded_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/dockingPortShielded/Clamp-O-Tron Shielded Docking Port_ClampotronShielded_Normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_dockingPort1_Port
	@MATERIAL
	{
		mesh = Clampotron.003
		mesh = Clampotron.007
		// mesh = Marker (1) , Squad/Parts/Utility/dockingPortShielded/Arrow Pointer
		// mesh = Marker (2) , Squad/Parts/Utility/dockingPortShielded/Arrow Pointer
		
		texture = _MainTex,Squad/Parts/Utility/dockingPortShielded/DockingPorts_Clampotron_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/dockingPortShielded/DockingPorts_Clampotron_Normal
		texture = _Emissive,Squad/Parts/Utility/dockingPortShielded/DockingPorts_Clampotron_Emissive
	}
}

// Squad/Parts/Utility/dockingPortSr

@PART[dockingPortLarge]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_dockingPortLarge
		textureSet = Stock_Default_dockingPortLarge
		textureSet = Stock_Default_dockingPortLarge_Plain
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_dockingPortLarge
	@MATERIAL
	{
		mesh = base
		mesh = port
		// mesh = Marker , Squad/Parts/Utility/dockingPortSr/Arrow Pointer
		
		texture = _MainTex,Squad/Parts/Utility/dockingPortSr/ClampotronSr_ClampotronSr_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/dockingPortSr/ClampotronSr_ClampotronSr_Normal
		texture = _Emissive,Squad/Parts/Utility/dockingPortSr/ClampotronSr_ClampotronSr_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_dockingPortLarge_Plain
	@MATERIAL
	{
		mesh = base
		mesh = port
		// mesh = Marker , Squad/Parts/Utility/dockingPortSr/Arrow Pointer
		
		texture = _MainTex,Squad/Parts/Utility/dockingPortSr/ClampotronSr_ClampotronSr_Diffuse_gray
		texture = _BumpMap,Squad/Parts/Utility/dockingPortSr/ClampotronSr_ClampotronSr_Normal
		texture = _Emissive,Squad/Parts/Utility/dockingPortSr/ClampotronSr_ClampotronSr_Emissive
	}
}

// Squad/Parts/Utility/Fireworks

@PART[fireworksLauncherBig,fireworksLauncherSmall]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_fireworksLaunchers
		textureSet = Stock_Default_fireworksLaunchers
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_fireworksLaunchers
	@MATERIAL
	{
		mesh = fireworks_launcher_big
		mesh = fireworks_launcher_small
		
		texture = _MainTex,Squad/Parts/Utility/Fireworks/Assets/fireworks_launcher_big
		texture = _BumpMap,Squad/Parts/Utility/Fireworks/Assets/fireworks_launcher_big 1
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// Squad/Parts/Utility/Flags

// @PART[flagPartFlat,flagPartSize0,flagPartSize1,flagPartSize2,flagPartSize3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @MODULE[ModulePartVariants]
	// {
		// @VARIANT[White]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_Flags_White
			// }
		// }
		// @VARIANT[Dark]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_Flags_Dark
			// }
		// }
		// @VARIANT[Orange]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_Flags_Orange
			// }
		// }
		// @VARIANT[TransparentBackground]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_Flags_TransparentBackground
			// }
		// }
		// @VARIANT[WhitePanel]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_Flags_White
			// }
		// }
		// @VARIANT[DarkPanel]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_Flags_Dark
			// }
		// }
		// @VARIANT[OrangePanel]
		// {
			// EXTRA_INFO
			// {
				// textureSet = Stock_Default_Flags_Orange
			// }
		// }
	// }
	// %MODULE[TUPartVariant]
	// {
		// %name = TUPartVariant
	// }
	// %MODULE[SSTURecolorGUI]
	// {
		// %name = SSTURecolorGUI
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_Flags_White
	// @MATERIAL
	// {
		// mesh = FlatSmall
		// mesh = FlatMedium
		// mesh = FlatLarge
		// mesh = FlatHuge
		// mesh = FlatHugePanel
		// mesh = FlatLargePanel
		// mesh = FlatMediumPanel
		// mesh = FlatSmallPanel
		
		// texture = _MainTex,Squad/Parts/Utility/flags/backgroundTextures/white_background
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_Flags_Dark
	// @MATERIAL
	// {
		// mesh = FlatSmall
		// mesh = FlatMedium
		// mesh = FlatLarge
		// mesh = FlatHuge
		// mesh = FlatHugePanel
		// mesh = FlatLargePanel
		// mesh = FlatMediumPanel
		// mesh = FlatSmallPanel
		
		// texture = _MainTex,Squad/Parts/Utility/flags/backgroundTextures/dark_background
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_Flags_Orange
	// @MATERIAL
	// {
		// mesh = FlatSmall
		// mesh = FlatMedium
		// mesh = FlatLarge
		// mesh = FlatHuge
		// mesh = FlatHugePanel
		// mesh = FlatLargePanel
		// mesh = FlatMediumPanel
		// mesh = FlatSmallPanel
		
		// texture = _MainTex,Squad/Parts/Utility/flags/backgroundTextures/orange_background
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_Flags_TransparentBackground
	// @MATERIAL
	// {
		// mesh = FlatSmall
		// mesh = FlatMedium
		// mesh = FlatLarge
		// mesh = FlatHuge
		// mesh = FlatHugePanel
		// mesh = FlatLargePanel
		// mesh = FlatMediumPanel
		// mesh = FlatSmallPanel
		
		// texture = _MainTex,Squad/Parts/Utility/flags/backgroundTextures/well...none!
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	// }
// }

// Squad/Parts/Utility/GrapplingDevice

@PART[GrapplingDevice]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shroud
		currentTextureSet = Stock_Default_GrapplingDevice
		textureSet = Stock_Default_GrapplingDevice
		textureSet = Stock_Default_GrapplingDevice_Dark
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = The Claw!
		currentTextureSet = Stock_Default_GrapplingDevice_The Claw!
		textureSet = Stock_Default_GrapplingDevice_The Claw!
		textureSet = Stock_Default_GrapplingDevice_The Claw!_Dark
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_GrapplingDevice
	@MATERIAL
	{
		mesh = CapLiner
		
		mesh = FoldingCap1
		mesh = FoldingCap2
		mesh = FoldingCap3
		mesh = FoldingCap4
		mesh = FoldingCap5
		mesh = FoldingCap6
		mesh = FoldingCap7
		mesh = FoldingCap8
		mesh = FoldingCap9
		mesh = FoldingCap10
		mesh = FoldingCap11
		mesh = FoldingCap12
		mesh = FoldingCap13
		mesh = FoldingCap14
		mesh = FoldingCap15
		mesh = FoldingCap16
		mesh = FoldingCap17
		mesh = FoldingCap18
		mesh = FoldingCap19
		mesh = FoldingCap20
		
		mesh = GrappleBase
		
		mesh = OuterSleeve1
		mesh = OuterSleeve2
		mesh = OuterSleeve3
		mesh = OuterSleeve4
		
		mesh = Pillar1
		mesh = Pillar2
		mesh = Pillar3
		mesh = Pillar4
		mesh = Pillar5
		mesh = Pillar6
		mesh = Pillar7
		mesh = Pillar8
		mesh = Pillar9
		mesh = Pillar10
		mesh = Pillar11
		mesh = Pillar12
		mesh = Pillar13
		mesh = Pillar14
		mesh = Pillar15
		mesh = Pillar16
		
		mesh = Sleeve1
		mesh = Sleeve2
		mesh = Sleeve3
		mesh = Sleeve4
		
		texture = _MainTex,Squad/Parts/Utility/GrapplingDevice/grabberDiffuse
		texture = _BumpMap,Squad/Parts/Utility/GrapplingDevice/grabberNRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_GrapplingDevice_The Claw!
	@MATERIAL
	{
		mesh = ArticulatedCap
		
		mesh = BaseSleeve1
		mesh = BaseSleeve2
		
		mesh = Clasp1
		mesh = Clasp2
		mesh = Clasp3
		mesh = Clasp4
		
		mesh = InnerArm1
		mesh = InnerArm2
		mesh = InnerArm3
		mesh = InnerArm4
		
		mesh = MiddleArm1
		mesh = MiddleArm2
		mesh = MiddleArm3
		mesh = MiddleArm4
		
		mesh = Mounting1
		mesh = Mounting2
		mesh = Mounting3
		mesh = Mounting4
		
		mesh = Piston1
		mesh = Piston2
		mesh = Piston3
		mesh = Piston4
		
		texture = _MainTex,Squad/Parts/Utility/GrapplingDevice/grabberDiffuse
		texture = _BumpMap,Squad/Parts/Utility/GrapplingDevice/grabberNRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_GrapplingDevice_Dark
	@MATERIAL
	{
		mesh = CapLiner
		
		mesh = FoldingCap1
		mesh = FoldingCap2
		mesh = FoldingCap3
		mesh = FoldingCap4
		mesh = FoldingCap5
		mesh = FoldingCap6
		mesh = FoldingCap7
		mesh = FoldingCap8
		mesh = FoldingCap9
		mesh = FoldingCap10
		mesh = FoldingCap11
		mesh = FoldingCap12
		mesh = FoldingCap13
		mesh = FoldingCap14
		mesh = FoldingCap15
		mesh = FoldingCap16
		mesh = FoldingCap17
		mesh = FoldingCap18
		mesh = FoldingCap19
		mesh = FoldingCap20
		
		mesh = GrappleBase
		
		mesh = OuterSleeve1
		mesh = OuterSleeve2
		mesh = OuterSleeve3
		mesh = OuterSleeve4
		
		mesh = Pillar1
		mesh = Pillar2
		mesh = Pillar3
		mesh = Pillar4
		mesh = Pillar5
		mesh = Pillar6
		mesh = Pillar7
		mesh = Pillar8
		mesh = Pillar9
		mesh = Pillar10
		mesh = Pillar11
		mesh = Pillar12
		mesh = Pillar13
		mesh = Pillar14
		mesh = Pillar15
		mesh = Pillar16
		
		mesh = Sleeve1
		mesh = Sleeve2
		mesh = Sleeve3
		mesh = Sleeve4
		
		texture = _MainTex,Squad/Parts/Utility/GrapplingDevice/grabberDiffuse_dark
		texture = _BumpMap,Squad/Parts/Utility/GrapplingDevice/grabberNRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_GrapplingDevice_The Claw!_Dark
	@MATERIAL
	{
		mesh = ArticulatedCap
		
		mesh = BaseSleeve1
		mesh = BaseSleeve2
		
		mesh = Clasp1
		mesh = Clasp2
		mesh = Clasp3
		mesh = Clasp4
		
		mesh = InnerArm1
		mesh = InnerArm2
		mesh = InnerArm3
		mesh = InnerArm4
		
		mesh = MiddleArm1
		mesh = MiddleArm2
		mesh = MiddleArm3
		mesh = MiddleArm4
		
		mesh = Mounting1
		mesh = Mounting2
		mesh = Mounting3
		mesh = Mounting4
		
		mesh = Piston1
		mesh = Piston2
		mesh = Piston3
		mesh = Piston4
		
		texture = _MainTex,Squad/Parts/Utility/GrapplingDevice/grabberDiffuse_dark
		texture = _BumpMap,Squad/Parts/Utility/GrapplingDevice/grabberNRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/ladderRadial

@PART[ladder1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_ladder1
		textureSet = Stock_Default_ladder1
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_ladder1
	@MATERIAL
	{
		mesh = rung
		
		texture = _MainTex,Squad/Parts/Utility/ladderRadial/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/ladderTelescopic

@PART[telescopicLadder]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shroud
		currentTextureSet = Stock_Default_telescopicLadder_Shroud
		textureSet = Stock_Default_telescopicLadder_Shroud
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Ladder
		currentTextureSet = Stock_Default_telescopicLadder_Ladder
		textureSet = Stock_Default_telescopicLadder_Ladder
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_telescopicLadder_Shroud
	@MATERIAL
	{
		mesh = Object003
		mesh = Cylinder009
		mesh = Cylinder010
		mesh = Cylinder011
		mesh = Cylinder012
		mesh = ChamferBox001
		mesh = Box009
		mesh = Box010
		
		texture = _MainTex,Squad/Parts/Utility/ladderTelescopic/model002
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_telescopicLadder_Ladder
	@MATERIAL
	{
		mesh = Object001
		mesh = Object002
		mesh = Cylinder001
		mesh = Cylinder002
		mesh = Cylinder003
		mesh = Cylinder004
		mesh = Cylinder005
		mesh = Cylinder006
		mesh = Box001
		mesh = Box002
		mesh = Box003
		mesh = Box004
		mesh = Box005
		mesh = Box006
		mesh = Box007
		mesh = Box008
		
		texture = _MainTex,Squad/Parts/Utility/ladderTelescopic/model000
		texture = _BumpMap,Squad/Parts/Utility/ladderTelescopic/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/ladderTelescopicBay

@PART[telescopicLadderBay]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shroud
		currentTextureSet = Stock_Default_telescopicLadderBay_Shroud
		textureSet = Stock_Default_telescopicLadderBay_Shroud
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Ladder
		currentTextureSet = Stock_Default_telescopicLadderBay_Ladder
		textureSet = Stock_Default_telescopicLadderBay_Ladder
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_telescopicLadderBay_Shroud
	@MATERIAL
	{
		mesh = Object006
		// mesh = Deck Light Portrait
		mesh = Cylinder021
		mesh = Collider
		
		texture = _MainTex,Squad/Parts/Utility/ladderTelescopicBay/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_telescopicLadderBay_Ladder
	@MATERIAL
	{
		// mesh = Deck Light Portrait
		mesh = Box001
		mesh = Box003
		mesh = Box004
		mesh = Box005
		mesh = Box006
		mesh = Box007
		mesh = Box008
		mesh = Box009
		mesh = Box010
		mesh = Box012
		mesh = Box015
		mesh = Box016
		mesh = Box017
		mesh = Cylinder003
		mesh = Cylinder004
		mesh = Cylinder005
		mesh = Cylinder006
		mesh = Cylinder007
		mesh = Cylinder008
		mesh = Cylinder009
		mesh = Cylinder010
		mesh = Cylinder012
		mesh = Cylinder013
		mesh = Cylinder014
		mesh = Cylinder015
		mesh = Cylinder016
		mesh = Cylinder017
		mesh = Cylinder018
		mesh = Cylinder019
		mesh = Cylinder022
		mesh = Cylinder023
		mesh = Cylinder025
		mesh = Cylinder026
		mesh = Object003
		mesh = Object004
		
		texture = _MainTex,Squad/Parts/Utility/ladderTelescopicBay/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/landingLegLT-1
// UpperAssembly + UpperMounting + lowerMounting + smallPiston // PistonBody + Piston // foot

@PART[landingLeg1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mounting
		currentTextureSet = Stock_Default_landingLeg1_Mounting
		textureSet = Stock_Default_landingLeg1_Mounting
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Piston
		currentTextureSet = Stock_Default_landingLeg1_Piston
		textureSet = Stock_Default_landingLeg1_Piston
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Foot
		currentTextureSet = Stock_Default_landingLeg1_Foot
		textureSet = Stock_Default_landingLeg1_Foot
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_landingLeg1_Mounting
	@MATERIAL
	{
		mesh = UpperAssembly
		mesh = UpperMounting
		mesh = lowerMounting
		mesh = smallPiston
		
		texture = _MainTex,Squad/Parts/Utility/landingLegLT-1/ksp_r_landingStrut_diff
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_landingLeg1_Piston
	@MATERIAL
	{
		mesh = PistonBody
		mesh = Piston
		
		texture = _MainTex,Squad/Parts/Utility/landingLegLT-1/ksp_r_landingStrut_diff
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_landingLeg1_Foot
	@MATERIAL
	{
		mesh = foot
		
		texture = _MainTex,Squad/Parts/Utility/landingLegLT-1/ksp_r_landingStrut_diff
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/landingLegLT-2
// base + leftclamp + rightclamp // pistonbase + piston // foot

@PART[landingLeg1-2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_landingLeg1-2_Mount
		textureSet = Stock_Default_landingLeg1-2_Mount
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Piston
		currentTextureSet = Stock_Default_landingLeg1-2_Piston
		textureSet = Stock_Default_landingLeg1-2_Piston
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Foot
		currentTextureSet = Stock_Default_landingLeg1-2_Foot
		textureSet = Stock_Default_landingLeg1-2_Foot
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_landingLeg1-2_Mount
	@MATERIAL
	{
		mesh = base
		mesh = leftclamp
		mesh = rightclamp
		
		texture = _MainTex,Squad/Parts/Utility/landingLegLT-2/landingLeg
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_landingLeg1-2_Piston
	@MATERIAL
	{
		mesh = pistonbase
		mesh = piston
		
		texture = _MainTex,Squad/Parts/Utility/landingLegLT-2/landingLeg
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_landingLeg1-2_Foot
	@MATERIAL
	{
		mesh = foot
		
		texture = _MainTex,Squad/Parts/Utility/landingLegLT-2/landingLeg
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/landingLegLT-5
// base LowerBracket LowerBracket001 PistonCap PistonSleeve PistonSheath001 PistonSheath leghinge001 leghinge// strut1 strut2 strut003 leg

@PART[miniLandingLeg]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_miniLandingLeg_Mount
		textureSet = Stock_Default_miniLandingLeg_Mount
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Leg
		currentTextureSet = Stock_Default_miniLandingLeg_Leg
		textureSet = Stock_Default_miniLandingLeg_Leg
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_miniLandingLeg_Mount
	@MATERIAL
	{
		mesh = base
		mesh = LowerBracket
		mesh = LowerBracket001
		mesh = PistonCap
		mesh = PistonSleeve
		mesh = PistonSheath001
		mesh = PistonSheath
		mesh = leghinge001
		mesh = leghinge
		
		texture = _MainTex,Squad/Parts/Utility/landingLegLT-5/leg
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_miniLandingLeg_Leg
	@MATERIAL
	{
		mesh = strut1
		mesh = strut2
		mesh = strut003
		mesh = leg
		
		texture = _MainTex,Squad/Parts/Utility/landingLegLT-5/leg
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/launchClamp1

@PART[launchClamp1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_launchClamp1
		textureSet = Stock_Default_launchClamp1
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_launchClamp1
	@MATERIAL
	{
		mesh = base
		mesh = clamp
		mesh = hose
		mesh = obj_ground_mesh
		// excludeMesh = obj_girder_mesh
		// excludeMesh = obj_girdercap_mesh
		
		texture = _MainTex,Squad/Parts/Utility/launchClamp1/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/launchEscapeSystem
// Meshes for split?

@PART[LaunchEscapeSystem]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_LaunchEscapeSystem
		textureSet = Stock_Default_LaunchEscapeSystem
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_LaunchEscapeSystem
	@MATERIAL
	{
		mesh = LaunchEscapeSystem
		mesh = Nozzle
		mesh = thrustTransform
		
		texture = _MainTex,Squad/Parts/Utility/launchEscapeSystem/LES_Diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/lights
// navLight1 domeLight1

@PART[domeLight1,navLight1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_B_Lights1
		textureSet = Stock_Default_B_Lights1
		textureSet = Stock_Default_W_Lights1
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_B_Lights1
	@MATERIAL
	{
		mesh = light_03
		mesh = light_04
		
		texture = _MainTex,Squad/Parts/Utility/Lights/Assets/Lights_Attacheable_Lights_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/Lights/Assets/Lights_Attacheable_Lights_Normal
		texture = _Emissive,Squad/Parts/Utility/Lights/Assets/Lights_Attacheable_Lights_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_W_Lights1
	@MATERIAL
	{
		mesh = light_03
		mesh = light_04
		
		texture = _MainTex,Squad/Parts/Utility/Lights/Assets/Lights_Attacheable_Lights_Diffuse_white
		texture = _BumpMap,Squad/Parts/Utility/Lights/Assets/Lights_Attacheable_Lights_Normal
		texture = _Emissive,Squad/Parts/Utility/Lights/Assets/Lights_Attacheable_Lights_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// groundLight1 groundLight2 // These are cargo parts

@PART[groundLight1,groundLight2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Stand
		currentTextureSet = Stock_Default_Worklights_Stand
		textureSet = Stock_Default_Worklights_Stand
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Lamp
		currentTextureSet = Stock_Default_Worklights_Lamp
		textureSet = Stock_Default_Worklights_Lamp
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Worklights_Stand
	@MATERIAL
	{
		// mesh = Lamp
		mesh = light_07
		mesh = light_12
		mesh = light_12.002
		
		texture = _MainTex,Squad/Parts/Utility/Lights/Assets/Lights_Worklights_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/Lights/Assets/Lights_Worklights_Normal
		texture = _Emissive,Squad/Parts/Utility/Lights/Assets/Lights_Worklights_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_Worklights_Lamp
	@MATERIAL
	{
		mesh = Lamp
		// mesh = light_07
		// mesh = light_12
		// mesh = light_12.002
		
		texture = _MainTex,Squad/Parts/Utility/Lights/Assets/Lights_Worklights_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/Lights/Assets/Lights_Worklights_Normal
		texture = _Emissive,Squad/Parts/Utility/Lights/Assets/Lights_Worklights_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// spotLight3 

@PART[spotLight3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_B_spotLight3
		textureSet = Stock_Default_B_spotLight3
		textureSet = Stock_Default_W_spotLight3
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_B_spotLight3
	@MATERIAL
	{
		mesh = Lamp
		mesh = light_08
		
		texture = _MainTex,Squad/Parts/Utility/Lights/Assets/Spotlight_Attacheable_Lights_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/Lights/Assets/Spotlight_Attacheable_Lights_Normal
		texture = _Emissive,Squad/Parts/Utility/Lights/Assets/Spotlight_Attacheable_Lights_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_W_spotLight3
	@MATERIAL
	{
		mesh = Lamp
		mesh = light_08
		
		texture = _MainTex,Squad/Parts/Utility/Lights/Assets/Spotlight_Attacheable_Lights_Diffuse_white
		texture = _BumpMap,Squad/Parts/Utility/Lights/Assets/Spotlight_Attacheable_Lights_Normal
		texture = _Emissive,Squad/Parts/Utility/Lights/Assets/Spotlight_Attacheable_Lights_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// stripLight1

@PART[stripLight1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_B_stripLight1
		textureSet = Stock_Default_B_stripLight1
		textureSet = Stock_Default_W_stripLight1
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_B_stripLight1
	@MATERIAL
	{
		mesh = light_02
		
		texture = _MainTex,Squad/Parts/Utility/Lights/Assets/Lights_Rectangle_Light_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/Lights/Assets/Lights_Rectangle_Light_Normal
		texture = _Emissive,Squad/Parts/Utility/Lights/Assets/Lights_Rectangle_Light_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_W_stripLight1
	@MATERIAL
	{
		mesh = light_02
		
		texture = _MainTex,Squad/Parts/Utility/Lights/Assets/Lights_Rectangle_Light_Diffuse_white
		texture = _BumpMap,Squad/Parts/Utility/Lights/Assets/Lights_Rectangle_Light_Normal
		texture = _Emissive,Squad/Parts/Utility/Lights/Assets/Lights_Rectangle_Light_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/linearVernorRCS

// @PART[linearRcs,RCSBlock]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
// {
	// MODULE
	// {
		// name = KSPTextureSwitch
		// sectionName = Appearance
		// currentTextureSet = Stock_Default_linearRcs
		// textureSet = Stock_Default_linearRcs
	// }
	// %MODULE[SSTURecolorGUI]
	// {
		// %name = SSTURecolorGUI
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_linearRcs
	// @MATERIAL
	// {
		// mesh = updatedport2
		// mesh = block
		
		// texture = _MainTex,Squad/Parts/Utility/linearRCS/rcs
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	// }
// }

@PART[linearRcs,vernierEngine]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_linearRcs
		textureSet = Stock_Default_linearRcs
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_linearRcs
	@MATERIAL
	{
		mesh = tank
		// mesh = thruster
		
		texture = _MainTex,Squad/Parts/Utility/linearVernorRCS/Assets/linear_vernor_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Utility/linearVernorRCS/Assets/linear_vernor_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Bumped Specular (Mapped)
		// mesh = tank
		mesh = thruster
		
		texture = _MainTex,Squad/Parts/Utility/linearVernorRCS/Assets/linear_vernor_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Utility/linearVernorRCS/Assets/linear_vernor_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Utility/linearVernorRCS/Assets/linear_vernor_specular
	}
}

// Squad/Parts/Utility/mk2CargoBay

@PART[mk2CargoBayL,mk2CargoBayS]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk2CargoBay
		textureSet = Stock_Default_mk2CargoBay
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk2CargoBay
	@MATERIAL
	{
		mesh = BayDoorL1
		mesh = BayDoorL2
		mesh = BayLarge
		mesh = BayDoorS1
		mesh = BayDoorS2
		mesh = BaySmall
		
		texture = _MainTex,Squad/Parts/Utility/mk2CargoBay/mk2CargoBay
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/mk2CrewCabin

@PART[mk2CrewCabin]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_mk2CrewCabin
		textureSet = Stock_Default_mk2CrewCabin
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_mk2CrewCabin
	@MATERIAL
	{
		mesh = Mk2CrewCabin
		
		texture = _MainTex,Squad/Parts/Utility/mk2CrewCabin/mk2CrewCabin
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Utility/mk2CrewCabin/mk2CrewCabin_LUM
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/mk2DockingPort/
// Base Door1 Door2 // Port

@PART[mk2DockingPort]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Body
		currentTextureSet = Stock_Default_mk2DockingPort_Body
		textureSet = Stock_Default_mk2DockingPort_Body
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Port
		currentTextureSet = Stock_Default_mk2DockingPort_Port
		textureSet = Stock_Default_mk2DockingPort_Port
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_mk2DockingPort_Body
	@MATERIAL
	{
		mesh = Base
		mesh = Door1
		mesh = Door2
		
		mesh = Port
		
		texture = _MainTex,Squad/Parts/Utility/mk2DockingPort/Mk2Clampotron_Mk2Clampotron_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/mk2DockingPort/Mk2Clampotron_Mk2Clampotron_Normal
		texture = _Emissive,Squad/Parts/Utility/mk2DockingPort/Mk2Clampotron_Mk2Clampotron_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_mk2DockingPort_Port
	@MATERIAL
	{
		mesh = Port.001
		
		texture = _MainTex,Squad/Parts/Utility/mk2DockingPort/Mk2Clampotron_Caps_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/mk2DockingPort/Mk2Clampotron_Caps_Normal
		texture = _Emissive,Squad/Parts/Utility/mk2DockingPort/Mk2Clampotron_Caps_Emmisive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/mk3CargoBay

@PART[mk3CargoBayL,mk3CargoBayM,mk3CargoRamp,mk3CargoBayS]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Mk3_Cargo
		textureSet = Stock_Default_Mk3_Cargo
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Mk3_Cargo
	@MATERIAL
	{
		mesh = Base
		mesh = BayDoor1
		mesh = BayDoor2
		mesh = Extension
		mesh = P
		mesh = R
		mesh = Ramp
		mesh = Top
		
		texture = _MainTex,Squad/Parts/Utility/mk3CargoBay/Mk3CargoBay
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/parachuteMk1
// base + cap // canopy

@PART[parachuteSingle]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shroud
		currentTextureSet = Stock_Default_parachuteSingle_Shroud
		textureSet = Stock_Default_parachuteSingle_Shroud
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Chute
		currentTextureSet = Stock_Transparent_parachuteSingle_Chute
		textureSet = Stock_Transparent_parachuteSingle_Chute
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_parachuteSingle_Shroud
	@MATERIAL
	{
		mesh = base
		mesh = cap
		
		texture = _MainTex,Squad/Parts/Utility/parachuteMk1/model000
		texture = _BumpMap,Squad/Parts/Utility/parachuteMk1/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Transparent]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Transparent_parachuteSingle_Chute
	@MATERIAL
	{
		mesh = canopy
		
		texture = _MainTex,Squad/Parts/Utility/parachuteMk1/model000
		texture = _BumpMap,Squad/Parts/Utility/parachuteMk1/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/parachuteMk2-R
// base + cap // canopy

@PART[parachuteRadial]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shroud
		currentTextureSet = Stock_Default_parachuteRadial_Shroud
		textureSet = Stock_Default_parachuteRadial_Shroud
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Chute
		currentTextureSet = Stock_Transparent_parachuteRadial_Chute
		textureSet = Stock_Transparent_parachuteRadial_Chute
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_parachuteRadial_Shroud
	@MATERIAL
	{
		mesh = base
		mesh = cap
		
		texture = _MainTex,Squad/Parts/Utility/parachuteMk2-R/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Transparent]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Transparent_parachuteRadial_Chute
	@MATERIAL
	{
		mesh = canopy
		
		texture = _MainTex,Squad/Parts/Utility/parachuteMk2-R/model001
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/parachuteMk12-R

@PART[radialDrogue]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shroud
		currentTextureSet = Stock_Default_radialDrogue_Shroud
		textureSet = Stock_Default_radialDrogue_Shroud
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Chute
		currentTextureSet = Stock_Transparent_radialDrogue_Chute
		textureSet = Stock_Transparent_radialDrogue_Chute
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_radialDrogue_Shroud
	@MATERIAL
	{
		mesh = base
		mesh = cap
		
		texture = _MainTex,Squad/Parts/Utility/parachuteMk12-R/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Transparent]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Transparent_radialDrogue_Chute
	@MATERIAL
	{
		mesh = canopy
		
		texture = _MainTex,Squad/Parts/Utility/parachuteMk12-R/model001
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/parachuteMk16-XL

@PART[parachuteLarge]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shroud
		currentTextureSet = Stock_Default_parachuteLarge_Shroud
		textureSet = Stock_Default_parachuteLarge_Shroud
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Chute
		currentTextureSet = Stock_Transparent_parachuteLarge_Chute
		textureSet = Stock_Transparent_parachuteLarge_Chute
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_parachuteLarge_Shroud
	@MATERIAL
	{
		mesh = base
		mesh = cap
		
		texture = _MainTex,Squad/Parts/Utility/parachuteMk16-XL/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Transparent]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Transparent_parachuteLarge_Chute
	@MATERIAL
	{
		mesh = canopy
		
		texture = _MainTex,Squad/Parts/Utility/parachuteMk16-XL/model001
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/parachuteMk25

@PART[parachuteDrogue]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shroud
		currentTextureSet = Stock_Default_parachuteDrogue_Shroud
		textureSet = Stock_Default_parachuteDrogue_Shroud
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Chute
		currentTextureSet = Stock_Transparent_parachuteDrogue_Chute
		textureSet = Stock_Transparent_parachuteDrogue_Chute
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_parachuteDrogue_Shroud
	@MATERIAL
	{
		mesh = base
		mesh = cap
		
		texture = _MainTex,Squad/Parts/Utility/parachuteMk25/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Transparent]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Transparent_parachuteDrogue_Chute
	@MATERIAL
	{
		mesh = canopy
		
		texture = _MainTex,Squad/Parts/Utility/parachuteMk25/model001
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/radialAttachmentPoint

@PART[stackPoint1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Face
		currentTextureSet = Stock_Default_stackPoint1_Face
		textureSet = Stock_Default_stackPoint1_Face
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_stackPoint1_Mount
		textureSet = Stock_Default_stackPoint1_Mount
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_stackPoint1_Face
	@MATERIAL
	{
		mesh = stackpointbig
		
		texture = _MainTex,Squad/Parts/Utility/radialAttachmentPoint/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_stackPoint1_Mount
	@MATERIAL
	{
		mesh = cap
		
		texture = _MainTex,Squad/Parts/Utility/radialAttachmentPoint/model001
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/rcsBlockRV-105_v2

// @PART[RCSBlock_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
// {
	// MODULE
	// {
		// name = KSPTextureSwitch
		// sectionName = Appearance
		// currentTextureSet = Stock_Default_RCSBlock_v2
		// textureSet = Stock_Default_RCSBlock_v2
	// }
	// %MODULE[SSTURecolorGUI]
	// {
		// %name = SSTURecolorGUI
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_RCSBlock_v2
	// @MATERIAL
	// {
		// mesh = block
		
		// texture = _MainTex,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsBlock_diffuse
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsThruster_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	// }
	// MATERIAL
	// {
		// shader = KSP/Bumped Specular (Mapped)
		
		// mesh = RCSthruster
		
		// texture = _MainTex,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsBlock_diffuse
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsThruster_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		// texture = _SpecMap,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsThruster_specular
	// }
// }

@PART[RCSBlock_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Angled]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_RCSBlock_v2_Angled
			}
		}
		@VARIANT[5Horn]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_RCSBlock_v2_Orthogonal
			}
		}
		@VARIANT[4Horn]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_RCSBlock_v2_Orthogonal
			}
		}
		@VARIANT[3Horn]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_RCSBlock_v2_Orthogonal
			}
		}
		@VARIANT[2Horn]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_RCSBlock_v2_Orthogonal
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RCSBlock_v2_Angled
	// @title = Stock Default RCS Block Angled
	@MATERIAL
	{
		mesh = Angled
		
		texture = _MainTex,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsBlock_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsThruster_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Bumped Specular (Mapped)
		
		mesh = RCSthruster
		
		texture = _MainTex,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsBlock_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsThruster_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsThruster_specular
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RCSBlock_v2_Orthogonal
	// @title = Stock Default RCS Block Orthogonal
	@MATERIAL
	{
		mesh = Orthogonal
		
		texture = _MainTex,Squad/Parts/Utility/rcsBlockRV-105_v2/RCS_Block_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/rcsBlockRV-105_v2/RCS_Block_Normal
		texture = _Emissive,Squad/Parts/Utility/rcsBlockRV-105_v2/RCS_Block_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Bumped Specular (Mapped)
		
		mesh = RCSthruster
		
		texture = _MainTex,Squad/Parts/Utility/rcsBlockRV-105_v2/RCS_Block_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/rcsBlockRV-105_v2/RCS_Block_Normal
		texture = _Emissive,Squad/Parts/Utility/rcsBlockRV-105_v2/RCS_Block_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Utility/rcsBlockRV-105_v2/RCS_Block_Specular
	}
}

@PART[RCSblock_01_small]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Angled]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_RCSblock_01_small_Angled
			}
		}
		@VARIANT[5Horn]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_RCSblock_01_small_Orthogonal
			}
		}
		@VARIANT[4Horn]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_RCSblock_01_small_Orthogonal
			}
		}
		@VARIANT[3Horn]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_RCSblock_01_small_Orthogonal
			}
		}
		@VARIANT[2Horn]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_RCSblock_01_small_Orthogonal
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RCSblock_01_small_Angled
	// @title = Stock Default RCS Block Angled
	@MATERIAL
	{
		mesh = Angled
		
		texture = _MainTex,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsBlock_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsThruster_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode create
		shader = KSP/Bumped Specular (Mapped)
		
		mesh = RCSthruster
		
		texture = _MainTex,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsBlock_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsThruster_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Utility/rcsBlockRV-105_v2/rcsThruster_specular
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RCSblock_01_small_Orthogonal
	// @title = Stock Default RCS Block Orthogonal
	@MATERIAL
	{
		mesh = Orthogonal
		
		texture = _MainTex,Squad/Parts/Utility/rcsBlockRV-105_v2/RCS_Block_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/rcsBlockRV-105_v2/RCS_Block_Normal
		texture = _Emissive,Squad/Parts/Utility/rcsBlockRV-105_v2/RCS_Block_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Bumped Specular (Mapped)
		
		mesh = RCSthruster
		
		texture = _MainTex,Squad/Parts/Utility/rcsBlockRV-105_v2/RCS_Block_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/rcsBlockRV-105_v2/RCS_Block_Normal
		texture = _Emissive,Squad/Parts/Utility/rcsBlockRV-105_v2/RCS_Block_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _SpecMap,Squad/Parts/Utility/rcsBlockRV-105_v2/RCS_Block_Specular
	}
}

// Squad/Parts/Utility/rcsSmallLinear/

// @PART[RCSLinearSmall]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
// {
	// MODULE
	// {
		// name = KSPTextureSwitch
		// sectionName = Appearance
		// currentTextureSet = Stock_Default_RCSLinearSmall
		// textureSet = Stock_Default_RCSLinearSmall
	// }
	// %MODULE[SSTURecolorGUI]
	// {
		// %name = SSTURecolorGUI
	// }
// }
// +KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
// {
	// @name = Stock_Default_RCSLinearSmall
	// @MATERIAL
	// {
		// mesh = Block
		
		// texture = _MainTex,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Diffuse
		// texture = _BumpMap,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Normal
		// texture = _Emissive,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Emissive
	// }
	// MATERIAL
	// {
		// mode = create
		// shader = KSP/Bumped Specular (Mapped)
		
		// mesh = thruster
		
		// texture = _MainTex,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Diffuse
		// texture = _BumpMap,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Normal
		// texture = _Emissive,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Emissive
		// texture = _SpecMap,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Specular
	// }
// }

@PART[RCSLinearSmall]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Bare]
		{
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_RCSLinearSmall_Engine
				// textureSet1 = Stock_Default_RCSLinearSmall_Shroud
			}
		}
		@VARIANT[Shroud]
		{
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_RCSLinearSmall_Engine
				textureSet1 = Stock_Default_RCSLinearSmall_Shroud
			}
		}
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Engine
		moduleIndex = 0
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Shroud
		moduleIndex = 1
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RCSLinearSmall_Engine
	@MATERIAL
	{
		mesh = Block
		
		texture = _MainTex,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Normal
		texture = _Emissive,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Emissive
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Bumped Specular (Mapped)
		
		mesh = thruster
		
		texture = _MainTex,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Normal
		texture = _Emissive,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Emissive
		texture = _SpecMap,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Specular
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RCSLinearSmall_Shroud
	@MATERIAL
	{
		mesh = Tank
		
		texture = _MainTex,Squad/Parts/Utility/rcsSmallLinear/Assets/RCS_Linear_Base_Diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}

// Squad/Parts/Utility/RelayAntennas

@PART[RelayAntenna5,RelayAntenna50,RelayAntenna100]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_RelayAntennas
		textureSet = Stock_Default_RelayAntennas
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_RelayAntennas
	@MATERIAL
	{
		mesh = Dish01
		mesh = Dish02
		mesh = Dish03
		
		texture = _MainTex,Squad/Parts/Utility/RelayAntennas/DishAntenna
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/rockomaxAdapters/

@PART[largeAdapter,largeAdapter2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_largeAdapter2_BW
		textureSet = Stock_Default_largeAdapter2_BW
		textureSet = Stock_Default_largeAdapter2_O
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_largeAdapter2_BW
	@MATERIAL
	{
		mesh = Brand_Adapter
		mesh = Brand_Adapter_2
		
		texture = _MainTex,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_diffuse
		texture = _BumpMap,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_largeAdapter2_O
	@MATERIAL
	{
		mesh = Brand_Adapter
		mesh = Brand_Adapter_2
		
		texture = _MainTex,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_diffuse_O
		texture = _BumpMap,Squad/Parts/Utility/rockomaxAdapters/Assets/Rockomax_Adapters_normal_O
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/ServiceBay

// @PART[ServiceBay_125,ServiceBay_250]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
// {
	// MODULE
	// {
		// name = KSPTextureSwitch
		// sectionName = Appearance
		// currentTextureSet = Stock_Default_ServiceBays
		// textureSet = Stock_Default_ServiceBays
	// }
	// %MODULE[SSTURecolorGUI]
	// {
		// %name = SSTURecolorGUI
	// }
// }

@PART[ServiceBay_125,ServiceBay_250]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = ModulePartVariants
		baseVariant = Squad
		VARIANT
		{
			name = Squad
			displayName = Squad
			// themeName = Squad
			primaryColor = #4c4f47
			EXTRA_INFO
			{
				textureSet = Stock_Default_ServiceBays
			}
		}
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
		%stockFairing = true
	}
}

+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_ServiceBays
	@MATERIAL
	{
		mesh = Cube_001
		mesh = Cube_002
		mesh = Cube_003
		mesh = Cube_2
		mesh = Cylinder_001
		mesh = Cylinder_002
		mesh = Cylinder_003
		mesh = Cylinder_004
		mesh = Cylinder_005
		mesh = Cylinder_006
		mesh = Cylinder_007
		mesh = Cylinder_008
		mesh = Cylinder_009
		mesh = Cylinder_010
		mesh = Cylinder_011
		mesh = Cylinder_012
		mesh = Door01
		mesh = Door2
		mesh = Door3
		mesh = Door4
		mesh = Floor
		mesh = Hinge1
		mesh = Hinge2
		mesh = Hinge3_001
		mesh = Hinge4
		mesh = RCSMount1
		mesh = RCSMount2
		mesh = SideMount01
		mesh = SideMount02
		mesh = Top
		mesh = Top_001
		mesh = TrussMount
		
		texture = _MainTex,Squad/Parts/Utility/ServiceBay/ServiceBay
		texture = _BumpMap,Squad/Parts/Utility/ServiceBay/ServiceBay_N_NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/ServiceBay_v2

@PART[ServiceBay_125_v2,ServiceBay_250_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_ServiceBays_v2
		textureSet = Stock_Default_ServiceBays_v2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_ServiceBays_v2
	@MATERIAL
	{
		mesh = ServiceBayNew_125
		mesh = ServiceBayNew_250
		mesh = Door_FL_01
		mesh = Door_FL_02
		mesh = Door_FR_01
		mesh = Door_FR_02
		mesh = Door_RL_01
		mesh = Door_RL_02
		mesh = Door_RR_01
		mesh = Door_RR_02
		
		texture = _MainTex,Squad/Parts/Utility/ServiceBay_v2/Assets/ServiceBay_v2
		texture = _BumpMap,Squad/Parts/Utility/ServiceBay_v2/Assets/ServiceBay_bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/smallClaw

@PART[smallClaw]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Shroud
		currentTextureSet = Stock_Default_smallClaw
		textureSet = Stock_Default_smallClaw
		textureSet = Stock_Default_smallClaw_Dark
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = The Claw!
		currentTextureSet = Stock_Default_smallClaw_The Claw!
		textureSet = Stock_Default_smallClaw_The Claw!
		textureSet = Stock_Default_smallClaw_The Claw!_Dark
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_smallClaw
	@MATERIAL
	{
		mesh = CapLiner
		
		mesh = FoldingCap1
		mesh = FoldingCap2
		mesh = FoldingCap3
		mesh = FoldingCap4
		mesh = FoldingCap5
		mesh = FoldingCap6
		mesh = FoldingCap7
		mesh = FoldingCap8
		mesh = FoldingCap9
		mesh = FoldingCap10
		mesh = FoldingCap11
		mesh = FoldingCap12
		mesh = FoldingCap13
		mesh = FoldingCap14
		mesh = FoldingCap15
		mesh = FoldingCap16
		mesh = FoldingCap17
		mesh = FoldingCap18
		mesh = FoldingCap19
		// mesh = FoldingCap20
		
		mesh = GrappleBase
		
		mesh = OuterSleeveSmall
		
		mesh = Pillar1
		mesh = Pillar2
		mesh = Pillar3
		mesh = Pillar4
		mesh = Pillar5
		mesh = Pillar6
		mesh = Pillar7
		mesh = Pillar8
		mesh = Pillar9
		mesh = Pillar10
		mesh = Pillar11
		mesh = Pillar12
		mesh = Pillar13
		mesh = Pillar14
		mesh = Pillar15
		mesh = Pillar16
		
		mesh = polySurface1
		mesh = polySurface2
		
		mesh = Sleeve1
		mesh = Sleeve2
		mesh = Sleeve3
		mesh = Sleeve4
		
		texture = _MainTex,Squad/Parts/Utility/smallClaw/grabberSmallDiffuse
		texture = _BumpMap,Squad/Parts/Utility/smallClaw/grabberSmallNRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_smallClaw_The Claw!
	@MATERIAL
	{
		mesh = ArticulatedCap
		
		mesh = BaseSleeve1
		mesh = BaseSleeve2
		
		mesh = Clasp1
		mesh = Clasp2
		mesh = Clasp3
		
		mesh = InnerArm1
		mesh = InnerArm2
		mesh = InnerArm3
		
		mesh = MiddleArm1
		mesh = MiddleArm2
		mesh = MiddleArm3
		
		mesh = Mounting1
		mesh = Mounting2
		mesh = Mounting3
		mesh = Mounting4
		
		mesh = Piston1
		mesh = Piston2
		mesh = Piston3
		mesh = Piston4
		
		texture = _MainTex,Squad/Parts/Utility/smallClaw/grabberSmallDiffuse
		texture = _BumpMap,Squad/Parts/Utility/smallClaw/grabberSmallNRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_smallClaw_Dark
	@MATERIAL
	{
		mesh = CapLiner
		
		mesh = FoldingCap1
		mesh = FoldingCap2
		mesh = FoldingCap3
		mesh = FoldingCap4
		mesh = FoldingCap5
		mesh = FoldingCap6
		mesh = FoldingCap7
		mesh = FoldingCap8
		mesh = FoldingCap9
		mesh = FoldingCap10
		mesh = FoldingCap11
		mesh = FoldingCap12
		mesh = FoldingCap13
		mesh = FoldingCap14
		mesh = FoldingCap15
		mesh = FoldingCap16
		mesh = FoldingCap17
		mesh = FoldingCap18
		mesh = FoldingCap19
		// mesh = FoldingCap20
		
		mesh = GrappleBase
		
		mesh = OuterSleeveSmall
		
		mesh = Pillar1
		mesh = Pillar2
		mesh = Pillar3
		mesh = Pillar4
		mesh = Pillar5
		mesh = Pillar6
		mesh = Pillar7
		mesh = Pillar8
		mesh = Pillar9
		mesh = Pillar10
		mesh = Pillar11
		mesh = Pillar12
		mesh = Pillar13
		mesh = Pillar14
		mesh = Pillar15
		mesh = Pillar16
		
		mesh = polySurface1
		mesh = polySurface2
		
		mesh = Sleeve1
		mesh = Sleeve2
		mesh = Sleeve3
		mesh = Sleeve4
		
		texture = _MainTex,Squad/Parts/Utility/smallClaw/grabberSmallDiffuseDark
		texture = _BumpMap,Squad/Parts/Utility/smallClaw/grabberSmallNRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_smallClaw_The Claw!_Dark
	@MATERIAL
	{
		mesh = ArticulatedCap
		
		mesh = BaseSleeve1
		mesh = BaseSleeve2
		
		mesh = Clasp1
		mesh = Clasp2
		mesh = Clasp3
		
		mesh = InnerArm1
		mesh = InnerArm2
		mesh = InnerArm3
		
		mesh = MiddleArm1
		mesh = MiddleArm2
		mesh = MiddleArm3
		
		mesh = Mounting1
		mesh = Mounting2
		mesh = Mounting3
		mesh = Mounting4
		
		mesh = Piston1
		mesh = Piston2
		mesh = Piston3
		mesh = Piston4
		
		texture = _MainTex,Squad/Parts/Utility/smallClaw/grabberSmallDiffuseDark
		texture = _BumpMap,Squad/Parts/Utility/smallClaw/grabberSmallNRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Utility/spotLightMk1

@PART[spotLight1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_spotLight1
		textureSet = Stock_Default_spotLight1
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_spotLight1
	@MATERIAL
	{
		mesh = light1
		
		texture = _MainTex,Squad/Parts/Utility/spotLightMk1/light1
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Utility/spotLightMk1/light1_em
	}
}

// Squad/Parts/Utility/spotLightMk1_v2

@PART[spotLight1_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_spotLight1_v2_B
		textureSet = Stock_Default_spotLight1_v2_B
		textureSet = Stock_Default_spotLight1_v2_W
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_spotLight1_v2_B
	@MATERIAL
	{
		mesh = lightMesh
		mesh = spotLightMk1
		
		texture = _MainTex,Squad/Parts/Utility/spotLightMk1_v2/spotLightMk1_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/spotLightMk1_v2/spotLightMk1_Normal
		texture = _Emissive,Squad/Parts/Utility/spotLightMk1_v2/spotLightMk1_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_spotLight1_v2_W
	@MATERIAL
	{
		mesh = lightMesh
		mesh = spotLightMk1
		
		texture = _MainTex,Squad/Parts/Utility/spotLightMk1_v2/spotLightMk1_Diffuse_white
		texture = _BumpMap,Squad/Parts/Utility/spotLightMk1_v2/spotLightMk1_Normal
		texture = _Emissive,Squad/Parts/Utility/spotLightMk1_v2/spotLightMk1_Emissive
	}
}

// Squad/Parts/Utility/spotLightMk2

@PART[spotLight2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_spotLight2
		textureSet = Stock_Default_spotLight2
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_spotLight2
	@MATERIAL
	{
		mesh = light2
		
		texture = _MainTex,Squad/Parts/Utility/spotLightMk2/light2
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,Squad/Parts/Utility/spotLightMk2/light2_em
	}
}

// Squad/Parts/Utility/spotLightMk2_v2

@PART[spotLight2_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_spotLight2_v2_B
		textureSet = Stock_Default_spotLight2_v2_B
		textureSet = Stock_Default_spotLight2_v2_W
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_spotLight2_v2_B
	@MATERIAL
	{
		mesh = lightMesh
		mesh = spotLightMk2
		
		texture = _MainTex,Squad/Parts/Utility/spotLightMk2_v2/spotLightMk2_Diffuse
		texture = _BumpMap,Squad/Parts/Utility/spotLightMk2_v2/spotLightMk2_Normal
		texture = _Emissive,Squad/Parts/Utility/spotLightMk2_v2/spotLightMk2_Emissive
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_spotLight2_v2_W
	@MATERIAL
	{
		mesh = lightMesh
		mesh = spotLightMk2
		
		texture = _MainTex,Squad/Parts/Utility/spotLightMk2_v2/spotLightMk2_Diffuse_white
		texture = _BumpMap,Squad/Parts/Utility/spotLightMk2_v2/spotLightMk2_Normal
		texture = _Emissive,Squad/Parts/Utility/spotLightMk2_v2/spotLightMk2_Emissive
	}
}

// Squad/Parts/Utility/stackCouplers

@PART[stackBiCoupler_v2,stackQuadCoupler,stackTriCoupler_v2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited&!Restock]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Dark]
		{
			!TEXTURE,*{}
			EXTRA_INFO
			{
				textureSet = Stock_Default_stackCouplers_Dark
			}
		}
		@VARIANT[White]
		{
			!TEXTURE,*{}
			EXTRA_INFO
			{
				textureSet = Stock_Default_stackCouplers_White
			}
		}
		@VARIANT[Orange]
		{
			!TEXTURE,*{}
			EXTRA_INFO
			{
				textureSet = Stock_Default_stackCouplers_Orange
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_stackCouplers_Dark
	@title = Stock Default Stack Couplers Dark
	@MATERIAL
	{
		mesh = bicoupler
		mesh = obj_base
		mesh = tricoupler
		
		texture = _MainTex,Squad/Parts/Utility/stackCouplers/Assets/stackCouplersDiffuse_Dark
		texture = _BumpMap,Squad/Parts/Utility/stackCouplers/Assets/stackCouplers_NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_stackCouplers_White
	@title = Stock Default Stack Couplers White
	@MATERIAL
	{
		mesh = bicoupler
		mesh = obj_base
		mesh = tricoupler
		
		texture = _MainTex,Squad/Parts/Utility/stackCouplers/Assets/stackCouplersDiffuse
		texture = _BumpMap,Squad/Parts/Utility/stackCouplers/Assets/stackCouplers_NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited&!Restock]
{
	@name = Stock_Default_stackCouplers_Orange
	@title = Stock Default Stack Couplers Orange
	@MATERIAL
	{
		mesh = bicoupler
		mesh = obj_base
		mesh = tricoupler
		
		texture = _MainTex,Squad/Parts/Utility/stackCouplers/Assets/stackCouplersDiffuse_Orange
		texture = _BumpMap,Squad/Parts/Utility/stackCouplers/Assets/stackCouplers_Orange_NRM
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Wheel
// Squad/Parts/Wheel/LandingGear/

@PART[GearFixed]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Body
		currentTextureSet = Stock_Default_GearFixed
		textureSet = Stock_Default_GearFixed
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Wheel
		currentTextureSet = Stock_Default_GearFixed_Wheel
		textureSet = Stock_Default_GearFixed_Wheel
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_GearFixed
	@MATERIAL
	{
		mesh = Base
		
		texture = _MainTex,Squad/Parts/Wheel/LandingGear/LandingGear
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_GearFixed_Wheel
	@MATERIAL
	{
		mesh = WheelPivot
		
		texture = _MainTex,Squad/Parts/Wheel/LandingGear/LandingGear
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

@PART[GearFree]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Body
		currentTextureSet = Stock_Default_GearFree
		textureSet = Stock_Default_GearFree
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Wheel
		currentTextureSet = Stock_Default_GearFree_Wheel
		textureSet = Stock_Default_GearFree_Wheel
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_GearFree
	@MATERIAL
	{
		mesh = Base
		mesh = mesh
		
		texture = _MainTex,Squad/Parts/Wheel/LandingGear/LandingGear
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_GearFree_Wheel
	@MATERIAL
	{
		mesh = wheel
		
		texture = _MainTex,Squad/Parts/Wheel/LandingGear/LandingGear
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

@PART[GearLarge,GearMedium,GearSmall,SmallGearBay]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Body
		currentTextureSet = Stock_Default_Landing_Gear_Body
		textureSet = Stock_Default_Landing_Gear_Body
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Struts
		currentTextureSet = Stock_Default_Landing_Gear_Struts
		textureSet = Stock_Default_Landing_Gear_Struts
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Wheel
		currentTextureSet = Stock_Default_Landing_Gear_Wheel
		textureSet = Stock_Default_Landing_Gear_Wheel
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Landing_Gear_Body
	@MATERIAL
	{
		mesh = Base
		mesh = BayDoor1
		mesh = BayDoor2

		// excludeMesh = WheelRetract
		// excludeMesh = Damper
		// excludeMesh = link
		// excludeMesh = PistonExtend
		// excludeMesh = Mesh
		// excludeMesh = rod
		// excludeMesh = prong
		// excludeMesh = WheelBogey

		// excludeMesh = wheel
		// excludeMesh = wheel 7
		// excludeMesh = wheel 8
		// excludeMesh = w1
		// excludeMesh = w2
		// excludeMesh = w3
		// excludeMesh = w4
		// excludeMesh = w5
		// excludeMesh = w6
		
		// excludeMesh = Lamp
		// excludeMesh = BrakeIndicator
		
		// excludeMesh = Flare
		// excludeMesh = flare
		
		texture = _MainTex,Squad/Parts/Wheel/LandingGear/LandingGear
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Landing_Gear_Struts
	@MATERIAL
	{
		mesh = WheelRetract
		mesh = Damper
		mesh = link
		mesh = PistonExtend
		mesh = Mesh
		mesh = rod
		mesh = prong
		mesh = WheelBogey

		// excludeMesh = Base
		// excludeMesh = BayDoor1
		// excludeMesh = BayDoor2

		// excludeMesh = wheel
		// excludeMesh = wheel 7
		// excludeMesh = wheel 8
		// excludeMesh = w1
		// excludeMesh = w2
		// excludeMesh = w3
		// excludeMesh = w4
		// excludeMesh = w5
		// excludeMesh = w6
		
		mesh = Lamp
		mesh = BrakeIndicator
		
		// excludeMesh = Flare
		// excludeMesh = flare
		
		texture = _MainTex,Squad/Parts/Wheel/LandingGear/LandingGear
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Stock_Recolour/Wheel/Landing Gear/131_LandingGear_Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	// MATERIAL
	// {
		// KSP/Emissive/Bumped Specular
		
		// mesh = Lamp
		// mesh = BrakeIndicator
		
		// texture = _MainTex,Squad/Parts/Wheel/LandingGear/LandingGear
		// texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		// texture = _Emissive,Squad/Parts/Wheel/LandingGear/LandingGear_Emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	// }
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Landing_Gear_Wheel
	@MATERIAL
	{
		// excludeMesh = WheelRetract
		// excludeMesh = Damper
		// excludeMesh = link
		// excludeMesh = PistonExtend
		// excludeMesh = Mesh
		// excludeMesh = rod
		// excludeMesh = prong
		// excludeMesh = WheelBogey

		// excludeMesh = Base
		// excludeMesh = BayDoor1
		// excludeMesh = BayDoor2

		mesh = wheel
		mesh = wheel 7
		mesh = wheel 8
		mesh = w1
		mesh = w2
		mesh = w3
		mesh = w4
		mesh = w5
		mesh = w6
		
		// excludeMesh = Lamp
		// excludeMesh = BrakeIndicator
		
		// excludeMesh = Flare
		// excludeMesh = flare
		
		texture = _MainTex,Squad/Parts/Wheel/LandingGear/LandingGear
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Wheel/roverWheelM1

@PART[roverWheel1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_roverWheel1
		textureSet = Stock_Default_roverWheel1
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Wheel
		currentTextureSet = Stock_Default_roverWheel1_Wheel
		textureSet = Stock_Default_roverWheel1_Wheel     
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_roverWheel1
	@MATERIAL
	{
		mesh = suspensionBase
		mesh = susp1-2
		mesh = susp2-2
		mesh = susp3-2
		mesh = susp2-1
		mesh = susp1-1
		mesh = susp3-1

		// excludeMesh = wheel
		// excludeMesh = mesh
		// excludeMesh = bracket
		
		texture = _MainTex,Squad/Parts/Wheel/roverWheelM1/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_roverWheel1_Wheel
	@MATERIAL
	{
		mesh = wheel
		mesh = mesh
		mesh = bracket

		// excludeMesh = suspensionBase
		// excludeMesh = susp1-2
		// excludeMesh = susp2-2
		// excludeMesh = susp3-2
		// excludeMesh = susp2-1
		// excludeMesh = susp1-1
		// excludeMesh = susp3-1
		
		texture = _MainTex,Squad/Parts/Wheel/roverWheelM1/model000
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Wheel/roverWheelS2

@PART[roverWheel2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_roverWheel2
		textureSet = Stock_Default_roverWheel2
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Wheel
		currentTextureSet = Stock_Default_roverWheel2_Wheel
		textureSet = Stock_Default_roverWheel2_Wheel
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_roverWheel2
	@MATERIAL
	{
		mesh = base
		mesh = susp2
		mesh = vertical
		mesh = susp1
		mesh = bracket

		// excludeMesh = wheel
		
		texture = _MainTex,Squad/Parts/Wheel/roverWheelS2/model000
		texture = _BumpMap,Squad/Parts/Wheel/roverWheelS2/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_roverWheel2_Wheel
	@MATERIAL
	{
		mesh = wheel

		// excludeMesh = base
		// excludeMesh = susp2
		// excludeMesh = vertical
		// excludeMesh = susp1
		// excludeMesh = bracket
		
		texture = _MainTex,Squad/Parts/Wheel/roverWheelS2/model000
		texture = _BumpMap,Squad/Parts/Wheel/roverWheelS2/model001
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Wheel/roverWheelTR-2L

@PART[wheelMed]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_wheelMed
		textureSet = Stock_Default_wheelMed
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Wheel
		currentTextureSet = Stock_Default_wheelMed_Wheel
		textureSet = Stock_Default_wheelMed_Wheel
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_wheelMed
	@MATERIAL
	{
		mesh = MotorMesh
		mesh = obj_bracket
		mesh = obj_mount

		// excludeMesh = obj_wheel
		// excludeMesh = obj_susp
		
		texture = _MainTex,Squad/Parts/Wheel/roverWheelTR-2L/ksp_r_medWheel_diff
		texture = _BumpMap,Squad/Parts/Wheel/roverWheelTR-2L/ksp_r_medWheel_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_wheelMed_Wheel
	@MATERIAL
	{
		mesh = obj_wheel

		// excludeMesh = MotorMesh
		// excludeMesh = obj_bracket
		// excludeMesh = obj_susp
		// excludeMesh = obj_mount
		
		texture = _MainTex,Squad/Parts/Wheel/roverWheelTR-2L/ksp_r_medWheel_wheel_diff
		texture = _BumpMap,Squad/Parts/Wheel/roverWheelTR-2L/ksp_r_medWheel_wheel_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// Squad/Parts/Wheel/roverWheelXL3

@PART[roverWheel3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Mount
		currentTextureSet = Stock_Default_roverWheel3
		textureSet = Stock_Default_roverWheel3
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Bracket
		currentTextureSet = Stock_Default_roverWheel3_Bracket
		textureSet = Stock_Default_roverWheel3_Bracket
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Wheel
		currentTextureSet = Stock_Default_roverWheel3_Wheel
		textureSet = Stock_Default_roverWheel3_Wheel
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_roverWheel3
	@MATERIAL
	{
		mesh = susp1-2
		mesh = susp2-2
		mesh = base

		// excludeMesh = bracket
		// excludeMesh = susp1-1
		// excludeMesh = susp2-1
		// excludeMesh = wheel
		
		texture = _MainTex,Squad/Parts/Wheel/roverWheelXL3/mount
		texture = _BumpMap,Squad/Parts/Wheel/roverWheelXL3/mount_n
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_roverWheel3_Bracket
	@MATERIAL
	{
		mesh = bracket
		mesh = susp1-1
		mesh = susp2-1

		// excludeMesh = wheel
		// excludeMesh = susp1-2
		// excludeMesh = susp2-2
		// excludeMesh = base
		
		texture = _MainTex,Squad/Parts/Wheel/roverWheelXL3/mount
		texture = _BumpMap,Squad/Parts/Wheel/roverWheelXL3/mount_n
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_roverWheel3_Wheel
	@MATERIAL
	{
		mesh = wheel

		// excludeMesh = bracket
		// excludeMesh = susp1-1
		// excludeMesh = susp2-1
		// excludeMesh = susp1-2
		// excludeMesh = susp2-2
		// excludeMesh = base
		
		texture = _MainTex,Squad/Parts/Wheel/roverWheelXL3/wheel
		texture = _BumpMap,Squad/Parts/Wheel/roverWheelXL3/wheel_n
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}