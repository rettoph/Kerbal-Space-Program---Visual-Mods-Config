// OnlyLightMatters: File to enable the metallic It's All Shiny effect for SERENITY

//
//    █████╗ ███████╗██████╗  ██████╗
//   ██╔══██╗██╔════╝██╔══██╗██╔═══██╗
//   ███████║█████╗  ██████╔╝██║   ██║
//   ██╔══██║██╔══╝  ██╔══██╗██║   ██║
//   ██║  ██║███████╗██║  ██║╚██████╔╝
//   ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝ ╚═════╝

// Nosecones
// SquadExpansion/Serenity/Parts/Aero/

@PART[noseconeTiny,noseconeVS]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_bgnosecones
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_bgnosecones
	@MATERIAL
	{
		mesh = PropCap_01
		mesh = PropCap_02
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/copterBlades_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}
}



// FanShrouds
// SquadExpansion/Serenity/Parts/Aero/
@PART[FanShroud_01,FanShroud_02,FanShroud_03]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
		    // Grey with Stripes
			name = FanShrouds_Metallic_GS
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0
			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_FanShrouds_GS
			}
		}
		VARIANT
		{
			// Just Grey
			name = FanShrouds_Metallic_G
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0
			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_FanShrouds_G
			}
		}
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_FanShrouds_GS
	@MATERIAL
	{
		mesh = Shroud
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Aero/Assets/shroudsDiffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_FanShrouds_G
	@MATERIAL
	{
		mesh = Shroud
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Aero/Assets/shroudsDiffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


//         ███████╗ ██████╗██╗███████╗███╗   ██╗ ██████╗███████╗
//         ██╔════╝██╔════╝██║██╔════╝████╗  ██║██╔════╝██╔════╝
//         ███████╗██║     ██║█████╗  ██╔██╗ ██║██║     █████╗
//         ╚════██║██║     ██║██╔══╝  ██║╚██╗██║██║     ██╔══╝
//         ███████║╚██████╗██║███████╗██║ ╚████║╚██████╗███████╗
//         ╚══════╝ ╚═════╝╚═╝╚══════╝╚═╝  ╚═══╝ ╚═════╝╚══════╝


// Robotic Arms - Science
// CRSY Light Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S1]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_RobotArmScanner_S1_common
	}
	@MODULE[KSPTextureSwitch],1
	{
		textureSet = Alternate_Stock_Metallic_RobotArmScanner_S1_Arm
	}	
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_RobotArmScanner_S1_common
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm_001
		mesh = UpperArm_001
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount_001
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}
}	
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_RobotArmScanner_S1_Arm
	@MATERIAL
	{
		mesh = Mount
		mesh = BaseRotator_001
		mesh = LowerArm
		mesh = UpperArm
		mesh = InstrumentHousing
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/SmallArm_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/SmallArm_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}	
}


// Robotic Arms - Science
// SPRT Medium Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S2]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_RobotArmScanner_S2_common
	}
	@MODULE[KSPTextureSwitch],1
	{
		textureSet = Alternate_Stock_Metallic_RobotArmScanner_S2_Arm
	}	
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_RobotArmScanner_S2_common
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm		
		mesh = UpperArm
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount_001
		mesh = LAOCIS_Mount
		mesh = LAOCIS
		mesh = Mount_001
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}
}	
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_RobotArmScanner_S2_Arm
	@MATERIAL
	{
		mesh = Mount
		mesh = BaseRotator_001
		mesh = LowerArm_001		
		mesh = UpperArm_001
		mesh = InstrumentHousing
		mesh = InstrumentHousing_001
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm_2_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm_2_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}	
}


// Robotic Arms - Science
// OPPO Large Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S3]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_RobotArmScanner_S3_common
	}
	@MODULE[KSPTextureSwitch],1
	{
		textureSet = Alternate_Stock_Metallic_RobotArmScanner_S3_Arm
	}	
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_RobotArmScanner_S3_common
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm
		mesh = UpperArm
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = DrillBase
		mesh = DrillPipe
		mesh = DrillHead
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount
		mesh = LAOCIS_Mount
		mesh = LAOCIS
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}
}	
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_RobotArmScanner_S3_Arm
	@MATERIAL
	{
		mesh = BaseRotator_001
		mesh = LowerArm_001
		mesh = UpperArm_001
		mesh = InstrumentHousing
		mesh = InstrumentHousing_001
		mesh = Mount_001
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm3_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm3_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}	
}

// Deployable Instruments
// A few words here to explain the configuration
// The It's all Shiny effect is intended to provide a low effort metallic effect to a part.
// IMHO the user has just to say "I want this part to be metallic" and click the right button. Once.
// What was difficult here, is that there are multiple meshes/textures associations. The standard way to
// provide a "It's all Shiny" effect is to push meshes and textures in a single MATERIAL block and TURD/TU
// do the rest.
// Here we have to have multiple MATERIAL blocks but we do not want to multiply the
///+KSP_TEXTURE_SET[Alternate_Stock_Metallic] declarations.
// It appears that only the first MATERIAL block is "converted" to "It's all Shiny".
// So I had to configure manually the other blocks

// Reminder : we cannot multiply the textureSet statements in the KSPTextureSwitch MODULE because
// if you do so, you will add as many variants and this is something we obviously don't want.
// We dont want either to multiply the KSPTextureSwitch entries, that would force the user to select
// each area to be recoloured.

// By the way, as the deployable science instruments are not craft parts, there is little interest
// to make a recolouration configuration for them. Only a "It's all Shiny" effect will be provided


@PART[DeployedCentralStation]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_DeployedCentralStation
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_DeployedCentralStation


	@MATERIAL
	{
		@shader = Legacy Shaders/Transparent/VertexLit	

		mesh = Screen
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Wavelenght2
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}	
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}

		mesh = CentralStation_Fin
		mesh = ANT_1
		mesh = ANT_2
		mesh = ANT_3
		mesh = ANT_4a
		mesh = ANT_4b
		mesh = ANT_4c
		mesh = ANT_4d
		mesh = Console
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/centralStation_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/centralStation_emissive
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}
		
		mesh = Button_001
		mesh = Button_002
		mesh = Button_003
		mesh = Button_004
		mesh = Button_005
		mesh = Button_006
		mesh = Button_007
		mesh = Button_008
		mesh = Button_009
		mesh = Console_002
		mesh = Switch1
		mesh = Switch2
		mesh = Switch3
		mesh = Switch4
		mesh = Switch5
		mesh = CentralStation_001		

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}		
}	


// Go-ob ED Monitor
@PART[DeployedGoExOb]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_DeployedGoExOb
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_DeployedGoExOb

	@MATERIAL
	{
		@shader = KSP/Bumped Specular (Mapped)

		mesh = GooGrid
		mesh = CameraLens
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/goex_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _SpecMap,SquadExpansion/Serenity/Parts/DeployedScience/Assets/goex_specMapped 		
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}	
	MATERIAL
	{
		mode = create
		shader = KSP/Alpha/Translucent Additive
		
		mesh = Screen
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Waveleght3
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}	
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}

		mesh = LowerArm
		mesh = UpperArm
		mesh = Bracket
		mesh = Camera
		mesh = Base
		mesh = CamLid
		mesh = Display
		mesh = Goo
		mesh = GooDoor
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/goex_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}
		
		mesh = Button_001
		mesh = Button_002
		mesh = Button_003
		mesh = Button_004
		mesh = Button_005
		mesh = Button_006
		mesh = Button_007
		mesh = Button_008
		mesh = Display_001
		mesh = Switch
		mesh = Switch1
		mesh = Switch2
		mesh = Base_001		

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}		
}	

// Ionographer PD-22
@PART[DeployedIONExp]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_DeployedIONExp
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_DeployedIONExp

	@MATERIAL
	{
		@shader = KSP/Specular
		mesh = baseModel
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/IonExperiment_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}
	
		mesh = switch1
		mesh = switch2
		mesh = switch3
		mesh = GenericParts		

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}		
}	


// Mini-NUK-PD Radioisotope Thermoelectric Generator
@PART[DeployedRTG]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_DeployedRTG
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_DeployedRTG

	@MATERIAL
	{
		@shader = KSP/Specular
		mesh = Lid
		mesh = Pallet

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/RTGCask_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}
	
		mesh = GenericParts
		mesh = Switch1
		mesh = Switch2

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}		
}	

// Communotron Ground HG-48
@PART[DeployedSatDish]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_DeployedSatDish
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_DeployedSatDish


	@MATERIAL
	{
		@shader = KSP/Alpha/Translucent Additive

		mesh = Screen (1)

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Grid
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}
		
		mesh = Base
		mesh = MountBase
		mesh = PanelMount
		mesh = DishCore
		mesh = Antenna
		mesh = LeafBot
		mesh = LeafLeft
		mesh = LeafRight
		mesh = LeafTop

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/satDish_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}	
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}

		mesh = marcoPantalla
		mesh = polySurface116
		mesh = Switch1
		mesh = Switch2
		mesh = Switch3
		mesh = Switch4
		mesh = BaseGenericParts
		mesh = squareButton1
		mesh = squareButton2
		mesh = squareButton3
		mesh = squareButton4
		mesh = squareButton5
		mesh = squareButton6
		mesh = squareButton7
		mesh = squareButton8
		mesh = squareButton9

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}		
}	

// Grand Slam Passive Seismometer
@PART[DeployedSeismicSensor]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_DeployedSeismicSensor
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_DeployedSeismicSensor

	@MATERIAL
	{
		@shader = KSP/Alpha/Translucent Additive
		mesh = Screen (1)

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Grid
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Alpha/Translucent Additive

		mesh = Screen

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/wavelenght5
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}	
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}

		
		mesh = foil_001
		mesh = SensorBase
		mesh = Probe1
		mesh = Probe2

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/seismicSensor_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}


		mesh = foil

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/seismicSensor_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/DeployedScience/Assets/seismicSensor_nrm
		texture = _SpecMap,SquadExpansion/Serenity/Parts/DeployedScience/Assets/seismicSensor_specularMapped 		
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}

		
		mesh = Switch1
		mesh = Switch2
		mesh = Switch3
		mesh = Switch4
		mesh = GenericParts

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}		
}	

// OX-Stat-PD Photovoltaic Panel
@PART[DeployedSolarPanel]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_DeployedSolarPanel
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_DeployedSolarPanel

	@MATERIAL
	{
		mode = create
		@shader = KSP/Alpha/Translucent Additive

		mesh = Screen (1)

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Grid
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Alpha/Translucent Additive
		
		mesh = Screen

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/SolarGraph
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}	
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}

		mesh = Base
		mesh = PanelMount
		mesh = PanelRoot
		mesh = PanelBottom
		mesh = PanelBottomLeft
		mesh = PanelBottomRight
		mesh = PanelLeft
		mesh = PanelLeftLeft
		mesh = PanelRight
		mesh = PanelRightRight
		mesh = PanelTop
		mesh = PanelTopLeft
		mesh = PanelTopRight

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/solarPanel_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}
		
		mesh = Switch1
		mesh = Switch2
		mesh = Switch3
		mesh = Switch4
		mesh = genericProps
		mesh = genericProps_001
		mesh = genericProps_002

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}		
}	


// PD-3 Weather Analyzer
@PART[DeployedWeatherStn]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_DeployedWeatherStn
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_DeployedWeatherStn

	@MATERIAL
	{
		@shader = KSP/Alpha/Translucent Additive
		
		mesh = Screen_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Screen3
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Alpha/Translucent Additive	

		mesh = Screen_002

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/ScreenReadout
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}	
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}
		
		mesh = Base
		mesh = Console
		mesh = ProbeBase
		mesh = ProbeTip
		mesh = SensorMast
		mesh = Sensor
		mesh = SpinMast1
		mesh = SpinMast2
		mesh = SpinMast3
		mesh = SpinMast4
		mesh = Spinner
		mesh = Vane

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Weather_Station_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Weather_Station_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
	MATERIAL
	{
		mode = create
		shader = TU/Metallic
		
		PROPERTY
		{
			name = _Color
			color = 1.2,1.2,1.2
		}
		PROPERTY
		{
			name = _Metal
			float = 0.8
		}
		PROPERTY
		{
			name = _Smoothness
			float = 0.6
		}

		mesh = Base_001
		mesh = button_001
		mesh = button_002
		mesh = button_003
		mesh = button_004
		mesh = button_005
		mesh = button_006
		mesh = button_007
		mesh = button_008
		mesh = button_009
		mesh = button_010
		mesh = Console_001
		mesh = Foot1
		mesh = Foot1_001
		mesh = Foot2
		mesh = Foot3
		mesh = Switch1
		mesh = Switch2
		mesh = Switch3
		mesh = Switch4

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}		
}	




//       ███████╗████████╗██████╗ ██╗   ██╗ ██████╗████████╗██╗   ██╗██████╗  █████╗ ██╗
//       ██╔════╝╚══██╔══╝██╔══██╗██║   ██║██╔════╝╚══██╔══╝██║   ██║██╔══██╗██╔══██╗██║
//       ███████╗   ██║   ██████╔╝██║   ██║██║        ██║   ██║   ██║██████╔╝███████║██║
//       ╚════██║   ██║   ██╔══██╗██║   ██║██║        ██║   ██║   ██║██╔══██╗██╔══██║██║
//       ███████║   ██║   ██║  ██║╚██████╔╝╚██████╗   ██║   ╚██████╔╝██║  ██║██║  ██║███████╗
//       ╚══════╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝  ╚═════╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝



// Grip pads - Structural
// GP-156 Grip Pad - SquadExpansion/Serenity/Parts/Structural/gripPads
@PART[lGripPad,mGripPad,sGripPad]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = GripPad_Metallic_round
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			GAMEOBJECTS
			{
				round = false
				square = true
			}
			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_GripPad
			}
		}
		VARIANT
		{
			name = GripPad_Metallic_square
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			GAMEOBJECTS
			{
				round = true
				square = false
			}
			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_GripPad
			}
		}
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_GripPad
	@MATERIAL
	{
		mesh = round
		mesh = square

		texture = _MainTex,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


// Grip Strips - Structural
// GP-156 Grip Pad - SquadExpansion/Serenity/Parts/Structural/gripPads
@PART[lGripStrip,sGripStrip]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_GripStrip
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_GripStrip
	@MATERIAL
	{
		mesh = gripStrip

		texture = _MainTex,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}
}




//      ██████╗  ██████╗ ██████╗  ██████╗ ████████╗██╗ ██████╗███████╗
//      ██╔══██╗██╔═══██╗██╔══██╗██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
//      ██████╔╝██║   ██║██████╔╝██║   ██║   ██║   ██║██║     ███████╗
//      ██╔══██╗██║   ██║██╔══██╗██║   ██║   ██║   ██║██║     ╚════██║
//      ██║  ██║╚██████╔╝██████╔╝╚██████╔╝   ██║   ██║╚██████╗███████║
//      ╚═╝  ╚═╝ ╚═════╝ ╚═════╝  ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝


// KAL-1000 Controller
// controller1000 - SquadExpansion/Serenity/Parts/Robotics/Controllers
@PART[controller1000]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_KAL-1000
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_KAL-1000
	@MATERIAL
	{
		mesh = controller
		mesh = indicator

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Controllers/roboController_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/Robotics/Controllers/roboController_emissive
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}
}



@PART[piston_01,piston_02,piston_03,piston_04]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = Piston_Metallic_GrayWithStripes
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			GAMEOBJECTS
			{
				PistonStripes = true
			}
			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_Piston_GreyWithStripes
			}
		}
		VARIANT
		{
			name = Piston_Metallic_Gray
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			GAMEOBJECTS
			{
				PistonStripes = false
			}
			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_Piston_Grey
			}
		}
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Piston_GreyWithStripes
	@MATERIAL
	{
		mesh = PistonBase
		mesh = PistonStripes
		mesh = Mid0
		mesh = Mid1
		mesh = PistonTop
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Piston_Grey
	@MATERIAL
	{
		mesh = PistonBase
		mesh = PistonStripes
		mesh = Mid0
		mesh = Mid1
		mesh = PistonTop
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

@PART[hinge_01_s]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = Hinge01s_Metallic_GrayWithStripes
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_Hinge01s_GreyWithStripes
			}
		}
		VARIANT
		{
			name = Hinge01s_Metallic_Gray
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_Hinge01s_Grey
			}
		}
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Hinge01s_GreyWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-00_Color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Hinge01s_Grey
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


@PART[hinge_01]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = Hinge01_Metallic_GrayWithStripes
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_Hinge01_GreyWithStripes
			}
		}
		VARIANT
		{
			name = Hinge01_Metallic_Gray
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_Hinge01_Grey
			}
		}
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Hinge01_GreyWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_Color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Hinge01_Grey
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


@PART[hinge_03]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = Hinge03_Metallic_GrayWithStripes
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_Hinge03_GreyWithStripes
			}
		}
		VARIANT
		{
			name = Hinge03_Metallic_Gray
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_Hinge03_Grey
			}
		}
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Hinge03_GreyWithStripes
	@MATERIAL
	{
		mesh = BasePlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = TopPlate
		mesh = Bar2
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Hinge03_Grey
	@MATERIAL
	{
		mesh = BasePlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = TopPlate
		mesh = Bar2
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

@PART[hinge_03_s]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = Hinge03s_Metallic_GrayWithStripes
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet0 = Alternate_Stock_Metallic_Hinge03s_GreyWithStripes_TopBase
				textureSet1 = Alternate_Stock_Metallic_Hinge03s_GreyWithStripes_Other
			}
		}
		VARIANT
		{
			name = Hinge03s_Metallic_Gray
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_Hinge03s_Grey
			}
		}
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Hinge03s_GreyWithStripes_TopBase
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03-s_diffuse_Color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Hinge03s_GreyWithStripes_Other
	@MATERIAL
	{
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}	
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Hinge03s_Grey
	@MATERIAL
	{
		mesh = BasePlate
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


// G-32W Hinge
@PART[hinge_04]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = Hinge04_Metallic_GrayWithStripes
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_Hinge03s_GreyWithStripes
			}
		}
		VARIANT
		{
			name = Hinge04_Metallic_Gray
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_Hinge04_Grey
			}
		}
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Hinge04_GreyWithStripes
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Hinge04_Grey
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


// SERVOS
@PART[rotoServo_00,rotoServo_02,rotoServo_03,rotoServo_04]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = rotoServos_Metallic_GrayWithStripes
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_rotoServos_GreyWithStripes
			}
		}
		VARIANT
		{
			name = rotoServos_Metallic_Gray
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_rotoServos_Grey
			}
		}
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_rotoServos_GreyWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_rotoServos_Grey
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


// ROTORS
@PART[rotor_01,rotor_01s]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = rotors01_Metallic_GrayWithStripes
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet0 = Alternate_Stock_Metallic_Rotors01_GreyWithStripes_Rotor
				textureSet1 = Alternate_Stock_Metallic_Rotors01_Base001
			}
		}
		VARIANT
		{
			name = rotors01_Metallic_Gray
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet0 = Alternate_Stock_Metallic_Rotors01_Grey_Rotor
				textureSet1 = Alternate_Stock_Metallic_Rotors01_Base001
			}
		}
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Rotors01_GreyWithStripes_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Rotors01_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Rotors01_Grey_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}	


@PART[rotor_02]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = rotor02_Metallic_GrayWithStripes
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet0 = Alternate_Stock_Metallic_Rotor02_GreyWithStripes_Rotor
				textureSet1 = Alternate_Stock_Metallic_Rotor02_Base001
			}
		}
		VARIANT
		{
			name = rotor02_Metallic_Gray
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet0 = Alternate_Stock_Metallic_Rotor02_Grey_Rotor
				textureSet1 = Alternate_Stock_Metallic_Rotor02_Base001
			}
		}
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Rotor02_GreyWithStripes_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}	
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Rotor02_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


@PART[rotor_02s]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = rotor02s_Metallic_GrayWithStripes
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet0 = Alternate_Stock_Metallic_Rotor02s_GreyWithStripes_Rotor
				textureSet1 = Alternate_Stock_Metallic_Rotor02s_Base001
			}
		}
		VARIANT
		{
			name = rotor02s_Metallic_Gray
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet0 = Alternate_Stock_Metallic_Rotor02s_Grey_Rotor
				textureSet1 = Alternate_Stock_Metallic_Rotor02s_Base001
			}
		}
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Rotor02s_GreyWithStripes_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}	
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Rotor02s_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Rotor02s_Grey_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}	


@PART[rotor_03,rotor_03s]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = rotors03_Metallic_GrayWithStripes
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_Rotors03_GreyWithStripes
			}
		}
		VARIANT
		{
			name = rotors03_Metallic_Gray
			displayName = It's all shiny!
			primaryColor = #d0d0d0
			secondaryColor = #d0d0d0

			EXTRA_INFO
			{
				textureSet = Alternate_Stock_Metallic_Rotors03_Grey
			}
		}
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Rotors03_GreyWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Rotors03_Grey
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}



// R121 Turboshaft Engine
@PART[RotorEngine_02]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_RotorEngine_02
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_RotorEngine_02
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_02_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}
}


// R7000 Turboshaft Engine
@PART[RotorEngine_03]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_RotorEngine_03
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_RotorEngine_03
	@MATERIAL
	{
		mesh = RotorEngine_03
		mesh = Rotor
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_03_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}
}


//          ██████╗ ██████╗  ██████╗ ██████╗ ███████╗██╗     ██╗     ███████╗██████╗ ███████╗
//          ██╔══██╗██╔══██╗██╔═══██╗██╔══██╗██╔════╝██║     ██║     ██╔════╝██╔══██╗██╔════╝
//          ██████╔╝██████╔╝██║   ██║██████╔╝█████╗  ██║     ██║     █████╗  ██████╔╝███████╗
//          ██╔═══╝ ██╔══██╗██║   ██║██╔═══╝ ██╔══╝  ██║     ██║     ██╔══╝  ██╔══██╗╚════██║
//          ██║     ██║  ██║╚██████╔╝██║     ███████╗███████╗███████╗███████╗██║  ██║███████║
//          ╚═╝     ╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚══════╝╚══════╝╚══════╝╚══════╝╚═╝  ╚═╝╚══════╝



// FAN BLADES
@PART[largeFanBlade,mediumFanBlade,smallFanBlade]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_FanBlades
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_FanBlades
	@MATERIAL
	{
		mesh = mount
		mesh = bladeFlipped
		mesh = blade
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/fan_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}
}


@PART[largeHeliBlade,mediumHeliBlade,smallHeliBlade]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_HeliBlades
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_HeliBlades
	@MATERIAL
	{
		mesh = mount
		mesh = bladeFlipped
		mesh = blade
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/copterBlades_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}
}


@PART[largePropeller,mediumPropeller,smallPropeller]:FOR[003_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = Alternate_Stock_Metallic_Propellers
	}
}
+KSP_TEXTURE_SET[Alternate_Stock_Metallic]:NEEDS[TexturesUnlimited]
{
	@name = Alternate_Stock_Metallic_Propellers
	@MATERIAL
	{
		mesh = mount
		mesh = bladeFlipped
		mesh = blade
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/blade_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ		
	}
}