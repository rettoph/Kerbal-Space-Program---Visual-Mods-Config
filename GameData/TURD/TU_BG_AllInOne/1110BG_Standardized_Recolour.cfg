// OnlyLightMatters: File to enable the Recolouration to SERENITY parts

//
//    █████╗ ███████╗██████╗  ██████╗
//   ██╔══██╗██╔════╝██╔══██╗██╔═══██╗
//   ███████║█████╗  ██████╔╝██║   ██║
//   ██╔══██║██╔══╝  ██╔══██╗██║   ██║
//   ██║  ██║███████╗██║  ██║╚██████╔╝
//   ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝ ╚═════╝

// Nosecones
// SquadExpansion/Serenity/Parts/Aero/

@PART[noseconeTiny,noseconeVS]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = OLM_Recolour_bgnosecones_BG
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_bgnosecones_BG
	@MATERIAL
	{
		mesh = PropCap_01
		mesh = PropCap_02

		// only red mask is used for the external texture, green for the internal
		vector = _DiffuseNorm,0.68,0.27,0.46
		vector = _MetalNorm,0.84,0.67,0.93
		vector = _SmoothnessNorm,0.84,0.67,0.93

		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/copterBlades_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Propellers/OLM_copterBlades_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Propellers/OLM_copterBlades_paint
	}
}

// FanShrouds
// SquadExpansion/Serenity/Parts/Aero/

@PART[FanShroud_01]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{

	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
            name = FanShroud_01_Striped_Recolour_BG
  			primaryColor = #ff0000
			secondaryColor = #00ff00
			displayName = BG Recolour Striped

			EXTRA_INFO
			{
			    textureSet = OLM_Recolour_FanShrouds_Striped_BG
			}
		}
		VARIANT
		{
			name = FanShroud_01_Plain_Recolour_BG
			primaryColor = #ff0000
			displayName = BG Recolour Plain

			EXTRA_INFO
			{
				textureSet = OLM_Recolour_FanShrouds_Grey_BG
			}
		}
	}
}
@PART[FanShroud_02]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{

	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
            name = FanShroud_02_Striped_Recolour_BG
  			primaryColor = #ff0000
			secondaryColor = #00ff00
			displayName = BG Recolour Striped

			EXTRA_INFO
			{
			    textureSet = OLM_Recolour_FanShrouds_Striped_BG
			}
		}
		VARIANT
		{
			name = FanShroud_02_Plain_Recolour_BG
			primaryColor = #ff0000
			displayName = BG Recolour Plain

			EXTRA_INFO
			{
				textureSet = OLM_Recolour_FanShrouds_Grey_BG
			}
		}
	}
}
@PART[FanShroud_03]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{

	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
            name = FanShroud_03_Striped_Recolour_BG
  			primaryColor = #ff0000
			secondaryColor = #00ff00
			displayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes

			EXTRA_INFO
			{
			    textureSet = OLM_Recolour_FanShrouds_Striped_BG
			}
		}
		VARIANT
		{
			name = FanShroud_03_Plain_Recolour_BG
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			primaryColor = #ff0000

			EXTRA_INFO
			{
				textureSet = OLM_Recolour_FanShrouds_Grey_BG
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_FanShrouds_Striped_BG
	@MATERIAL
	{
		mesh = Shroud

		vector = _DiffuseNorm,0.53,0.64,0.74
		vector = _MetalNorm,0.87,0.61,0.43
		vector = _SmoothnessNorm,0.87,0.61,0.43
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Aero/Assets/shroudsDiffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Aero/OLM_BGshrouds-striped_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Aero/OLM_BGshrouds-striped_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_FanShrouds_Grey_BG
	@MATERIAL
	{
		mesh = Shroud

		vector = _DiffuseNorm,0.53,0.64,0.74
		vector = _MetalNorm,0.87,0.61,0.43
		vector = _SmoothnessNorm,0.87,0.61,0.43

		texture = _MainTex,SquadExpansion/Serenity/Parts/Aero/Assets/shroudsDiffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Aero/OLM_BGshrouds-plain_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Aero/OLM_BGshrouds-plain_paint
	}
}



//         ███████╗ ██████╗██╗███████╗███╗   ██╗ ██████╗███████╗
//         ██╔════╝██╔════╝██║██╔════╝████╗  ██║██╔════╝██╔════╝
//         ███████╗██║     ██║█████╗  ██╔██╗ ██║██║     █████╗
//         ╚════██║██║     ██║██╔══╝  ██║╚██╗██║██║     ██╔══╝
//         ███████║╚██████╗██║███████╗██║ ╚████║╚██████╗███████╗
//         ╚══════╝ ╚═════╝╚═╝╚══════╝╚═╝  ╚═══╝ ╚═════╝╚══════╝



// Robotic Arms - Science
// CRSY Light Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S1]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = OLM_Recolour_RobotArmScanner_S1_common_BG
	}
	@MODULE[KSPTextureSwitch],1
	{
		textureSet = OLM_Recolour_RobotArmScanner_S1_Arm_BG
	}	
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_RobotArmScanner_S1_common_BG
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm_001
		mesh = UpperArm_001
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount_001

		vector = _DiffuseNorm,0.71,0.71,0.42
		vector = _MetalNorm,0.92,0.89,0.63
		vector = _SmoothnessNorm,0.92,0.89,0.63

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_GenericParts_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_GenericParts_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_RobotArmScanner_S1_Arm_BG
	@MATERIAL
	{
		mesh = Mount
		mesh = BaseRotator_001
		mesh = LowerArm
		mesh = UpperArm
		mesh = InstrumentHousing

		vector = _DiffuseNorm,0.53,0.64,0.74
		vector = _MetalNorm,0.93,0.89,0.65
		vector = _SmoothnessNorm,0.93,0.89,0.65

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/SmallArm_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/SmallArm_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_SmallArm_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_SmallArm_paint
	}	
}


// Robotic Arms - Science
// SPRT Medium Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S2]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = OLM_Recolour_RobotArmScanner_S2_common_BG
	}
	@MODULE[KSPTextureSwitch],1
	{
		textureSet = OLM_Recolour_RobotArmScanner_S2_Arm_BG
	}	
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_RobotArmScanner_S2_common_BG
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm		
		mesh = UpperArm
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount_001
		mesh = LAOCIS_Mount
		mesh = LAOCIS
		mesh = Mount_001

		vector = _DiffuseNorm,0.71,0.71,0.42
		vector = _MetalNorm,0.92,0.89,0.63
		vector = _SmoothnessNorm,0.92,0.89,0.63

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_GenericParts_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_GenericParts_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_RobotArmScanner_S2_Arm_BG
	@MATERIAL
	{
		mesh = Mount
		mesh = BaseRotator_001
		mesh = LowerArm_001		
		mesh = UpperArm_001
		mesh = InstrumentHousing
		mesh = InstrumentHousing_001

		vector = _DiffuseNorm,0.71,0.16,0.52
		vector = _MetalNorm,0.09,0.16,0.28
		vector = _SmoothnessNorm,0.09,0.16,0.28
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm_2_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm_2_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_ROCArm_2_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_ROCArm_2_paint
	}	
}



// Robotic Arms - Science
// SPRT Large Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S3]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = OLM_Recolour_RobotArmScanner_S3_common_BG
	}
	@MODULE[KSPTextureSwitch],1
	{
		textureSet = OLM_Recolour_RobotArmScanner_S3_Arm_BG
	}	
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_RobotArmScanner_S3_common_BG
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm
		mesh = UpperArm
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = DrillBase
		mesh = DrillPipe
		mesh = DrillHead
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount
		mesh = LAOCIS_Mount
		mesh = LAOCIS

		vector = _DiffuseNorm,0.71,0.71,0.42
		vector = _MetalNorm,0.92,0.89,0.63
		vector = _SmoothnessNorm,0.92,0.89,0.63

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_GenericParts_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_GenericParts_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_RobotArmScanner_S3_Arm_BG
	@MATERIAL
	{
		mesh = BaseRotator_001
		mesh = LowerArm_001
		mesh = UpperArm_001
		mesh = InstrumentHousing
		mesh = Mount_001

		vector = _DiffuseNorm,0.68,0.18,0.45
		vector = _MetalNorm,0.96,0.65,0.69
		vector = _SmoothnessNorm,0.96,0.65,0.69

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm3_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm3_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_ROCArm_3_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Science/RobotArmScanner/OLM_ROCArm_3_paint
	}	
}


//       ███████╗████████╗██████╗ ██╗   ██╗ ██████╗████████╗██╗   ██╗██████╗  █████╗ ██╗
//       ██╔════╝╚══██╔══╝██╔══██╗██║   ██║██╔════╝╚══██╔══╝██║   ██║██╔══██╗██╔══██╗██║
//       ███████╗   ██║   ██████╔╝██║   ██║██║        ██║   ██║   ██║██████╔╝███████║██║
//       ╚════██║   ██║   ██╔══██╗██║   ██║██║        ██║   ██║   ██║██╔══██╗██╔══██║██║
//       ███████║   ██║   ██║  ██║╚██████╔╝╚██████╗   ██║   ╚██████╔╝██║  ██║██║  ██║███████╗
//       ╚══════╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝  ╚═════╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝


// Grip pads - Structural
// GP-156 Grip Pad - SquadExpansion/Serenity/Parts/Structural/gripPads
@PART[lGripPad,mGripPad,sGripPad]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = GripPad_Square_BG
			displayName = Square Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00

			GAMEOBJECTS
			{
				round = false
				square = true
			}

			EXTRA_INFO
			{
				textureSet = OLM_Recolour_GripPads_BG
			}
		}
		VARIANT
		{
			name = GripPad_Round_BG
			displayName = Round Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00

			GAMEOBJECTS
			{
				round = true
				square = false
			}

			EXTRA_INFO
			{
				textureSet = OLM_Recolour_GripPads_BG
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_GripPads_BG
	@MATERIAL
	{
		mesh = round
		mesh = square

		// Blue is not used
		vector = _DiffuseNorm,0.33,0.48,1
		vector = _MetalNorm,0.66,0.72,1
		vector = _SmoothnessNorm,0.66,0.72,1

		texture = _MainTex,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Structural/OLM_gripPads_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Structural/OLM_gripPads_paint
	}
}



// Grip Strips - Structural
// GP-156 Grip Pad - SquadExpansion/Serenity/Parts/Structural/gripPads
@PART[lGripStrip,sGripStrip]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = OLM_Recolour_GripStrip_BG
	}

}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_GripStrip_BG
	@MATERIAL
	{
		mesh = gripStrip

		// Blue is not used
		vector = _DiffuseNorm,0.33,0.48,1
		vector = _MetalNorm,0.66,0.72,1
		vector = _SmoothnessNorm,0.66,0.72,1

		texture = _MainTex,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Structural/OLM_gripPads_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Structural/OLM_gripPads_paint
	}
}



//      ██████╗  ██████╗ ██████╗  ██████╗ ████████╗██╗ ██████╗███████╗
//      ██╔══██╗██╔═══██╗██╔══██╗██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
//      ██████╔╝██║   ██║██████╔╝██║   ██║   ██║   ██║██║     ███████╗
//      ██╔══██╗██║   ██║██╔══██╗██║   ██║   ██║   ██║██║     ╚════██║
//      ██║  ██║╚██████╔╝██████╔╝╚██████╔╝   ██║   ██║╚██████╗███████║
//      ╚═╝  ╚═╝ ╚═════╝ ╚═════╝  ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝




// KAL-1000 Controller
// controller1000 - SquadExpansion/Serenity/Parts/Robotics/Controllers
@PART[controller1000]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = OLM_Recolour_KAL-1000_BG
	}

}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_KAL-1000_BG
	@MATERIAL
	{
		mesh = controller
		mesh = indicator

		vector = _DiffuseNorm,0.84,0.24,0.19
		vector = _MetalNorm,0.58,0.51,0.67
		vector = _SmoothnessNorm,0.58,0.51,0.67

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Controllers/roboController_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/Robotics/Controllers/roboController_emissive
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_roboController_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_roboController_paint
	}
}

// PISTONS
@PART[piston_01,piston_02,piston_03,piston_04]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = Piston_GrayWithStripes_BG
			primaryColor = #ff0000
			secondaryColor = #00ff00
			displayName = Gray With Stripes Recolour

			GAMEOBJECTS
			{
				PistonStripes = true
			}				
			EXTRA_INFO
			{
				textureSet = OLM_Recolour_Pistons_GrayWithStripes_BG
			}
		}
		VARIANT
		{
			name = Piston_Recolour_Gray_BG
			primaryColor = #ff0000
			secondaryColor = #00ff00
			displayName = Gray Recolour

			GAMEOBJECTS
			{
				PistonStripes = false
			}				
			EXTRA_INFO
			{
				textureSet = OLM_Recolour_Pistons_Gray_BG
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Pistons_GrayWithStripes_BG
	@MATERIAL
	{
		mesh = PistonBase
		mesh = PistonStripes
		mesh = Mid0
		mesh = Mid1
		mesh = PistonTop

		vector = _DiffuseNorm,0.54,0.24,0.50
		vector = _MetalNorm,0.82,0.83,0.51
		vector = _SmoothnessNorm,0.82,0.83,0.51

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_color_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_color_paint		
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Pistons_Gray_BG
	@MATERIAL
	{
		mesh = PistonBase
		mesh = PistonStripes
		mesh = Mid0
		mesh = Mid1
		mesh = PistonTop

		// Blue is not used
		vector = _DiffuseNorm,0.54,0.24,1
		vector = _MetalNorm,0.82,0.83,1
		vector = _SmoothnessNorm,0.82,0.83,1

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_plain_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_plain_paint		
	}
}


// HINGE Small G-00 Hinge
@PART[hinge_01_s]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = hinge_01_s_GrayWithStripes_BG
			primaryColor = #ff0000
			secondaryColor = #00ff00
			displayName = Gray With Stripes Recolour

			EXTRA_INFO
			{
				textureSet = OLM_Recolour_Hinge01s_GrayWithStripes_BG
			}
		}
		VARIANT
		{
			name = hinge_01_s_Gray_BG
			primaryColor = #ff0000
			secondaryColor = #00ff00
			displayName = Gray Recolour

			EXTRA_INFO
			{
				textureSet = OLM_Recolour_Hinge01s_Gray_BG
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Hinge01s_GrayWithStripes_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Top

		vector = _DiffuseNorm,0.54,0.24,0.47
		vector = _MetalNorm,0.55,0.90,0.51
		vector = _SmoothnessNorm,0.55,0.90,0.51

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-00_Color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Hinge_G-00_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Hinge_G-00_Color_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Hinge01s_Gray_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Top

		// Blue is not used
		vector = _DiffuseNorm,0.54,0.24,1
		vector = _MetalNorm,0.55,0.90,1
		vector = _SmoothnessNorm,0.55,0.90,1
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Hinge_G-00_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Hinge_G-00_plain_paint	
	}
}


// HINGE Small G-00 Hinge
@PART[hinge_01]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = hinge_01_GrayWithStripes_BG
			displayName = Gray With Stripes Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00
			
			EXTRA_INFO
			{
				textureSet = OLM_Recolour_Hinge01_GrayWithStripes_BG
			}
		}
		VARIANT
		{
			name = hinge_01_Gray_BG
			primaryColor = #ff0000
			secondaryColor = #00ff00
			displayName = Gray Recolour

			EXTRA_INFO
			{
				textureSet = OLM_Recolour_Hinge01_Gray_BG
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Hinge01_GrayWithStripes_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Top

		vector = _DiffuseNorm,0.54,0.24,0.60
		vector = _MetalNorm,0.55,0.90,0.51
		vector = _SmoothnessNorm,0.55,0.90,0.51
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_Color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Hinge_G-11_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Hinge_G-11_Color_paint			
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Hinge01_Gray_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Top

		// Blue is not used
		vector = _DiffuseNorm,0.54,0.24,1
		vector = _MetalNorm,0.55,0.90,1
		vector = _SmoothnessNorm,0.55,0.90,1

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Hinge_G-11_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Hinge_G-11_plain_paint			
	}
}



// G-12L Alligator Hinge
@PART[hinge_03]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = hinge_03_GrayWithStripes_BG
			displayName = Gray with Stripes Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00
			
			EXTRA_INFO
			{
				textureSet = OLM_Recolour_Hinge03_GrayWithStripes_BG
			}
		}
		VARIANT
		{
			name = hinge_03_Gray_BG
			displayName = Gray Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00

			EXTRA_INFO
			{
				textureSet = OLM_Recolour_Hinge03_Gray_BG
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Hinge03_GrayWithStripes_BG
	@MATERIAL
	{
		mesh = BasePlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = TopPlate
		mesh = Bar2

		vector = _DiffuseNorm,0.54,0.24,0.48
		vector = _MetalNorm,0.81,0.50,0.81
		vector = _SmoothnessNorm,0.81,0.50,0.81
				
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_hinges-03_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_hinges-03_color_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Hinge03_Gray_BG
	@MATERIAL
	{
		mesh = BasePlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = TopPlate
		mesh = Bar2

		// Blue is not used
		vector = _DiffuseNorm,0.54,0.24,1
		vector = _MetalNorm,0.81,0.50,1
		vector = _SmoothnessNorm,0.81,0.50,1
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_hinges-03_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_hinges-03_plain_paint
	}
}


// G-01L Alligator Hinge
@PART[hinge_03_s]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = hinge_03_s_GrayWithStripes_BG
			displayName = Gray With Stripes Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00
			
			EXTRA_INFO
			{
				textureSet0 = OLM_Recolour_Hinge03s_GrayWithStripes_TopBase_BG
				textureSet1 = OLM_Recolour_Hinge03s_GrayWithStripes_Other_BG
			}
		}
		VARIANT
		{
			name = hinge_03_s_Gray_BG
			displayName = Gray Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00

			EXTRA_INFO
			{
				textureSet = OLM_Recolour_Hinge03s_Gray_BG
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Hinge03s_GrayWithStripes_TopBase_BG
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate

		vector = _DiffuseNorm,0.54,0.24,0.48
		vector = _MetalNorm,0.81,0.50,0.81
		vector = _SmoothnessNorm,0.81,0.50,0.81

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03-s_diffuse_Color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_hinges-03-s_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_hinges-03-s_color_paint		
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Hinge03s_GrayWithStripes_Other_BG
	@MATERIAL
	{
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		vector = _DiffuseNorm,0.54,0.24,0.48
		vector = _MetalNorm,0.81,0.50,0.81
		vector = _SmoothnessNorm,0.81,0.50,0.81

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_hinges-03_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_hinges-03_color_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Hinge03s_Gray_BG
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		// Blue is not used
		vector = _DiffuseNorm,0.54,0.24,1
		vector = _MetalNorm,0.81,0.50,1
		vector = _SmoothnessNorm,0.81,0.50,1

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_hinges-03_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_hinges-03_plain_paint
	}
}



// G-32W Hinge
@PART[hinge_04]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = hinge_04_GrayWithStripes_BG
			displayName = Gray With Stripes Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00
			
			EXTRA_INFO
			{
				textureSet = OLM_Recolour_Hinge04_GrayWithStripes_BG
			}
		}
		VARIANT
		{
			name = hinge_04_Gray_BG
			displayName = Gray Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00

			EXTRA_INFO
			{
				textureSet = OLM_Recolour_Hinge04_Gray_BG
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Hinge04_GrayWithStripes_BG
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		vector = _DiffuseNorm,0.54,0.24,0.48
		vector = _MetalNorm,0.81,0.50,0.81
		vector = _SmoothnessNorm,0.81,0.50,0.81
				
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_hinges-03_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_hinges-03_color_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Hinge04_Gray_BG
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		// Blue is not used
		vector = _DiffuseNorm,0.54,0.24,1
		vector = _MetalNorm,0.81,0.50,1
		vector = _SmoothnessNorm,0.81,0.50,1
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_hinges-03_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_hinges-03_plain_paint
	}
}



// Servos
@PART[rotoServo_00,rotoServo_02,rotoServo_03,rotoServo_04]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = rotoServo_GrayWithStripes_BG
			displayName = Gray with Stripes Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00
			
			EXTRA_INFO
			{
				textureSet = OLM_Recolour_rotoServos_GrayWithStripes_BG
			}
		}
		VARIANT
		{
			name = rotoServo_Gray_BG
			displayName = Gray
			primaryColor = #ff0000
			secondaryColor = #00ff00

			EXTRA_INFO
			{
				textureSet = OLM_Recolour_rotoServos_Gray_BG
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_rotoServos_GrayWithStripes_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		vector = _DiffuseNorm,0.18,0.24,0.5
		vector = _MetalNorm,0.53,0.95,0.95
		vector = _SmoothnessNorm,0.53,0.95,0.95

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_rotoServos_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_rotoServos_color_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_rotoServos_Gray_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		// Blue is not used
		vector = _DiffuseNorm,0.18,0.24,1
		vector = _MetalNorm,0.53,0.95,1
		vector = _SmoothnessNorm,0.53,0.95,1

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_rotoServos_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_rotoServos_plain_paint
	}
}




// ROTORS
@PART[rotor_01,rotor_01s]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = rotor_01_GrayWithStripes_BG
			displayName = Gray with Stripes Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00
			
			EXTRA_INFO
			{
				textureSet0 = OLM_Recolour_Rotors01_GrayWithStripes_Rotor_BG
				textureSet1 = OLM_Recolour_Rotors01_Base001_BG
			}
		}
		VARIANT
		{
			name = rotor_01_Gray_BG
			displayName = Gray Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00

			EXTRA_INFO
			{
				textureSet0 = OLM_Recolour_Rotors01_Gray_Rotor_BG
				textureSet1 = OLM_Recolour_Rotors01_Base001_BG
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Rotors01_GrayWithStripes_Rotor_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		vector = _DiffuseNorm,0.54,0.24,0.50
		vector = _MetalNorm,0.82,0.83,0.51
		vector = _SmoothnessNorm,0.82,0.83,0.51

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_color_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_color_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Rotors01_Base001_BG
	@MATERIAL
	{
		mesh = Base_001

		vector = _DiffuseNorm,0.54,0.24,0.50
		vector = _MetalNorm,0.82,0.83,0.51
		vector = _SmoothnessNorm,0.82,0.83,0.51

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_color_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_color_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Rotors01_Gray_Rotor_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		vector = _DiffuseNorm,0.54,0.24,0.50
		vector = _MetalNorm,0.82,0.83,0.51
		vector = _SmoothnessNorm,0.82,0.83,0.51

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_plain_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_plain_paint
	}
}	



@PART[rotor_02]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = rotor_02_GrayWithStripes_BG
			displayName = Gray with Stripes Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00
			
			EXTRA_INFO
			{
				textureSet0 = OLM_Recolour_Rotor02_GrayWithStripes_Rotor_BG
				textureSet1 = OLM_Recolour_Rotor02_Base001_BG
			}
		}
		VARIANT
		{
			name = rotor_02_Gray_BG
			displayName = Gray Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00

			EXTRA_INFO
			{
				textureSet0 = OLM_Recolour_Rotor02_Gray_Rotor_BG
				textureSet1 = OLM_Recolour_Rotor02_Base001_BG
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Rotor02_GrayWithStripes_Rotor_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		vector = _DiffuseNorm,0.54,0.24,0.50
		vector = _MetalNorm,0.82,0.83,0.51
		vector = _SmoothnessNorm,0.82,0.83,0.51

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_color_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_color_paint		
	}
}	
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Rotor02_Base001_BG
	@MATERIAL
	{
		mesh = Base_001

		vector = _DiffuseNorm,0.54,0.24,0.50
		vector = _MetalNorm,0.82,0.83,0.51
		vector = _SmoothnessNorm,0.82,0.83,0.51

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_color_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_color_paint		
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Rotor02_Gray_Rotor_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		vector = _DiffuseNorm,0.54,0.24,0.50
		vector = _MetalNorm,0.82,0.83,0.51
		vector = _SmoothnessNorm,0.82,0.83,0.51

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_plain_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_plain_paint
	}
}	



@PART[rotor_02s]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = rotor_02s_GrayWithStripes_BG
			displayName = Gray with Stripes Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00
			
			EXTRA_INFO
			{
				textureSet0 = OLM_Recolour_Rotor02s_GrayWithStripes_Rotor_BG
				textureSet1 = OLM_Recolour_Rotor02s_Base001_BG
			}
		}
		VARIANT
		{
			name = rotor_02s_Gray_BG
			displayName = Gray Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00

			EXTRA_INFO
			{
				textureSet0 = OLM_Recolour_Rotor02s_Gray_Rotor_BG
				textureSet1 = OLM_Recolour_Rotor02s_Base001_BG
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Rotor02s_GrayWithStripes_Rotor_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		vector = _DiffuseNorm,0.54,0.24,0.50
		vector = _MetalNorm,0.82,0.83,0.51
		vector = _SmoothnessNorm,0.82,0.83,0.51

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_color_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_color_paint		
	}
}	
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Rotor02s_Base001_BG
	@MATERIAL
	{
		mesh = Base_001

		vector = _DiffuseNorm,0.54,0.24,0.50
		vector = _MetalNorm,0.82,0.83,0.51
		vector = _SmoothnessNorm,0.82,0.83,0.51

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_color_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_color_paint		
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Rotor02s_Gray_Rotor_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		vector = _DiffuseNorm,0.54,0.24,0.50
		vector = _MetalNorm,0.82,0.83,0.51
		vector = _SmoothnessNorm,0.82,0.83,0.51

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_plain_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_01_plain_paint
	}
}	



@PART[rotor_03,rotor_03s]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = rotor_03_GrayWithStripes_BG
			displayName = Gray With Stripes Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00
			
			EXTRA_INFO
			{
				textureSet = OLM_Recolour_Rotors03_GrayWithStripes_BG
			}
		}
		VARIANT
		{
			name = rotor_03_Gray_BG
			displayName = Gray Recolour
			primaryColor = #ff0000
			secondaryColor = #00ff00

			EXTRA_INFO
			{
				textureSet = OLM_Recolour_Rotors03_Gray_BG
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Rotors03_GrayWithStripes_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		// Green is not used
		vector = _DiffuseNorm,0.54,0.24,0.50
		vector = _MetalNorm,0.82,0.83,0.51
		vector = _SmoothnessNorm,0.82,0.83,0.51

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_03_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_03_color_paint		
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Rotors03_Gray_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		// Only Red is used
		vector = _DiffuseNorm,0.54,0.24,0.50
		vector = _MetalNorm,0.82,0.83,0.51
		vector = _SmoothnessNorm,0.82,0.83,0.51

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_03_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_Rotor_03_plain_paint		
	}
}



// R121 Turboshaft Engine
@PART[RotorEngine_02]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = OLM_Recolour_RotorEngine_02_BG
	}

}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_RotorEngine_02_BG
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		vector = _DiffuseNorm,0.72,0.59,0.20
		vector = _MetalNorm,0.86,0.78,0.60
		vector = _SmoothnessNorm,0.86,0.78,0.60

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_02_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_RotorEngine_02_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_RotorEngine_02_paint
	}
}


// R7000 Turboshaft Engine
@PART[RotorEngine_03]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = OLM_Recolour_RotorEngine_03_Engine_BG
	}
	@MODULE[KSPTextureSwitch],1
	{
		textureSet = OLM_Recolour_RotorEngine_03_Rotor_BG
	}	
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_RotorEngine_03_Engine_BG
	@MATERIAL
	{
		mesh = RotorEngine_03

		vector = _DiffuseNorm,0.70,0.56,0.22
		vector = _MetalNorm,0.94,0.94,0.65
		vector = _SmoothnessNorm,0.94,0.94,0.65
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_03_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_RotorEngine_03_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_RotorEngine_03_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_RotorEngine_03_Rotor_BG
	@MATERIAL
	{
		mesh = Rotor

		vector = _DiffuseNorm,0.70,0.58,0.13
		vector = _MetalNorm,0.57,0.86,0.57
		vector = _SmoothnessNorm,0.57,0.86,0.57
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_03_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Robotics/OLM_RotorEngine_03_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Robotics/OLM_RotorEngine_03_paint
	}
}


// FAN BLADES

@PART[largeFanBlade,mediumFanBlade,smallFanBlade]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = OLM_Recolour_FanBlades_BG
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_FanBlades_BG
	@MATERIAL
	{
		mesh = mount
		mesh = Fan
		mesh = bladeFlipped
		mesh = blade

		vector = _DiffuseNorm,0.49,0.22,0.64
		vector = _MetalNorm,0.79,0.64,0.75
		vector = _SmoothnessNorm,0.79,0.64,0.75
				
		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/fan_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Propellers/OLM_fan_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Propellers/OLM_fan_paint
	}
}


@PART[largeHeliBlade,mediumHeliBlade,smallHeliBlade]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = OLM_Recolour_HeliBlades
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_HeliBlades
	@MATERIAL
	{
		mesh = mount
		mesh = bladeFlipped
		mesh = blade

		vector = _DiffuseNorm,0.56,0.20,0.65
		vector = _MetalNorm,0.85,0.63,0.80
		vector = _SmoothnessNorm,0.85,0.63,0.80
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/copterBlades_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Propellers/OLM_copterBlades_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Propellers/OLM_copterBlades_paint
	}
}


@PART[largePropeller,mediumPropeller,smallPropeller]:FOR[zzzz_Something_after_P_because_]:NEEDS[TexturesUnlimited]
{
	@MODULE[KSPTextureSwitch],0
	{
		textureSet = OLM_Recolour_Propellers
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited]
{
	@name = OLM_Recolour_Propellers
	@MATERIAL
	{
		mesh = mount
		mesh = bladeFlipped
		mesh = blade

		vector = _DiffuseNorm,0.49,0.22,0.64
		vector = _MetalNorm,0.79,0.64,0.75
		vector = _SmoothnessNorm,0.79,0.64,0.75
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/blade_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_BG_AllInOne/Propellers/OLM_blade_spec
		texture = _MaskTex,TURD/TU_BG_AllInOne/Propellers/OLM_blade_paint
	}
}


