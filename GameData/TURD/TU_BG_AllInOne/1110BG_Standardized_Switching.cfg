// OnlyLightMatters: File to enable the texture switching for SERENITY

//
//    █████╗ ███████╗██████╗  ██████╗
//   ██╔══██╗██╔════╝██╔══██╗██╔═══██╗
//   ███████║█████╗  ██████╔╝██║   ██║
//   ██╔══██║██╔══╝  ██╔══██╗██║   ██║
//   ██║  ██║███████╗██║  ██║╚██████╔╝
//   ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝ ╚═════╝

// Nosecones
// SquadExpansion/Serenity/Parts/Aero/

@PART[noseconeTiny,noseconeVS]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_bgnosecones
		textureSet = Stock_Default_bgnosecones
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_bgnosecones
	@MATERIAL
	{
		mesh = PropCap_01
		mesh = PropCap_02
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/copterBlades_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// FanShrouds
// SquadExpansion/Serenity/Parts/Aero/

@PART[FanShroud_01]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
    !MODULE[ModulePartVariants],*{}
	MODULE
	{
	    name = ModulePartVariants
	    baseVariant = GrayStripes
	    useMultipleDragCubes = false
		baseThemeName = Gray with Stripes
		baseDisplayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes		

		VARIANT
		{
            name = GrayStripes
  			primaryColor = #999999
			secondaryColor = #4b7c9a
			displayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes

			EXTRA_INFO
			{
			    textureSet = Stock_Default_FanShrouds_Striped
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_FanShrouds_Grey
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
@PART[FanShroud_02]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
    !MODULE[ModulePartVariants],*{}
	MODULE
	{
	    name = ModulePartVariants
	    baseVariant = GrayStripes
	    useMultipleDragCubes = false
		baseThemeName = Gray with Stripes
		baseDisplayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes		

		VARIANT
		{
            name = GrayStripes
  			primaryColor = #999999
			secondaryColor = #b08b39
			displayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes

			EXTRA_INFO
			{
			    textureSet = Stock_Default_FanShrouds_Striped
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_FanShrouds_Grey
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
@PART[FanShroud_03]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
    !MODULE[ModulePartVariants],*{}
	MODULE
	{
	    name = ModulePartVariants
	    baseVariant = GrayStripes
	    useMultipleDragCubes = false
		baseThemeName = Gray with Stripes
		baseDisplayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes		

		VARIANT
		{
            name = GrayStripes
  			primaryColor = #999999
			secondaryColor = #915934
			displayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes

			EXTRA_INFO
			{
			    textureSet = Stock_Default_FanShrouds_Striped
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_FanShrouds_Grey
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_FanShrouds_Striped
	@MATERIAL
	{
		mesh = Shroud
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Aero/Assets/shroudsDiffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_FanShrouds_Grey
	@MATERIAL
	{
		mesh = Shroud
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Aero/Assets/shroudsDiffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


//         ███████╗ ██████╗██╗███████╗███╗   ██╗ ██████╗███████╗
//         ██╔════╝██╔════╝██║██╔════╝████╗  ██║██╔════╝██╔════╝
//         ███████╗██║     ██║█████╗  ██╔██╗ ██║██║     █████╗
//         ╚════██║██║     ██║██╔══╝  ██║╚██╗██║██║     ██╔══╝
//         ███████║╚██████╗██║███████╗██║ ╚████║╚██████╗███████╗
//         ╚══════╝ ╚═════╝╚═╝╚══════╝╚═╝  ╚═══╝ ╚═════╝╚══════╝


// Robotic Arms - Science
// CRSY Light Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S1]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Instruments
		currentTextureSet = Stock_Default_RobotArmScanner_S1_common
		textureSet = Stock_Default_RobotArmScanner_S1_common
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Arm
		currentTextureSet = Stock_Default_RobotArmScanner_S1_Arm
		textureSet = Stock_Default_RobotArmScanner_S1_Arm
	}	
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_RobotArmScanner_S1_common
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm_001
		mesh = UpperArm_001
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount_001
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_RobotArmScanner_S1_Arm
	@MATERIAL
	{
		mesh = Mount
		mesh = BaseRotator_001
		mesh = LowerArm
		mesh = UpperArm
		mesh = InstrumentHousing
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/SmallArm_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/SmallArm_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}	
}



// Robotic Arms - Science
// SPRT Medium Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S2]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Instruments
		currentTextureSet = Stock_Default_RobotArmScanner_S2_common
		textureSet = Stock_Default_RobotArmScanner_S2_common
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Arm
		currentTextureSet = Stock_Default_RobotArmScanner_S2_Arm
		textureSet = Stock_Default_RobotArmScanner_S2_Arm
	}	
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_RobotArmScanner_S2_common
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm		
		mesh = UpperArm
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount_001
		mesh = LAOCIS_Mount
		mesh = LAOCIS
		mesh = Mount_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_RobotArmScanner_S2_Arm
	@MATERIAL
	{
		mesh = Mount
		mesh = BaseRotator_001
		mesh = LowerArm_001		
		mesh = UpperArm_001
		mesh = InstrumentHousing
		mesh = InstrumentHousing_001
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm_2_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm_2_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}	
}



// Robotic Arms - Science
// SPRT Medium Scanning Arm - SquadExpansion/Serenity/Parts/Science/RobotArmScanner/
@PART[RobotArmScanner_S3]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Instruments
		currentTextureSet = Stock_Default_RobotArmScanner_S3_common
		textureSet = Stock_Default_RobotArmScanner_S3_common
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Arm
		currentTextureSet = Stock_Default_RobotArmScanner_S3_Arm
		textureSet = Stock_Default_RobotArmScanner_S3_Arm
	}	
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_RobotArmScanner_S3_common
	@MATERIAL
	{
		mesh = BaseRotator
		mesh = LowerArm
		mesh = UpperArm
		mesh = Gimbal
		mesh = InstrumentMount
		mesh = DrillBase
		mesh = DrillPipe
		mesh = DrillHead
		mesh = MicroMount
		mesh = Microscope
		mesh = XRaySpec
		mesh = Mount
		mesh = LAOCIS_Mount
		mesh = LAOCIS

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/GenericParts_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_RobotArmScanner_S3_Arm
	@MATERIAL
	{
		mesh = BaseRotator_001
		mesh = LowerArm_001
		mesh = UpperArm_001
		mesh = InstrumentHousing
		mesh = Mount_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm3_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Science/RobotArmScanner/Assets/ROCArm3_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}	
}



// Deployed Central Station
@PART[DeployedCentralStation]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_DeployedCentralStation
		textureSet = Stock_Default_DeployedCentralStation
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_DeployedCentralStation

	@MATERIAL
	{
		@shader = KSP/Emissive/Specular

		mesh = CentralStation_Fin
		mesh = ANT_1
		mesh = ANT_2
		mesh = ANT_3
		mesh = ANT_4a
		mesh = ANT_4b
		mesh = ANT_4c
		mesh = ANT_4d
		mesh = Console
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/centralStation_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/centralStation_emissive
	}
	MATERIAL
	{
		mode = create
		shader = Legacy Shaders/Transparent/VertexLit	

		mesh = Screen
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Wavelenght2
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}	
	MATERIAL
	{
		mode = create
		shader = KSP/Emissive/Specular
		
		mesh = Button_001
		mesh = Button_002
		mesh = Button_003
		mesh = Button_004
		mesh = Button_005
		mesh = Button_006
		mesh = Button_007
		mesh = Button_008
		mesh = Button_009
		mesh = Console_002
		mesh = Switch1
		mesh = Switch2
		mesh = Switch3
		mesh = Switch4
		mesh = Switch5
		mesh = CentralStation_001		

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
	}		
}	



// Go-ob ED Monitor
@PART[DeployedGoExOb]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_DeployedGoExOb
		textureSet = Stock_Default_DeployedGoExOb
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_DeployedGoExOb

	@MATERIAL
	{
		@shader = KSP/Specular

		mesh = LowerArm
		mesh = UpperArm
		mesh = Bracket
		mesh = Camera
		mesh = Base
		mesh = CamLid
		mesh = Display
		mesh = Goo
		mesh = GooDoor
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/goex_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Bumped Specular (Mapped)
		
		mesh = GooGrid
		mesh = CameraLens
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/goex_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		texture = _SpecMap,SquadExpansion/Serenity/Parts/DeployedScience/Assets/goex_specMapped 		
	}	
	MATERIAL
	{
		mode = create
		shader = KSP/Alpha/Translucent Additive

		mesh = Screen
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Waveleght3
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}	
	MATERIAL
	{
		mode = create
		shader = KSP/Emissive/Specular

		mesh = Button_001
		mesh = Button_002
		mesh = Button_003
		mesh = Button_004
		mesh = Button_005
		mesh = Button_006
		mesh = Button_007
		mesh = Button_008
		mesh = Display_001
		mesh = Switch
		mesh = Switch1
		mesh = Switch2
		mesh = Base_001		

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
	}		
}	

// Ionographer PD-22
@PART[DeployedIONExp]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_DeployedIONExp
		textureSet = Stock_Default_DeployedIONExp
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_DeployedIONExp

	@MATERIAL
	{
		@shader = KSP/Specular
		mesh = baseModel
	
		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/IonExperiment_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Emissive/Specular
		
		mesh = switch1
		mesh = switch2
		mesh = switch3
		mesh = GenericParts		

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
	}		
}	


// Mini-NUK-PD Radioisotope Thermoelectric Generator
@PART[DeployedRTG]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_DeployedRTG
		textureSet = Stock_Default_DeployedRTG
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_DeployedRTG

	@MATERIAL
	{
		@shader = KSP/Specular
		mesh = Lid
		mesh = Pallet

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/RTGCask_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
	MATERIAL
	{
		mode = create	
		shader =  KSP/Emissive/Specular

		mesh = GenericParts
		mesh = Switch1
		mesh = Switch2

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
	}		
}	

// Communotron Ground HG-48
@PART[DeployedSatDish]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_DeployedSatDish
		textureSet = Stock_Default_DeployedSatDish
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_DeployedSatDish

	@MATERIAL
	{
		@shader = KSP/Specular

		mesh = Base
		mesh = MountBase
		mesh = PanelMount
		mesh = DishCore
		mesh = Antenna
		mesh = LeafBot
		mesh = LeafLeft
		mesh = LeafRight
		mesh = LeafTop

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/satDish_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Alpha/Translucent Additive
		
		mesh = Screen (1)

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Grid
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}

	MATERIAL
	{
		mode = create
		shader = KSP/Emissive/Specular
		
		mesh = marcoPantalla
		mesh = polySurface116
		mesh = Switch1
		mesh = Switch2
		mesh = Switch3
		mesh = Switch4
		mesh = BaseGenericParts
		mesh = squareButton1
		mesh = squareButton2
		mesh = squareButton3
		mesh = squareButton4
		mesh = squareButton5
		mesh = squareButton6
		mesh = squareButton7
		mesh = squareButton8
		mesh = squareButton9

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
	}		
}	

// Grand Slam Passive Seismometer
@PART[DeployedSeismicSensor]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_DeployedSeismicSensor
		textureSet = Stock_Default_DeployedSeismicSensor
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_DeployedSeismicSensor

	@MATERIAL
	{
		@shader = KSP/Alpha/Translucent Additive
		mesh = Screen (1)

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Grid
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Alpha/Translucent Additive
		
		mesh = Screen

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/wavelenght5
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}	
	MATERIAL
	{
		mode = create
		shader = KSP/Specular

		mesh = foil_001
		mesh = SensorBase
		mesh = Probe1
		mesh = Probe2

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/seismicSensor_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Bumped Specular (Mapped)
		
		mesh = foil

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/seismicSensor_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/DeployedScience/Assets/seismicSensor_nrm
		texture = _SpecMap,SquadExpansion/Serenity/Parts/DeployedScience/Assets/seismicSensor_specularMapped 		
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Emissive/Specular

		mesh = Switch1
		mesh = Switch2
		mesh = Switch3
		mesh = Switch4
		mesh = GenericParts

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
	}		
}	

// OX-Stat-PD Photovoltaic Panel
@PART[DeployedSolarPanel]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_DeployedSolarPanel
		textureSet = Stock_Default_DeployedSolarPanel
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_DeployedSolarPanel

	@MATERIAL
	{
		@shader = KSP/Specular
		
		mesh = Base
		mesh = PanelMount
		mesh = PanelRoot
		mesh = PanelBottom
		mesh = PanelBottomLeft
		mesh = PanelBottomRight
		mesh = PanelLeft
		mesh = PanelLeftLeft
		mesh = PanelRight
		mesh = PanelRightRight
		mesh = PanelTop
		mesh = PanelTopLeft
		mesh = PanelTopRight

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/solarPanel_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Alpha/Translucent Additive

		mesh = Screen (1)

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Grid
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Alpha/Translucent Additive

		mesh = Screen

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/SolarGraph
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}	

	MATERIAL
	{
		mode = create
		shader = KSP/Emissive/Specular

		mesh = Switch1
		mesh = Switch2
		mesh = Switch3
		mesh = Switch4
		mesh = genericProps
		mesh = genericProps_001
		mesh = genericProps_002

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
	}		
}	


// PD-3 Weather Analyzer
@PART[DeployedWeatherStn]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_DeployedWeatherStn
		textureSet = Stock_Default_DeployedWeatherStn
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_DeployedWeatherStn

	@MATERIAL
	{
		@shader = KSP/Alpha/Translucent Additive
		mesh = Screen_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Screen3
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Alpha/Translucent Additive	
		
		mesh = Screen_002

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/ScreenReadout
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}	
	MATERIAL
	{
		mode = create
		shader = KSP/Bumped Specular

		mesh = Base
		mesh = Console
		mesh = ProbeBase
		mesh = ProbeTip
		mesh = SensorMast
		mesh = Sensor
		mesh = SpinMast1
		mesh = SpinMast2
		mesh = SpinMast3
		mesh = SpinMast4
		mesh = Spinner
		mesh = Vane

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Weather_Station_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/DeployedScience/Assets/Weather_Station_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
	MATERIAL
	{
		mode = create
		shader = KSP/Emissive/Specular
		
		mesh = Base_001
		mesh = button_001
		mesh = button_002
		mesh = button_003
		mesh = button_004
		mesh = button_005
		mesh = button_006
		mesh = button_007
		mesh = button_008
		mesh = button_009
		mesh = button_010
		mesh = Console_001
		mesh = Foot1
		mesh = Foot1_001
		mesh = Foot2
		mesh = Foot3
		mesh = Switch1
		mesh = Switch2
		mesh = Switch3
		mesh = Switch4

		texture = _MainTex,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/DeployedScience/Assets/GenericParts_emissive
	}		
}	


//       ███████╗████████╗██████╗ ██╗   ██╗ ██████╗████████╗██╗   ██╗██████╗  █████╗ ██╗
//       ██╔════╝╚══██╔══╝██╔══██╗██║   ██║██╔════╝╚══██╔══╝██║   ██║██╔══██╗██╔══██╗██║
//       ███████╗   ██║   ██████╔╝██║   ██║██║        ██║   ██║   ██║██████╔╝███████║██║
//       ╚════██║   ██║   ██╔══██╗██║   ██║██║        ██║   ██║   ██║██╔══██╗██╔══██║██║
//       ███████║   ██║   ██║  ██║╚██████╔╝╚██████╗   ██║   ╚██████╔╝██║  ██║██║  ██║███████╗
//       ╚══════╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝  ╚═════╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝


// Grip pads - Structural
// GP-156 Grip Pad - SquadExpansion/Serenity/Parts/Structural/gripPads
@PART[lGripPad,mGripPad,sGripPad]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	@MODULE[ModulePartVariants]
	{
		@VARIANT[Square]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_GripPads
			}
		}
		@VARIANT[Round]
		{
			EXTRA_INFO
			{
				textureSet = Stock_Default_GripPads
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_GripPads
	@MATERIAL
	{
		mesh = round
		mesh = square

		texture = _MainTex,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}



// Grip Strips - Structural
// GP-156 Grip Pad - SquadExpansion/Serenity/Parts/Structural/gripPads
@PART[lGripStrip,sGripStrip]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_GripStrip
		textureSet = Stock_Default_GripStrip
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_GripStrip
	@MATERIAL
	{
		mesh = gripStrip

		texture = _MainTex,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Structural/gripPads/Assets/gripPads_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}



//      ██████╗  ██████╗ ██████╗  ██████╗ ████████╗██╗ ██████╗███████╗
//      ██╔══██╗██╔═══██╗██╔══██╗██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
//      ██████╔╝██║   ██║██████╔╝██║   ██║   ██║   ██║██║     ███████╗
//      ██╔══██╗██║   ██║██╔══██╗██║   ██║   ██║   ██║██║     ╚════██║
//      ██║  ██║╚██████╔╝██████╔╝╚██████╔╝   ██║   ██║╚██████╗███████║
//      ╚═╝  ╚═╝ ╚═════╝ ╚═════╝  ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝




// KAL-1000 Controller
// controller1000 - SquadExpansion/Serenity/Parts/Robotics/Controllers
@PART[controller1000]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_KAL-1000
		textureSet = Stock_Default_KAL-1000
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_KAL-1000
	@MATERIAL
	{
		mesh = controller
		mesh = indicator

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Controllers/roboController_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,SquadExpansion/Serenity/Parts/Robotics/Controllers/roboController_emissive
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// PISTONS
@PART[piston_01,piston_02,piston_03,piston_04]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	// variant contains spaces, cannot see another way to blow squad's work and redo it
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseThemeName = Gray with Stripes
		useMultipleDragCubes = false
		baseVariant = GrayWithStripes

		VARIANT
		{
			name = GrayWithStripes
			primaryColor = #999999
			secondaryColor = #4b7c9a	
			displayName = #autoLOC_8320084	//#autoLOC_8320084 = Gray with Stripes
			
			GAMEOBJECTS
			{
				PistonStripes = true
			}				
			EXTRA_INFO
			{
				textureSet = Stock_Default_Pistons_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			primaryColor = #999999
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray

			GAMEOBJECTS
			{
				PistonStripes = false
			}				
			EXTRA_INFO
			{
				textureSet = Stock_Default_Pistons_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Pistons_GrayWithStripes
	@MATERIAL
	{
		mesh = PistonBase
		mesh = PistonStripes
		mesh = Mid0
		mesh = Mid1
		mesh = PistonTop

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Pistons_Gray
	@MATERIAL
	{
		mesh = PistonBase
		mesh = PistonStripes
		mesh = Mid0
		mesh = Mid1
		mesh = PistonTop

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}


// HINGE Small G-00 Hinge
@PART[hinge_01_s]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #4b7c9a
			//currentTextureSet = Stock_Default_Hinge01s_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge01s_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray with Stripes
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge01s_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Hinge01s_GrayWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-00_Color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Hinge01s_Gray
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}


// HINGE Small G-00 Hinge
@PART[hinge_01]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #b08b39
			//currentTextureSet = Stock_Default_Hinge01_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge01_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge01_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Hinge01_GrayWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_Color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Hinge01_Gray
	@MATERIAL
	{
		mesh = Base
		mesh = Top
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_diffuse_G-11_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Hinge_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}



// G-12L Alligator Hinge
@PART[hinge_03]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #b08b39
			//currentTextureSet = Stock_Default_Hinge03_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge03_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge03_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Hinge03_GrayWithStripes
	@MATERIAL
	{
		mesh = BasePlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = TopPlate
		mesh = Bar2
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Hinge03_Gray
	@MATERIAL
	{
		mesh = BasePlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = TopPlate
		mesh = Bar2
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}


// G-01L Alligator Hinge
@PART[hinge_03_s]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #4b7c9a
			//currentTextureSet = Stock_Default_Hinge03s_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Hinge03s_GrayWithStripes_TopBase
				textureSet1 = Stock_Default_Hinge03s_GrayWithStripes_Other
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge03s_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Hinge03s_GrayWithStripes_TopBase
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03-s_diffuse_Color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Hinge03s_GrayWithStripes_Other
	@MATERIAL
	{
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Hinge03s_Gray
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}



// G-32W Hinge
@PART[hinge_04]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #915934
			//currentTextureSet = Stock_Default_Hinge04_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge04_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_Hinge04_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Hinge04_GrayWithStripes
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_color
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Hinge04_Gray
	@MATERIAL
	{
		mesh = BasePlate
		mesh = TopPlate
		mesh = Bar1
		mesh = BasePlateKnuckle
		mesh = Bar2
		mesh = TopPlateKnuckle

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/hinges-03_diffuse_plain
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}



// Servos
@PART[rotoServo_00,rotoServo_02,rotoServo_03,rotoServo_04]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #b08b39
			secondaryColor = #4b7c9a
			//currentTextureSet = Stock_Default_rotoServos_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = Stock_Default_rotoServos_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_rotoServos_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_rotoServos_GrayWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_rotoServos_Gray
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/rotoServos_nrm
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}




// ROTORS
@PART[rotor_01,rotor_01s]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #4b7c9a
			//currentTextureSet = Stock_Default_Rotors01_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Rotors01_GrayWithStripes_Rotor
				textureSet1 = Stock_Default_Rotors01_Base001
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Rotors01_Gray_Rotor
				textureSet1 = Stock_Default_Rotors01_Base001
			}
		}
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Base and Rotor
		moduleIndex = 0
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Coil
		moduleIndex = 1
	}	
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Rotors01_GrayWithStripes_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Rotors01_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Rotors01_Gray_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	


@PART[rotor_02]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #b08b39
			//currentTextureSet = Stock_Default_Rotor02_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Rotor02_GrayWithStripes_Rotor
				textureSet1 = Stock_Default_Rotor02_Base001
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Rotor02_Gray_Rotor
				textureSet1 = Stock_Default_Rotor02_Base001
			}
		}
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Base and Rotor
		moduleIndex = 0
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Coil
		moduleIndex = 1
	}	
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Rotor02_GrayWithStripes_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Rotor02_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Rotor02_Gray_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	


@PART[rotor_02s]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #b08b39
			//currentTextureSet = Stock_Default_Rotor02s_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Rotor02s_GrayWithStripes_Rotor
				textureSet1 = Stock_Default_Rotor02s_GrayWithStripes_Base001
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet0 = Stock_Default_Rotor02s_Gray_Rotor
				textureSet1 = Stock_Default_Rotor02s_Gray_Base001
			}
		}
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Base and Rotor
		moduleIndex = 0
	}
	MODULE
	{
		name = TUPartVariant
		sectionName = Coil
		moduleIndex = 1
	}	
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Rotor02s_GrayWithStripes_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_02_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Rotor02s_Base001
	@MATERIAL
	{
		mesh = Base_001

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _SpecMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_specular_D
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Rotor02s_Gray_Rotor
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_01_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}	



@PART[rotor_03,rotor_03s]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	!MODULE[ModulePartVariants],*{}
	MODULE
	{
		name = ModulePartVariants
		baseVariant = GrayWithStripes
		useMultipleDragCubes = false
		baseDisplayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
		baseThemeName = Gray with Stripes

		VARIANT
		{
			name = GrayWithStripes
			displayName = #autoLOC_8320084  //#autoLOC_8320084 = Gray with Stripes
			themeName = Gray with Stripes
			primaryColor = #999999
			secondaryColor = #915934
			//currentTextureSet = Stock_Default_Rotors03_GrayWithStripes
			
			EXTRA_INFO
			{
				textureSet = Stock_Default_Rotors03_GrayWithStripes
			}
		}
		VARIANT
		{
			name = Gray
			displayName = #autoLOC_8007101 // autoLOC_8007101 = Gray
			themeName = Gray
			primaryColor = #999999

			EXTRA_INFO
			{
				textureSet = Stock_Default_Rotors03_Gray
			}
		}
	}
	%MODULE[TUPartVariant]
	{
		%name = TUPartVariant
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Rotors03_GrayWithStripes
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_diffuse_color
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Rotors03_Gray
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor

		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_diffuse_plain
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/Rotor_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
	}
}



// R121 Turboshaft Engine
@PART[RotorEngine_02]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_RotorEngine_02
		textureSet = Stock_Default_RotorEngine_02
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_RotorEngine_02
	@MATERIAL
	{
		mesh = Base
		mesh = Rotor
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_02_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


// R7000 Turboshaft Engine
@PART[RotorEngine_03]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Engine
		currentTextureSet = Stock_Default_RotorEngine_03_Engine
		textureSet = Stock_Default_RotorEngine_03_Engine
	}
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Rotor
		currentTextureSet = Stock_Default_RotorEngine_03_Rotor
		textureSet = Stock_Default_RotorEngine_03_Rotor
	}	
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_RotorEngine_03_Engine
	@MATERIAL
	{
		mesh = RotorEngine_03
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_03_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_RotorEngine_03_Rotor
	@MATERIAL
	{
		mesh = Rotor
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_03_diffuse
		texture = _BumpMap,SquadExpansion/Serenity/Parts/Robotics/Assets/RotorEngine_03_normal
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}

// FAN BLADES

@PART[largeFanBlade,mediumFanBlade,smallFanBlade]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_FanBlades
		textureSet = Stock_Default_FanBlades
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_FanBlades
	@MATERIAL
	{
		mesh = mount
		mesh = Fan
		mesh = bladeFlipped
		mesh = blade
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/fan_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


@PART[largeHeliBlade,mediumHeliBlade,smallHeliBlade]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_HeliBlades
		textureSet = Stock_Default_HeliBlades
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_HeliBlades
	@MATERIAL
	{
		mesh = mount
		mesh = bladeFlipped
		mesh = blade
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/copterBlades_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


@PART[largePropeller,mediumPropeller,smallPropeller]:FOR[000_Standardised_Switching]:NEEDS[TexturesUnlimited]
{
	MODULE
	{
		name = KSPTextureSwitch
		sectionName = Appearance
		currentTextureSet = Stock_Default_Propellers
		textureSet = Stock_Default_Propellers
	}
	%MODULE[SSTURecolorGUI]
	{
		%name = SSTURecolorGUI
	}
}
+KSP_TEXTURE_SET[Stock_Default]:NEEDS[TexturesUnlimited]
{
	@name = Stock_Default_Propellers
	@MATERIAL
	{
		mesh = mount
		mesh = bladeFlipped
		mesh = blade
		
		texture = _MainTex,SquadExpansion/Serenity/Parts/Propellers/Assets/blade_diffuse
		texture = _BumpMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Bump
		texture = _Emissive,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Emis
		// texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
	}
}


