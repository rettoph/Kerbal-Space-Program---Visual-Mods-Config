CONTRACT_TYPE
{
	name = BaseRover	  
    title = Scout @/targetBody1 for a Suitable Location to Build a Base
	genericTitle = Scout for a Suitable Location to Build a Base
	description = The scans of @/targetBody1 are inconclusive. We'd like you to scout for a suitable place on the surface.
	genericDescription = Scans have proven inconclusive. We'd like you to scout for a suitable place on the surface.
	group = BasesandStations
    synopsis = Find a suitable location for your @/targetBody1 base.
    completedMessage = This is the spot!
    minExpiry = 3.0
    maxExpiry = 7.0
    cancellable = true
    declinable = true 
    autoAccept = false
    prestige = Significant   
	maxSimultaneous = 1  
    rewardScience = 0.0
    rewardReputation = 2.0
    rewardFunds = Random(20000, 24000)
    failureReputation = 20.0
    failureFunds = 10000.0
    advanceFunds = 1000.0
	targetBody = @/targetBody1
	
DATA:NEEDS[!SCANsat]
	{
		type = CelestialBody
		requiredValue = true
		uniquenessCheck = CONTRACT_ACTIVE
		targetBody1 = LandedBodies().Where(b => b.IsOrbitalSurveyComplete() == true && b.HasSurface()).Random()
		title = Scanning must be complete on a body with a surface.
	}

	DATA:NEEDS[SCANsat]
	{
 		type = CelestialBody
		requiredValue = true
		uniquenessCheck = GROUP_ACTIVE
		targetBody1 = LandedBodies().Where(b => b.SCANsatCoverage("AltimetryHiRes") >= 80 && b.HasSurface()).Random()
		title = Scanning must be complete on a body with a surface.
	}
	
		DATA
	{
        type = List<Vessel>
		requiredValue = false
		BaseList = AllVessels().Where(v => v.VesselType() == Base && v.CelestialBody() == @/targetBody1)
    }
	
	DATA
	{
		type = List<Vessel>
		requiredValue = false
		RoverCheck = [BaseRover].Where(r => r.CelestialBody() == @/targetBody1)
	}
	BEHAVIOUR
{
    name = Expression
    type = Expression
	    CONTRACT_COMPLETED_SUCCESS
    {
        type = bool
		BaseConstruction = true
    }
}
	
    PARAMETER
    {
    name = NewRover
    type = VesselParameterGroup
    title = Find a suitable site to build our base on.
	define = BaseRover
    notes = Once you find the site for your base, change the vessel type to Rover.
	targetBody = @/targetBody1
		
	PARAMETER
	{
    name = ReachState
    type = ReachState
	hideChildren = true
	title = Find a suitable site for a base on @/targetBody1
	targetBody = @/targetBody1
	situation = LANDED
	situation = SPLASHED
	}
	
	PARAMETER
	{
    name = VesselIsType
    type = VesselIsType
	vesselType = Rover
	}
	}
	
	PARAMETER
	{
	name = Duration
    type = Duration
	completeInSequence = true
	duration = 2m
	preWaitText = Searching for suitable site
	waitingText = Surveying Area
	completionText = This will do!
	}
	
	REQUIREMENT
	{
	name = NotHomeworld
	type = Expression
	expression = (!@/targetBody1.IsHomeWorld())
	title = Base must not be on the homeworld
	}
		REQUIREMENT
	{
	name = BaseCount
	type = Expression
	checkOnActiveContract = false
	expression = (@/BaseList.Count() == 0)
	title = Must be no bases on the body
	}
	
	REQUIREMENT
	{
	name = RoverCount
	type = Expression
	checkOnActiveContract = false
	expression = (@/RoverCheck.Count() == 0)
	title = Must not have a scout vehicle deployed on the body
	}
	
		REQUIREMENT
	{
	name = BaseConstruct
	type = Expression
	checkOnActiveContract = false
	expression = ($BaseConstruction != true)
	title = Must not be constructing another base
	}
	
}
