CONTRACT_TYPE
{
    name = BasePopulation
    title = Crew a Base or Station
    genericTitle = Crew a Base or Station
    group = BasesandStations
    description = Our engineers are happy to to have completed @/targetVessel1, but they think that some Kerbals on board would be good.
    genericDescription = Our engineers are happy to to have finished work, but they think that some Kerbals on board would be good.
    synopsis = We want you to bring some Kerbals to @/targetVessel1.
    completedMessage = You have successfully crewed @/targetVessel1.
    minExpiry = 0.0
    maxExpiry = 7.0
    cancellable = true
    declinable = true
    autoAccept = false
    prestige = Significant
    targetBody = @/targetBody1
    maxSimultaneous = 1
    rewardScience = 0.0
    rewardReputation = 10.0
    rewardFunds = Random(40000, 70000)
    failureReputation = 10.00
    failureFunds = 100000.0
    advanceFunds = 1000.0

    DATA
    {
        type = Vessel
        requiredValue = true
        uniquenessCheck = CONTRACT_ACTIVE
        // following fix from this post: https://forum.kerbalspaceprogram.com/index.php?/topic/162133-13-contract-pack-bases-and-stations-continued-6700-240617/&do=findComment&comment=3167131
        targetVessel1 = AllVessels().Where(v => ((v.VesselType() == Base && v.IsLanded()) || (v.VesselType() == Station)) && v.CrewCount()<1 && v.EmptyCrewSpace()>0).SelectUnique()
        title = Must have an uncrewed base or station with seats to fill
    }
    DATA
    {
        type = Location
        vesselLocation = @targetVessel1.Location()
        hidden = true
    }
    DATA
    {
        type = CelestialBody
        requiredValue = true
        targetBody1 = @/targetVessel1.CelestialBody()
        hidden = true
    }

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup
        vessel = @/targetVessel1
        
        PARAMETER
        {
            name = CrewThatVessel
            type = All
            disableOnStateChange = True
            
            PARAMETER
            {
                name = HasCrew
                type = HasCrew
                disableOnStateChange = True
                minCrew = 1
            }
        }
    }

    REQUIREMENT
    {
        name = CompleteContract
        type = CompleteContract
        minCount = 0
        contractType = BasePopulation
        cooldownDuration = 10d
    }
}
