CONTRACT_TYPE:NEEDS[TACLifeSupport|USILifeSupport|IFILifeSupport|Kerbalism|Snacks]
{
	// Unique name of the contract type (required)
	name = LSResupply
	title = Do a supply run to @/targetVessel1.
	genericTitle = Life Support Supply Run
	group = BasesandStations
	description = Apparently letting our Kerbonauts starve will generate bad publicity, run some supplies up to @/targetVessel1.
	genericDescription = Apparently letting our Kerbonauts starve will generate bad publicity, run some supplies up to a station.
	notes = This contract doesn't care how much Life Support you take... but bear in mind it may be a long time before it comes up again.
	synopsis = Take some supplies up to @/targetVessel1.
	completedMessage = Mmm freeze dried bacon *drools*
	minExpiry = 1
	maxExpiry = 7
	cancellable = true
	declinable = true
	rewardScience = 0.0
	rewardReputation = Random(1.0, 20.0)
	rewardFunds = Random(40000, 60000.0)
	failureReputation = Random(1, 10.0)
	failureFunds = Random(1, 10000.0)
	advanceFunds = Random(1, 10000.0)
	targetBody = @/targetBody1
	
	DATA
	{
		type = Vessel
		uniquenessCheck = GROUP_ACTIVE
		requiredValue = true
		targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.CrewCount()>0).Random()
		title = Must have a station with crew
	}
	
	DATA
	{
		type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
		hidden = true
	}
	PARAMETER
	{
		name = All
		type = All
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
	
		PARAMETER:NEEDS[TACLifeSupport|Kerbalism]
		{
			name = Food
			type = HasResource
			
			resource = Food
			minQuantity = 1
			
			title = Have food on board your vessel
		}
	
		PARAMETER:NEEDS[USILifeSupport]
		{
			name = Supplies
			type = HasResource
			
			resource = Supplies
			minQuantity = 1
			
			title = Have Supplies on board your vessel
		}
		
		PARAMETER:NEEDS[IFILifeSupport]
		{
			name = LifeSupport
			type = HasResource
			resource = LifeSupport
			minQuantity = 1
			title = Have LifeSupport on board your vessel
		}
		
		PARAMETER:NEEDS[Snacks]
		{
			name = Snacks
			type = HasResource
			resource = Snacks
			minQuantity = 1
			title = Have Snacks on board your vessel
		}
	
		PARAMETER
		{
			name = DockwithStation
			type = Docking
			vessel = @/targetVessel1
			title = Dock with @/targetVessel1
			completeInSequence = true
		}
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = LSResupply
		checkOnActiveContract = false
		minCount = 0
		cooldownDuration = 10d
	}

	REQUIREMENT
	{
		name = RandomRoll
		type = Expression
		checkOnActiveContract = false
		expression = @BasesandStations:randomRoll >5
		title = The RNG must like you
	}
}
