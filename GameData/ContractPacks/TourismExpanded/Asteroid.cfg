CONTRACT_TYPE
{
    name = TourismAsteroid
    title = Visit an asteroid with @TourismExpanded:touristCount.Print() tourists
    genericTitle = Visit an asteroid with tourists
    group = TourismExpanded

    description = This group of @TourismExpanded:touristCount.Print() tourists wishes to see @targetVessel up close
    genericDescription = This group of tourists wishes to see an asteroid up close
    synopsis = Visit @targetVessel then bring them home
    completedMessage = The tourists have successfully made it back from the asteroid

    minExpiry = 5
    maxExpiry = 10
    deadline = 1

    prestige = Significant

    targetBody = Sun()

    maxSimultaneous = 10

    rewardReputation = 1.0
    failureReputation = 10.0

    DATA
    {
        type = Vessel

        uniquenessCheck = CONTRACT_ALL
        title = Must have a base with sufficient empty space

        targetVessel = AllVessels().Where(v => v.VesselType() == SpaceObject && v.CelestialBody().IsSun()).Random()
    }

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        vessel = @/targetVessel

        duration = 1d

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Pilot
        }

        PARAMETER
        {
            name = HasPassengers
            type = HasPassengers
        }
    }

    PARAMETER
    {
        name = RecoverKerbal
        type = RecoverKerbal

        completeInSequence = true
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers

        count = @TourismExpanded:touristCount
    }

    BEHAVIOUR
    {
        name = SetDeadline
        type = SetDeadline

        targetVessel = @/targetVessel
    }

    BEHAVIOUR
    {
        name = SetRewardFunds
        type = SetRewardFunds

        landing = false
        multiplier = 1.5
        count = @TourismExpanded:touristCount
        targetVessel = @/targetVessel
    }

    REQUIREMENT
    {
        name = Facility
        type = Facility

        facility = TrackingStation
        minLevel = 3
    }
}