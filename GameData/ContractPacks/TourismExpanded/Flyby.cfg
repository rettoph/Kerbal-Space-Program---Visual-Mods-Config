CONTRACT_TYPE
{
    name = TourismFlyby
    title = Flyby of @targetBody with @TourismExpanded:touristCount.Print() tourists
    genericTitle = Flyby with tourists
    group = TourismExpanded

    description = This group of @TourismExpanded:touristCount.Print() tourists wishes to do a flyby of @targetBody
    genericDescription = A group of tourists wishes to do a flyby
    synopsis = Flyby @targetBody then bring them home
    completedMessage = The tourists have successfully made it back from @targetBody

    minExpiry = 5
    maxExpiry = 10
    deadline = 1

    prestige = Trivial

    targetBody = OrbitedBodies().Where(b => !b.IsHomeWorld() && !b.IsSun()).Random()

    maxSimultaneous = 10

    rewardReputation = 1.0
    failureReputation = 10.0

    DATA
    {
        type = CelestialBody

        uniquenessCheck = CONTRACT_ACTIVE
        hidden = true

        body = @targetBody
    }

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        title = Do a flyby of @/targetBody

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Pilot
        }

        PARAMETER
        {
            name = HasPassengers
            type = HasPassengers
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            maxAltitude = @/targetBody.SpaceAltitudeThreshold()
        }
    }

    PARAMETER
    {
        name = RecoverKerbal
        type = RecoverKerbal

        completeInSequence = true
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers

        count = @TourismExpanded:touristCount
    }

    BEHAVIOUR
    {
        name = SetDeadline
        type = SetDeadline

        delay = 3
    }

    BEHAVIOUR
    {
        name = SetRewardFunds
        type = SetRewardFunds

        landing = false
        count = @TourismExpanded:touristCount
    }

    REQUIREMENT
    {
        name = Orbit
        type = Orbit
        checkOnActiveContract = false
    }
}