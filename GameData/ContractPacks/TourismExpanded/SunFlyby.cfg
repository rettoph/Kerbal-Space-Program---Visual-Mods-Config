CONTRACT_TYPE
{
    name = TourismSunFlyby
    title = Fly close to @targetBody with @TourismExpanded:touristCount.Print() tourists
    genericTitle = Fly close to the sun with tourists
    group = TourismExpanded

    description = This group of @TourismExpanded:touristCount.Print() tourists wishes to fly close to @targetBody
    genericDescription = A group of tourists wishes to fly close to the sun
    synopsis = Bring these tourists close to @targetBody then bring them home
    completedMessage = The tourists have successfully made it back from @targetBody

    minExpiry = 5
    maxExpiry = 10
    deadline = 1

    prestige = Exceptional

    targetBody = HomeWorld().Parent()

    maxSimultaneous = 1

    rewardReputation = 3.0
    failureReputation = 10.0

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        title = Do a flyby of @/targetBody

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Pilot
        }

        PARAMETER
        {
            name = HasPassengers
            type = HasPassengers
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            maxAltitude = @/targetBody.Radius() * 2
        }
    }

    PARAMETER
    {
        name = RecoverKerbal
        type = RecoverKerbal

        completeInSequence = true
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers

        count = @TourismExpanded:touristCount
    }

    BEHAVIOUR
    {
        name = SetDeadline
        type = SetDeadline
    }

    BEHAVIOUR
    {
        name = SetRewardFunds
        type = SetRewardFunds

        landing = false
        multiplier = 0.5
        count = @TourismExpanded:touristCount
    }

    REQUIREMENT
    {
        name = Orbit
        type = Orbit

        checkOnActiveContract = false
    }
}