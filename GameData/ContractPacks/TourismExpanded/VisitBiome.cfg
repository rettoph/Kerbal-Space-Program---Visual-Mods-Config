CONTRACT_TYPE
{
    name = TourismVisitBiome
    title = Visit @targetBiome with @TourismExpanded:touristCount.Print() tourists
    genericTitle = Visit a biome with tourists
    group = TourismExpanded

    description = This group of @TourismExpanded:touristCount.Print() tourists wishes to visit @targetBiome
    genericDescription = A group of tourists wishes to visit a specific biome
    synopsis = Bring these tourists to @targetBiome then bring them home
    completedMessage = The tourists have successfully made it back from @targetBiome

    minExpiry = 5
    maxExpiry = 10
    deadline = 1

    prestige = Significant

    targetBody = @targetBiome.CelestialBody()

    maxSimultaneous = 10

    rewardReputation = 3.0
    failureReputation = 10.0

    DATA
    {
        type = Biome
        title = Randomly selected biome

        uniquenessCheck = CONTRACT_ACTIVE

        targetBiome = LandedBodies().Where(b => b != HomeWorld()).Random().Biomes().Random()
    }

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        duration = 2h

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Pilot
        }

        PARAMETER
        {
            name = HasPassengers
            type = HasPassengers
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            biome = @/targetBiome

            situation = LANDED
        }
    }

    PARAMETER
    {
        name = RecoverKerbal
        type = RecoverKerbal

        completeInSequence = true
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers

        count = @TourismExpanded:touristCount
    }

    BEHAVIOUR
    {
        name = SetDeadline
        type = SetDeadline
    }

    BEHAVIOUR
    {
        name = SetRewardFunds
        type = SetRewardFunds

        landing = true
        count = @TourismExpanded:touristCount
    }

    REQUIREMENT
    {
        name = Landing
        type = Landing
        checkOnActiveContract = false
    }
}