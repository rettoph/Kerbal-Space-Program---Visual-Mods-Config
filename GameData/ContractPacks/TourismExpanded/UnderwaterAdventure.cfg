CONTRACT_TYPE
{
    name = TourismUnderwaterAdventure
    title = Underwater Adventure on @targetBody with @TourismExpanded:touristCount.Print() tourists
    genericTitle = Underwater Adventure
    group = TourismExpanded

    description = This group of @TourismExpanded:touristCount.Print() tourists wishes to go for an underwater adventure on @targetBody
    genericDescription = A group of tourists wishes to go for an underwater adventure
    synopsis = Bring these tourists underwater on @targetBody then bring them home
    completedMessage = The tourists have successfully made it back from their underwater adventure on @targetBody

    minExpiry = 5
    maxExpiry = 10
    deadline = 0

    prestige = Exceptional

    targetBody = LandedBodies().Where(b => b.HasOcean()).Random()

    maxSimultaneous = 10

    rewardReputation = 3.0
    failureReputation = 10.0

    DATA
    {
        type = CelestialBody

        uniquenessCheck = CONTRACT_ACTIVE
        hidden = true

        body = @targetBody
    }

    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        duration = 5m

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Pilot
        }

        PARAMETER
        {
            name = HasPassengers
            type = HasPassengers
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState

            maxAltitude = -1.0

            situation = SPLASHED
        }
    }

    PARAMETER
    {
        name = RecoverKerbal
        type = RecoverKerbal

        completeInSequence = true
    }

    BEHAVIOUR
    {
        name = SpawnPassengers
        type = SpawnPassengers

        count = @TourismExpanded:touristCount
    }

    BEHAVIOUR
    {
        name = SetDeadline
        type = SetDeadline
    }

    BEHAVIOUR
    {
        name = SetRewardFunds
        type = SetRewardFunds

        landing = true
        multiplier = 1.5
        count = @TourismExpanded:touristCount
    }

    REQUIREMENT
    {
        name = Landing
        type = Landing
        checkOnActiveContract = false
    }
}